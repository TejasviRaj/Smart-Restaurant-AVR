
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001232  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ac  00800060  00001232  000012c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001eb  0080010c  0080010c  00001372  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001372  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013a4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002bc8  00000000  00000000  00001570  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009dc  00000000  00000000  00004138  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013d4  00000000  00000000  00004b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000464  00000000  00000000  00005ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000726  00000000  00000000  0000634c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001414  00000000  00000000  00006a72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00007e86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__vector_13>
      38:	0c 94 03 08 	jmp	0x1006	; 0x1006 <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e3       	ldi	r30, 0x32	; 50
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 30       	cpi	r26, 0x0C	; 12
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	22 e0       	ldi	r18, 0x02	; 2
      78:	ac e0       	ldi	r26, 0x0C	; 12
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 3f       	cpi	r26, 0xF7	; 247
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 ce 07 	call	0xf9c	; 0xf9c <main>
      8a:	0c 94 17 09 	jmp	0x122e	; 0x122e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      92:	95 ed       	ldi	r25, 0xD5	; 213
      94:	9a 95       	dec	r25
      96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
      98:	00 00       	nop
#define	LCD_STROBE()	((CPORT |= (1 << EN)),(CPORT &= ~(1 << EN)))
static void lcd_write(uint8_t c)
{
	_delay_us(40);

	if(c & 0x80)
      9a:	88 23       	and	r24, r24
      9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
	DPORT |=  (1 << D7);
      9e:	da 9a       	sbi	0x1b, 2	; 27
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
	else
	DPORT &= ~(1 << D7);
      a2:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x40)
      a4:	86 ff       	sbrs	r24, 6
      a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
	DPORT |=  (1 << D6);
      a8:	db 9a       	sbi	0x1b, 3	; 27
      aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
	else
	DPORT &= ~(1 << D6);
      ac:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x20)
      ae:	85 ff       	sbrs	r24, 5
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
	DPORT |=  (1 << D5);
      b2:	dc 9a       	sbi	0x1b, 4	; 27
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
	else
	DPORT &= ~(1 << D5);
      b6:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x10)
      b8:	84 ff       	sbrs	r24, 4
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
	DPORT |=  (1 << D4);
      bc:	dd 9a       	sbi	0x1b, 5	; 27
      be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
	else
	DPORT &= ~(1 << D4);
      c0:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      c2:	de 9a       	sbi	0x1b, 6	; 27
      c4:	de 98       	cbi	0x1b, 6	; 27
	
	

	if(c & 0x08)
      c6:	83 ff       	sbrs	r24, 3
      c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
	
	DPORT |=  (1 << D7);
      ca:	da 9a       	sbi	0x1b, 2	; 27
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
	else
	DPORT &= ~(1 << D7);
      ce:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x04)
      d0:	82 ff       	sbrs	r24, 2
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
	DPORT |=  (1 << D6);
      d4:	db 9a       	sbi	0x1b, 3	; 27
      d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
	else
	DPORT &= ~(1 << D6);
      d8:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x02)
      da:	81 ff       	sbrs	r24, 1
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
	DPORT |=  (1 << D5);
      de:	dc 9a       	sbi	0x1b, 4	; 27
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
	else
	DPORT &= ~(1 << D5);
      e2:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x01)
      e4:	80 ff       	sbrs	r24, 0
      e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
	DPORT |=  (1 << D4);
      e8:	dd 9a       	sbi	0x1b, 5	; 27
      ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
	else
	DPORT &= ~(1 << D4);
      ec:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      ee:	de 9a       	sbi	0x1b, 6	; 27
      f0:	de 98       	cbi	0x1b, 6	; 27
      f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
#include "lcd.h"


void lcd_clear(void)
{
	CPORT &= ~(1 << RS);
      f4:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(1<<LCD_CLR);
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	8f e3       	ldi	r24, 0x3F	; 63
      fe:	9f e1       	ldi	r25, 0x1F	; 31
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
     104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
     106:	00 00       	nop
     108:	08 95       	ret

0000010a <_Z8lcd_gotoh>:
	_delay_ms(2);
}

void lcd_goto(unsigned char pos)
{
	CPORT &= ~(1 << RS);
     10a:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(0x80|pos);
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     112:	08 95       	ret

00000114 <_Z10lcd_gotoxyhh>:
}


void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     114:	90 e4       	ldi	r25, 0x40	; 64
     116:	69 9f       	mul	r22, r25
     118:	80 0d       	add	r24, r0
     11a:	11 24       	eor	r1, r1
     11c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_gotoh>
     120:	08 95       	ret

00000122 <_Z8lcd_initv>:
}

void lcd_init()
{
	DDR(CPORT) |= (1 << RS);
     122:	d7 9a       	sbi	0x1a, 7	; 26
	DDR(CPORT) |= (1 << EN);
     124:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDR(DPORT) |= (1 << D7);
     126:	d2 9a       	sbi	0x1a, 2	; 26
	DDR(DPORT) |= (1 << D6);
     128:	d3 9a       	sbi	0x1a, 3	; 26
	DDR(DPORT) |= (1 << D5);
     12a:	d4 9a       	sbi	0x1a, 4	; 26
	DDR(DPORT) |= (1 << D4);
     12c:	d5 9a       	sbi	0x1a, 5	; 26
	
	CPORT &= ~(1 << RS);
     12e:	df 98       	cbi	0x1b, 7	; 27
	CPORT &= ~(1 << EN);
     130:	de 98       	cbi	0x1b, 6	; 27
     132:	8f e5       	ldi	r24, 0x5F	; 95
     134:	9a ee       	ldi	r25, 0xEA	; 234
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <_Z8lcd_initv+0x14>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8lcd_initv+0x1a>
     13c:	00 00       	nop
	
	_delay_ms(15);

	DPORT |= (1 << D4);
     13e:	dd 9a       	sbi	0x1b, 5	; 27
	DPORT |= (1 << D5);
     140:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     142:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     144:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     146:	de 9a       	sbi	0x1b, 6	; 27
     148:	de 98       	cbi	0x1b, 6	; 27
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	9e e4       	ldi	r25, 0x4E	; 78
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <_Z8lcd_initv+0x2c>
     152:	00 c0       	rjmp	.+0      	; 0x154 <_Z8lcd_initv+0x32>
     154:	00 00       	nop
	_delay_ms(5);
	LCD_STROBE();
     156:	de 9a       	sbi	0x1b, 6	; 27
     158:	de 98       	cbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	8f e1       	ldi	r24, 0x1F	; 31
     15c:	93 e0       	ldi	r25, 0x03	; 3
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <_Z8lcd_initv+0x3c>
     162:	00 c0       	rjmp	.+0      	; 0x164 <_Z8lcd_initv+0x42>
     164:	00 00       	nop
	_delay_us(200);
	LCD_STROBE();
     166:	de 9a       	sbi	0x1b, 6	; 27
     168:	de 98       	cbi	0x1b, 6	; 27
     16a:	8f e1       	ldi	r24, 0x1F	; 31
     16c:	93 e0       	ldi	r25, 0x03	; 3
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x4c>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_Z8lcd_initv+0x52>
     174:	00 00       	nop
	_delay_us(200);
	
	
	DPORT &= ~(1 << D4);
     176:	dd 98       	cbi	0x1b, 5	; 27
	DPORT |=  (1 << D5);
     178:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     17a:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     17c:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     17e:	de 9a       	sbi	0x1b, 6	; 27
     180:	de 98       	cbi	0x1b, 6	; 27

	lcd_write(0x28);
     182:	88 e2       	ldi	r24, 0x28	; 40
     184:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_write(0b00001100);
     188:	8c e0       	ldi	r24, 0x0C	; 12
     18a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_clear();
     18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_write(0x6);
     192:	86 e0       	ldi	r24, 0x06	; 6
     194:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     198:	08 95       	ret

0000019a <_Z8lcd_putsPKc>:
}

void lcd_puts(const char * s)
{
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
	CPORT|= (1 << RS);
     1a0:	df 9a       	sbi	0x1b, 7	; 27
	while(*s)
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <_Z8lcd_putsPKc+0x1a>
     1a8:	21 96       	adiw	r28, 0x01	; 1
	lcd_write(*s++);
     1aa:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
}

void lcd_puts(const char * s)
{
	CPORT|= (1 << RS);
	while(*s)
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <_Z8lcd_putsPKc+0x10>
	lcd_write(*s++);
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <_Z8lcd_putcc>:

void lcd_putc(char x)
{
	CPORT|= (1 << RS);
     1ba:	df 9a       	sbi	0x1b, 7	; 27
	lcd_write(x);
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     1c0:	08 95       	ret

000001c2 <_Z7lcd_numi>:
}

void lcd_num(int in)
{
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	c4 56       	subi	r28, 0x64	; 100
     1d4:	d1 09       	sbc	r29, r1
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	bc 01       	movw	r22, r24
     1e2:	ce 01       	movw	r24, r28
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	7c 01       	movw	r14, r24
     1e8:	fc 01       	movw	r30, r24
	int c;
	char temp[100];
	int index=0;
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	10 e0       	ldi	r17, 0x00	; 0
	do
	{
		c=in%10;
     1ee:	2a e0       	ldi	r18, 0x0A	; 10
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_Z7lcd_numi+0x34>
		in=in/10;
		temp[index]=c+'0';
		index++;
     1f4:	8c 01       	movw	r16, r24
	char temp[100];
	int index=0;
	do
	{
		c=in%10;
		in=in/10;
     1f6:	cb 01       	movw	r24, r22
     1f8:	b9 01       	movw	r22, r18
     1fa:	0e 94 b3 08 	call	0x1166	; 0x1166 <__divmodhi4>
		temp[index]=c+'0';
     1fe:	90 e3       	ldi	r25, 0x30	; 48
     200:	98 0f       	add	r25, r24
     202:	91 93       	st	Z+, r25
		index++;
     204:	c8 01       	movw	r24, r16
     206:	01 96       	adiw	r24, 0x01	; 1
void lcd_num(int in)
{
	int c;
	char temp[100];
	int index=0;
	do
     208:	61 15       	cp	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	99 f7       	brne	.-26     	; 0x1f4 <_Z7lcd_numi+0x32>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     20e:	11 23       	and	r17, r17
     210:	64 f0       	brlt	.+24     	; 0x22a <_Z7lcd_numi+0x68>
     212:	0c 0f       	add	r16, r28
     214:	1d 1f       	adc	r17, r29
     216:	0e 5f       	subi	r16, 0xFE	; 254
     218:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_putc(temp[i]);
     21a:	f8 01       	movw	r30, r16
     21c:	82 91       	ld	r24, -Z
     21e:	8f 01       	movw	r16, r30
     220:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z8lcd_putcc>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     224:	0e 15       	cp	r16, r14
     226:	1f 05       	cpc	r17, r15
     228:	c1 f7       	brne	.-16     	; 0x21a <_Z7lcd_numi+0x58>
	{
		lcd_putc(temp[i]);
	}
}
     22a:	cc 59       	subi	r28, 0x9C	; 156
     22c:	df 4f       	sbci	r29, 0xFF	; 255
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	08 95       	ret

00000246 <_Z13lcd_setCursorii>:
	}
	
	int digitalRead (int s)
	{
		return (PINB & (1<<s));
	}
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	96 1b       	sub	r25, r22
     24a:	69 2f       	mov	r22, r25
     24c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     250:	08 95       	ret

00000252 <_Z10uart0_getsPc>:
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	0f 93       	push	r16
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	c4 56       	subi	r28, 0x64	; 100
     268:	d1 09       	sbc	r29, r1
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	6c 01       	movw	r12, r24
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	7c 01       	movw	r14, r24
     27c:	00 e0       	ldi	r16, 0x00	; 0
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <_Z10uart0_getsPc+0x32>
     282:	89 01       	movw	r16, r18
     284:	0e 94 a1 08 	call	0x1142	; 0x1142 <_Z15uart0_availablev>
     288:	89 2b       	or	r24, r25
     28a:	e1 f3       	breq	.-8      	; 0x284 <_Z10uart0_getsPc+0x32>
     28c:	0e 94 3c 08 	call	0x1078	; 0x1078 <_Z10uart0_getcv>
     290:	f7 01       	movw	r30, r14
     292:	81 93       	st	Z+, r24
     294:	7f 01       	movw	r14, r30
     296:	98 01       	movw	r18, r16
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255
     29c:	80 32       	cpi	r24, 0x20	; 32
     29e:	89 f7       	brne	.-30     	; 0x282 <_Z10uart0_getsPc+0x30>
     2a0:	e1 e0       	ldi	r30, 0x01	; 1
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e0 0f       	add	r30, r16
     2aa:	f1 1f       	adc	r31, r17
     2ac:	10 82       	st	Z, r1
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	c6 01       	movw	r24, r12
     2b6:	0e 94 db 08 	call	0x11b6	; 0x11b6 <strcpy>
     2ba:	cc 59       	subi	r28, 0x9C	; 156
     2bc:	df 4f       	sbci	r29, 0xFF	; 255
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	ef 90       	pop	r14
     2d4:	df 90       	pop	r13
     2d6:	cf 90       	pop	r12
     2d8:	08 95       	ret

000002da <_Z12uart0_getintv>:
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	00 d0       	rcall	.+0      	; 0x2e4 <_Z12uart0_getintv+0xa>
     2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_Z12uart0_getintv+0xc>
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	8e 01       	movw	r16, r28
     2ee:	0f 5f       	subi	r16, 0xFF	; 255
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	c8 01       	movw	r24, r16
     2f4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
     2f8:	d8 01       	movw	r26, r16
     2fa:	0d 90       	ld	r0, X+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <_Z12uart0_getintv+0x20>
     300:	f8 01       	movw	r30, r16
     302:	ad 01       	movw	r20, r26
     304:	41 50       	subi	r20, 0x01	; 1
     306:	51 09       	sbc	r21, r1
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	11 c0       	rjmp	.+34     	; 0x330 <_Z12uart0_getintv+0x56>
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	21 91       	ld	r18, Z+
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	20 53       	subi	r18, 0x30	; 48
     32a:	31 09       	sbc	r19, r1
     32c:	82 0f       	add	r24, r18
     32e:	93 1f       	adc	r25, r19
     330:	e4 17       	cp	r30, r20
     332:	f5 07       	cpc	r31, r21
     334:	61 f7       	brne	.-40     	; 0x30e <_Z12uart0_getintv+0x34>
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <_Z12wait_messagev>:

    void wait_message()
    {
        lcd_clear();
     34a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
        lcd_puts("Please wait");
     34e:	8e e6       	ldi	r24, 0x6E	; 110
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     356:	08 95       	ret

00000358 <_Z5inputv>:
		return ans;
	}
	
	int digitalRead (int s)
	{
		return (PINB & (1<<s));
     358:	86 b3       	in	r24, 0x16	; 22
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
       if (digitalRead(s_zero))
     35a:	83 fb       	bst	r24, 3
     35c:	22 27       	eor	r18, r18
     35e:	20 f9       	bld	r18, 0
     360:	30 e0       	ldi	r19, 0x00	; 0
        lcd_clear();
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
     362:	c9 01       	movw	r24, r18
       if (digitalRead(s_zero))
         a+=1;
       if (digitalRead(s_one))
     364:	b4 99       	sbic	0x16, 4	; 22
         a+=10;
     366:	0a 96       	adiw	r24, 0x0a	; 10
       if (digitalRead(s_two))
     368:	b5 9b       	sbis	0x16, 5	; 22
     36a:	02 c0       	rjmp	.+4      	; 0x370 <_Z5inputv+0x18>
         a+=100;
     36c:	8c 59       	subi	r24, 0x9C	; 156
     36e:	9f 4f       	sbci	r25, 0xFF	; 255
       return(a);
   }
     370:	08 95       	ret

00000372 <_Z15main_menu_printi>:

   void main_menu_print(int first_visit)
   {
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	ec 01       	movw	r28, r24
     lcd_clear();
     378:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     37c:	62 e0       	ldi	r22, 0x02	; 2
     37e:	80 e0       	ldi	r24, 0x00	; 0
     380:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

   void main_menu_print(int first_visit)
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     384:	8f eb       	ldi	r24, 0xBF	; 191
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     38c:	62 e0       	ldi	r22, 0x02	; 2
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");
     394:	8a e7       	ldi	r24, 0x7A	; 122
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     39c:	61 e0       	ldi	r22, 0x01	; 1
     39e:	82 e0       	ldi	r24, 0x02	; 2
     3a0:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");
     3a4:	8c e7       	ldi	r24, 0x7C	; 124
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3ac:	62 e0       	ldi	r22, 0x02	; 2
     3ae:	82 e0       	ldi	r24, 0x02	; 2
     3b0:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");

      lcd_setCursor(2, 0);
      if (first_visit==1)
     3b4:	21 97       	sbiw	r28, 0x01	; 1
     3b6:	29 f4       	brne	.+10     	; 0x3c2 <_Z15main_menu_printi+0x50>
      lcd_puts("Change Food");
     3b8:	8a e8       	ldi	r24, 0x8A	; 138
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3c0:	04 c0       	rjmp	.+8      	; 0x3ca <_Z15main_menu_printi+0x58>
      else
      lcd_puts("Select Food");
     3c2:	86 e9       	ldi	r24, 0x96	; 150
     3c4:	90 e0       	ldi	r25, 0x00	; 0
     3c6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
   }
     3ca:	df 91       	pop	r29
     3cc:	cf 91       	pop	r28
     3ce:	08 95       	ret

000003d0 <_Z17clear_second_linev>:
                lcd_num(food[selected_pk].num);

     }

     void clear_second_line()
     {
     3d0:	cf 93       	push	r28
     3d2:	c0 e0       	ldi	r28, 0x00	; 0
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3d4:	61 e0       	ldi	r22, 0x01	; 1
     3d6:	8c 2f       	mov	r24, r28
     3d8:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
     3dc:	8f eb       	ldi	r24, 0xBF	; 191
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3e4:	cf 5f       	subi	r28, 0xFF	; 255

     }

     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
     3e6:	c0 31       	cpi	r28, 0x10	; 16
     3e8:	a9 f7       	brne	.-22     	; 0x3d4 <_Z17clear_second_linev+0x4>
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
       }
     }
     3ea:	cf 91       	pop	r28
     3ec:	08 95       	ret

000003ee <_Z17select_food_printi>:
      else
      lcd_puts("Select Food");
   }

   void select_food_print(int selected_pk)
     {
     3ee:	0f 93       	push	r16
     3f0:	1f 93       	push	r17
     3f2:	cf 93       	push	r28
     3f4:	df 93       	push	r29
     3f6:	8c 01       	movw	r16, r24
               clear_second_line();
     3f8:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <_Z17clear_second_linev>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3fc:	61 e0       	ldi	r22, 0x01	; 1
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
               clear_second_line();

                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);
     404:	8c e1       	ldi	r24, 0x1C	; 28
     406:	80 9f       	mul	r24, r16
     408:	e0 01       	movw	r28, r0
     40a:	81 9f       	mul	r24, r17
     40c:	d0 0d       	add	r29, r0
     40e:	11 24       	eor	r1, r1
     410:	ce 01       	movw	r24, r28
     412:	82 5f       	subi	r24, 0xF2	; 242
     414:	9e 4f       	sbci	r25, 0xFE	; 254
     416:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     41a:	61 e0       	ldi	r22, 0x01	; 1
     41c:	88 e0       	ldi	r24, 0x08	; 8
     41e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);
     422:	c4 5f       	subi	r28, 0xF4	; 244
     424:	de 4f       	sbci	r29, 0xFE	; 254
     426:	8e 89       	ldd	r24, Y+22	; 0x16
     428:	9f 89       	ldd	r25, Y+23	; 0x17
     42a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     42e:	61 e0       	ldi	r22, 0x01	; 1
     430:	8e e0       	ldi	r24, 0x0E	; 14
     432:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);

                 lcd_setCursor(14,1);
                lcd_num(food[selected_pk].num);
     436:	88 8d       	ldd	r24, Y+24	; 0x18
     438:	99 8d       	ldd	r25, Y+25	; 0x19
     43a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

     }
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	08 95       	ret

00000448 <_Z13cannot_cancelv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     448:	2f ef       	ldi	r18, 0xFF	; 255
     44a:	80 e7       	ldi	r24, 0x70	; 112
     44c:	92 e0       	ldi	r25, 0x02	; 2
     44e:	21 50       	subi	r18, 0x01	; 1
     450:	80 40       	sbci	r24, 0x00	; 0
     452:	90 40       	sbci	r25, 0x00	; 0
     454:	e1 f7       	brne	.-8      	; 0x44e <_Z13cannot_cancelv+0x6>
     456:	00 c0       	rjmp	.+0      	; 0x458 <_Z13cannot_cancelv+0x10>
     458:	00 00       	nop
     }

     void cannot_cancel()
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
     45a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
         lcd_puts(" Cannot Cancel ");
     45e:	82 ea       	ldi	r24, 0xA2	; 162
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     466:	61 e0       	ldi	r22, 0x01	; 1
     468:	86 e0       	ldi	r24, 0x06	; 6
     46a:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
         lcd_puts(" Cannot Cancel ");
         lcd_setCursor(6,1);
         lcd_puts(">Ok");
     46e:	82 eb       	ldi	r24, 0xB2	; 178
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
         while(1)
           {
             int in=input();
     476:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
             if (in == ok)
     47a:	20 91 62 00 	lds	r18, 0x0062
     47e:	30 91 63 00 	lds	r19, 0x0063
     482:	82 17       	cp	r24, r18
     484:	93 07       	cpc	r25, r19
     486:	b9 f7       	brne	.-18     	; 0x476 <_Z13cannot_cancelv+0x2e>
				//	_delay_ms(DELAY_TIME);
                 //mainmenu();
                 return ;
                }
           }
     }
     488:	08 95       	ret

0000048a <_Z16display_message1PKc>:

     //confirmation messages
     int display_message1(char const *s)
       {
     48a:	ef 92       	push	r14
     48c:	ff 92       	push	r15
     48e:	0f 93       	push	r16
     490:	1f 93       	push	r17
     492:	cf 93       	push	r28
     494:	df 93       	push	r29
     496:	ec 01       	movw	r28, r24
           lcd_clear();
     498:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
           lcd_puts(s);
     49c:	ce 01       	movw	r24, r28
     49e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4a2:	61 e0       	ldi	r22, 0x01	; 1
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     int display_message1(char const *s)
       {
           lcd_clear();
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");
     4aa:	86 eb       	ldi	r24, 0xB6	; 182
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4b2:	61 e0       	ldi	r22, 0x01	; 1
     4b4:	8c e0       	ldi	r24, 0x0C	; 12
     4b6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");

           lcd_setCursor(12,1);
           lcd_puts("No");
     4ba:	8b eb       	ldi	r24, 0xBB	; 187
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     4c2:	2f ef       	ldi	r18, 0xFF	; 255
     4c4:	8a e6       	ldi	r24, 0x6A	; 106
     4c6:	93 e0       	ldi	r25, 0x03	; 3
     4c8:	21 50       	subi	r18, 0x01	; 1
     4ca:	80 40       	sbci	r24, 0x00	; 0
     4cc:	90 40       	sbci	r25, 0x00	; 0
     4ce:	e1 f7       	brne	.-8      	; 0x4c8 <_Z16display_message1PKc+0x3e>
     4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <_Z16display_message1PKc+0x48>
     4d2:	00 00       	nop
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
     4d4:	c1 e0       	ldi	r28, 0x01	; 1
     4d6:	d0 e0       	ldi	r29, 0x00	; 0
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
                         state=1;
     4d8:	01 e0       	ldi	r16, 0x01	; 1
     4da:	10 e0       	ldi	r17, 0x00	; 0
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
                         state=0;
     4dc:	e1 2c       	mov	r14, r1
     4de:	f1 2c       	mov	r15, r1
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
           while(1)
              {
                    int in=input();
     4e0:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
     4e4:	c1 30       	cpi	r28, 0x01	; 1
     4e6:	d1 05       	cpc	r29, r1
     4e8:	09 f5       	brne	.+66     	; 0x52c <_Z16display_message1PKc+0xa2>
     4ea:	20 91 66 00 	lds	r18, 0x0066
     4ee:	30 91 67 00 	lds	r19, 0x0067
     4f2:	82 17       	cp	r24, r18
     4f4:	93 07       	cpc	r25, r19
     4f6:	39 f0       	breq	.+14     	; 0x506 <_Z16display_message1PKc+0x7c>
     4f8:	20 91 68 00 	lds	r18, 0x0068
     4fc:	30 91 69 00 	lds	r19, 0x0069
     500:	82 17       	cp	r24, r18
     502:	93 07       	cpc	r25, r19
     504:	b1 f5       	brne	.+108    	; 0x572 <_Z16display_message1PKc+0xe8>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     506:	61 e0       	ldi	r22, 0x01	; 1
     508:	82 e0       	ldi	r24, 0x02	; 2
     50a:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                    int in=input();
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
     50e:	8f eb       	ldi	r24, 0xBF	; 191
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     516:	61 e0       	ldi	r22, 0x01	; 1
     518:	8b e0       	ldi	r24, 0x0B	; 11
     51a:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
     51e:	8a e7       	ldi	r24, 0x7A	; 122
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=0;
     526:	ce 2d       	mov	r28, r14
     528:	df 2d       	mov	r29, r15
     52a:	2a c0       	rjmp	.+84     	; 0x580 <_Z16display_message1PKc+0xf6>
                      }
                   else if (state==0 && (in==left ||in==right))
     52c:	20 97       	sbiw	r28, 0x00	; 0
     52e:	09 f5       	brne	.+66     	; 0x572 <_Z16display_message1PKc+0xe8>
     530:	20 91 66 00 	lds	r18, 0x0066
     534:	30 91 67 00 	lds	r19, 0x0067
     538:	82 17       	cp	r24, r18
     53a:	93 07       	cpc	r25, r19
     53c:	39 f0       	breq	.+14     	; 0x54c <_Z16display_message1PKc+0xc2>
     53e:	20 91 68 00 	lds	r18, 0x0068
     542:	30 91 69 00 	lds	r19, 0x0069
     546:	82 17       	cp	r24, r18
     548:	93 07       	cpc	r25, r19
     54a:	99 f4       	brne	.+38     	; 0x572 <_Z16display_message1PKc+0xe8>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     54c:	61 e0       	ldi	r22, 0x01	; 1
     54e:	8b e0       	ldi	r24, 0x0B	; 11
     550:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                         state=0;
                      }
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
     554:	8f eb       	ldi	r24, 0xBF	; 191
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     55c:	61 e0       	ldi	r22, 0x01	; 1
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
     564:	8a e7       	ldi	r24, 0x7A	; 122
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=1;
     56c:	c0 2f       	mov	r28, r16
     56e:	d1 2f       	mov	r29, r17
     570:	07 c0       	rjmp	.+14     	; 0x580 <_Z16display_message1PKc+0xf6>
                      }
                  else if (in==ok)
     572:	20 91 62 00 	lds	r18, 0x0062
     576:	30 91 63 00 	lds	r19, 0x0063
     57a:	82 17       	cp	r24, r18
     57c:	93 07       	cpc	r25, r19
     57e:	51 f0       	breq	.+20     	; 0x594 <_Z16display_message1PKc+0x10a>
     580:	8f ef       	ldi	r24, 0xFF	; 255
     582:	9a e6       	ldi	r25, 0x6A	; 106
     584:	23 e0       	ldi	r18, 0x03	; 3
     586:	81 50       	subi	r24, 0x01	; 1
     588:	90 40       	sbci	r25, 0x00	; 0
     58a:	20 40       	sbci	r18, 0x00	; 0
     58c:	e1 f7       	brne	.-8      	; 0x586 <_Z16display_message1PKc+0xfc>
     58e:	00 c0       	rjmp	.+0      	; 0x590 <_Z16display_message1PKc+0x106>
     590:	00 00       	nop
     592:	a6 cf       	rjmp	.-180    	; 0x4e0 <_Z16display_message1PKc+0x56>
                   return state;

                   _delay_ms(DELAY_TIME_STRAIGHT_START);
               }

       }
     594:	ce 01       	movw	r24, r28
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	1f 91       	pop	r17
     59c:	0f 91       	pop	r16
     59e:	ff 90       	pop	r15
     5a0:	ef 90       	pop	r14
     5a2:	08 95       	ret

000005a4 <_Z8get_infov>:




void get_info()
{
     5a4:	0f 93       	push	r16
     5a6:	1f 93       	push	r17
     5a8:	cf 93       	push	r28
     5aa:	df 93       	push	r29
	uart0_flush();
     5ac:	0e 94 ae 08 	call	0x115c	; 0x115c <_Z11uart0_flushv>
  uart0_putc('1');
     5b0:	81 e3       	ldi	r24, 0x31	; 49
     5b2:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z10uart0_putch>
  while (!(uart0_available()) ) {}
     5b6:	0e 94 a1 08 	call	0x1142	; 0x1142 <_Z15uart0_availablev>
     5ba:	89 2b       	or	r24, r25
     5bc:	e1 f3       	breq	.-8      	; 0x5b6 <_Z8get_infov+0x12>
  num_of_food=uart0_getint();
     5be:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5c2:	90 93 b1 02 	sts	0x02B1, r25
     5c6:	80 93 b0 02 	sts	0x02B0, r24
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     5ca:	18 16       	cp	r1, r24
     5cc:	19 06       	cpc	r1, r25
     5ce:	1c f5       	brge	.+70     	; 0x616 <_Z8get_infov+0x72>
     5d0:	ce e0       	ldi	r28, 0x0E	; 14
     5d2:	d1 e0       	ldi	r29, 0x01	; 1
     5d4:	00 e0       	ldi	r16, 0x00	; 0
     5d6:	10 e0       	ldi	r17, 0x00	; 0
{
    //  Serial.puts("Start");
      food[i].id=uart0_getint();
     5d8:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5dc:	fe 01       	movw	r30, r28
     5de:	32 97       	sbiw	r30, 0x02	; 2
     5e0:	91 83       	std	Z+1, r25	; 0x01
     5e2:	80 83       	st	Z, r24
      uart0_gets(food[i].name);
     5e4:	ce 01       	movw	r24, r28
     5e6:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
      food[i].price=uart0_getint();
     5ea:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5ee:	9d 8b       	std	Y+21, r25	; 0x15
     5f0:	8c 8b       	std	Y+20, r24	; 0x14
      food[i].num=uart0_getint();
     5f2:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5f6:	9f 8b       	std	Y+23, r25	; 0x17
     5f8:	8e 8b       	std	Y+22, r24	; 0x16
      food[i].p=uart0_getint();
     5fa:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5fe:	99 8f       	std	Y+25, r25	; 0x19
     600:	88 8f       	std	Y+24, r24	; 0x18
  while (!(uart0_available()) ) {}
  num_of_food=uart0_getint();
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     602:	0f 5f       	subi	r16, 0xFF	; 255
     604:	1f 4f       	sbci	r17, 0xFF	; 255
     606:	6c 96       	adiw	r28, 0x1c	; 28
     608:	80 91 b0 02 	lds	r24, 0x02B0
     60c:	90 91 b1 02 	lds	r25, 0x02B1
     610:	08 17       	cp	r16, r24
     612:	19 07       	cpc	r17, r25
     614:	0c f3       	brlt	.-62     	; 0x5d8 <_Z8get_infov+0x34>
  }

  // Serial.putsln("Done");


}
     616:	df 91       	pop	r29
     618:	cf 91       	pop	r28
     61a:	1f 91       	pop	r17
     61c:	0f 91       	pop	r16
     61e:	08 95       	ret

00000620 <_Z9send_infov>:

      void send_info()
        {
     620:	0f 93       	push	r16
     622:	1f 93       	push	r17
     624:	cf 93       	push	r28
     626:	df 93       	push	r29
          for (int i=0;i<num_of_food;i++)
     628:	80 91 b0 02 	lds	r24, 0x02B0
     62c:	90 91 b1 02 	lds	r25, 0x02B1
     630:	18 16       	cp	r1, r24
     632:	19 06       	cpc	r1, r25
     634:	04 f5       	brge	.+64     	; 0x676 <_Z9send_infov+0x56>
     636:	cc e0       	ldi	r28, 0x0C	; 12
     638:	d1 e0       	ldi	r29, 0x01	; 1
     63a:	00 e0       	ldi	r16, 0x00	; 0
     63c:	10 e0       	ldi	r17, 0x00	; 0
              {
                uart0_puts("2 ");
     63e:	8e eb       	ldi	r24, 0xBE	; 190
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	0e 94 92 08 	call	0x1124	; 0x1124 <_Z10uart0_putsPKc>
				uart0_putint(food[i].id);
     646:	88 81       	ld	r24, Y
     648:	99 81       	ldd	r25, Y+1	; 0x01
     64a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_Z12uart0_putinti>
                uart0_putc(' ');
     64e:	80 e2       	ldi	r24, 0x20	; 32
     650:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z10uart0_putch>
                uart0_putint(food[i].num);
     654:	88 8d       	ldd	r24, Y+24	; 0x18
     656:	99 8d       	ldd	r25, Y+25	; 0x19
     658:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_Z12uart0_putinti>
                uart0_putc(' ');
     65c:	80 e2       	ldi	r24, 0x20	; 32
     65e:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z10uart0_putch>

}

      void send_info()
        {
          for (int i=0;i<num_of_food;i++)
     662:	0f 5f       	subi	r16, 0xFF	; 255
     664:	1f 4f       	sbci	r17, 0xFF	; 255
     666:	6c 96       	adiw	r28, 0x1c	; 28
     668:	80 91 b0 02 	lds	r24, 0x02B0
     66c:	90 91 b1 02 	lds	r25, 0x02B1
     670:	08 17       	cp	r16, r24
     672:	19 07       	cpc	r17, r25
     674:	24 f3       	brlt	.-56     	; 0x63e <_Z9send_infov+0x1e>
                uart0_putc(' ');
              }



        }
     676:	df 91       	pop	r29
     678:	cf 91       	pop	r28
     67a:	1f 91       	pop	r17
     67c:	0f 91       	pop	r16
     67e:	08 95       	ret

00000680 <_Z11select_foodv>:


}

void  test_main()
{
     680:	1f 93       	push	r17
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     68a:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_Z8get_infov>
     68e:	2f ef       	ldi	r18, 0xFF	; 255
     690:	86 e7       	ldi	r24, 0x76	; 118
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	21 50       	subi	r18, 0x01	; 1
     696:	80 40       	sbci	r24, 0x00	; 0
     698:	90 40       	sbci	r25, 0x00	; 0
     69a:	e1 f7       	brne	.-8      	; 0x694 <_Z11select_foodv+0x14>
     69c:	00 c0       	rjmp	.+0      	; 0x69e <_Z11select_foodv+0x1e>
     69e:	00 00       	nop
     6a0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     6a4:	85 e8       	ldi	r24, 0x85	; 133
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	88 e0       	ldi	r24, 0x08	; 8
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6b8:	81 ec       	ldi	r24, 0xC1	; 193
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	8e e0       	ldi	r24, 0x0E	; 14
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6cc:	8b eb       	ldi	r24, 0xBB	; 187
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6d4:	61 e0       	ldi	r22, 0x01	; 1
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6e0:	8e e0       	ldi	r24, 0x0E	; 14
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6e8:	61 e0       	ldi	r22, 0x01	; 1
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	88 e0       	ldi	r24, 0x08	; 8
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6f4:	cc e0       	ldi	r28, 0x0C	; 12
     6f6:	d1 e0       	ldi	r29, 0x01	; 1
     6f8:	8e 89       	ldd	r24, Y+22	; 0x16
     6fa:	9f 89       	ldd	r25, Y+23	; 0x17
     6fc:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     700:	61 e0       	ldi	r22, 0x01	; 1
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	8e e0       	ldi	r24, 0x0E	; 14
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     70c:	88 8d       	ldd	r24, Y+24	; 0x18
     70e:	99 8d       	ldd	r25, Y+25	; 0x19
     710:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     714:	c0 e0       	ldi	r28, 0x00	; 0
     716:	d0 e0       	ldi	r29, 0x00	; 0
     718:	1c e1       	ldi	r17, 0x1C	; 28
     71a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     71e:	20 91 6c 00 	lds	r18, 0x006C
     722:	30 91 6d 00 	lds	r19, 0x006D
     726:	82 17       	cp	r24, r18
     728:	93 07       	cpc	r25, r19
     72a:	69 f4       	brne	.+26     	; 0x746 <_Z11select_foodv+0xc6>
     72c:	20 97       	sbiw	r28, 0x00	; 0
     72e:	31 f4       	brne	.+12     	; 0x73c <_Z11select_foodv+0xbc>
     730:	c0 91 b0 02 	lds	r28, 0x02B0
     734:	d0 91 b1 02 	lds	r29, 0x02B1
     738:	21 97       	sbiw	r28, 0x01	; 1
     73a:	01 c0       	rjmp	.+2      	; 0x73e <_Z11select_foodv+0xbe>
     73c:	21 97       	sbiw	r28, 0x01	; 1
     73e:	ce 01       	movw	r24, r28
     740:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     744:	dd c0       	rjmp	.+442    	; 0x900 <__stack+0xa1>
     746:	20 91 6a 00 	lds	r18, 0x006A
     74a:	30 91 6b 00 	lds	r19, 0x006B
     74e:	82 17       	cp	r24, r18
     750:	93 07       	cpc	r25, r19
     752:	81 f4       	brne	.+32     	; 0x774 <_Z11select_foodv+0xf4>
     754:	80 91 b0 02 	lds	r24, 0x02B0
     758:	90 91 b1 02 	lds	r25, 0x02B1
     75c:	01 97       	sbiw	r24, 0x01	; 1
     75e:	8c 17       	cp	r24, r28
     760:	9d 07       	cpc	r25, r29
     762:	11 f0       	breq	.+4      	; 0x768 <_Z11select_foodv+0xe8>
     764:	21 96       	adiw	r28, 0x01	; 1
     766:	02 c0       	rjmp	.+4      	; 0x76c <_Z11select_foodv+0xec>
     768:	c0 e0       	ldi	r28, 0x00	; 0
     76a:	d0 e0       	ldi	r29, 0x00	; 0
     76c:	ce 01       	movw	r24, r28
     76e:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     772:	c6 c0       	rjmp	.+396    	; 0x900 <__stack+0xa1>
     774:	20 91 66 00 	lds	r18, 0x0066
     778:	30 91 67 00 	lds	r19, 0x0067
     77c:	82 17       	cp	r24, r18
     77e:	93 07       	cpc	r25, r19
     780:	d1 f4       	brne	.+52     	; 0x7b6 <_Z11select_foodv+0x136>
     782:	1c 9f       	mul	r17, r28
     784:	f0 01       	movw	r30, r0
     786:	1d 9f       	mul	r17, r29
     788:	f0 0d       	add	r31, r0
     78a:	11 24       	eor	r1, r1
     78c:	e4 5f       	subi	r30, 0xF4	; 244
     78e:	fe 4f       	sbci	r31, 0xFE	; 254
     790:	80 8d       	ldd	r24, Z+24	; 0x18
     792:	91 8d       	ldd	r25, Z+25	; 0x19
     794:	00 97       	sbiw	r24, 0x00	; 0
     796:	09 f4       	brne	.+2      	; 0x79a <_Z11select_foodv+0x11a>
     798:	b3 c0       	rjmp	.+358    	; 0x900 <__stack+0xa1>
     79a:	1c 9f       	mul	r17, r28
     79c:	f0 01       	movw	r30, r0
     79e:	1d 9f       	mul	r17, r29
     7a0:	f0 0d       	add	r31, r0
     7a2:	11 24       	eor	r1, r1
     7a4:	e4 5f       	subi	r30, 0xF4	; 244
     7a6:	fe 4f       	sbci	r31, 0xFE	; 254
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	91 8f       	std	Z+25, r25	; 0x19
     7ac:	80 8f       	std	Z+24, r24	; 0x18
     7ae:	ce 01       	movw	r24, r28
     7b0:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     7b4:	a5 c0       	rjmp	.+330    	; 0x900 <__stack+0xa1>
     7b6:	20 91 68 00 	lds	r18, 0x0068
     7ba:	30 91 69 00 	lds	r19, 0x0069
     7be:	82 17       	cp	r24, r18
     7c0:	93 07       	cpc	r25, r19
     7c2:	81 f4       	brne	.+32     	; 0x7e4 <_Z11select_foodv+0x164>
     7c4:	1c 9f       	mul	r17, r28
     7c6:	f0 01       	movw	r30, r0
     7c8:	1d 9f       	mul	r17, r29
     7ca:	f0 0d       	add	r31, r0
     7cc:	11 24       	eor	r1, r1
     7ce:	e4 5f       	subi	r30, 0xF4	; 244
     7d0:	fe 4f       	sbci	r31, 0xFE	; 254
     7d2:	80 8d       	ldd	r24, Z+24	; 0x18
     7d4:	91 8d       	ldd	r25, Z+25	; 0x19
     7d6:	01 96       	adiw	r24, 0x01	; 1
     7d8:	91 8f       	std	Z+25, r25	; 0x19
     7da:	80 8f       	std	Z+24, r24	; 0x18
     7dc:	ce 01       	movw	r24, r28
     7de:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     7e2:	8e c0       	rjmp	.+284    	; 0x900 <__stack+0xa1>
     7e4:	20 91 64 00 	lds	r18, 0x0064
     7e8:	30 91 65 00 	lds	r19, 0x0065
     7ec:	82 17       	cp	r24, r18
     7ee:	93 07       	cpc	r25, r19
     7f0:	69 f5       	brne	.+90     	; 0x84c <_Z11select_foodv+0x1cc>
     7f2:	87 ec       	ldi	r24, 0xC7	; 199
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     7fa:	89 2b       	or	r24, r25
     7fc:	49 f0       	breq	.+18     	; 0x810 <_Z11select_foodv+0x190>
     7fe:	1c 9f       	mul	r17, r28
     800:	f0 01       	movw	r30, r0
     802:	1d 9f       	mul	r17, r29
     804:	f0 0d       	add	r31, r0
     806:	11 24       	eor	r1, r1
     808:	e4 5f       	subi	r30, 0xF4	; 244
     80a:	fe 4f       	sbci	r31, 0xFE	; 254
     80c:	11 8e       	std	Z+25, r1	; 0x19
     80e:	10 8e       	std	Z+24, r1	; 0x18
     810:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     814:	85 e8       	ldi	r24, 0x85	; 133
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	70 e0       	ldi	r23, 0x00	; 0
     820:	88 e0       	ldi	r24, 0x08	; 8
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     828:	81 ec       	ldi	r24, 0xC1	; 193
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	8e e0       	ldi	r24, 0x0E	; 14
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     83c:	8b eb       	ldi	r24, 0xBB	; 187
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     844:	ce 01       	movw	r24, r28
     846:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     84a:	5a c0       	rjmp	.+180    	; 0x900 <__stack+0xa1>
     84c:	20 91 62 00 	lds	r18, 0x0062
     850:	30 91 63 00 	lds	r19, 0x0063
     854:	82 17       	cp	r24, r18
     856:	93 07       	cpc	r25, r19
     858:	49 f5       	brne	.+82     	; 0x8ac <__stack+0x4d>
     85a:	88 ed       	ldi	r24, 0xD8	; 216
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     862:	89 2b       	or	r24, r25
     864:	29 f0       	breq	.+10     	; 0x870 <__stack+0x11>
     866:	0e 94 10 03 	call	0x620	; 0x620 <_Z9send_infov>
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	54 c0       	rjmp	.+168    	; 0x918 <__stack+0xb9>
     870:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     874:	85 e8       	ldi	r24, 0x85	; 133
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     87c:	60 e0       	ldi	r22, 0x00	; 0
     87e:	70 e0       	ldi	r23, 0x00	; 0
     880:	88 e0       	ldi	r24, 0x08	; 8
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     888:	81 ec       	ldi	r24, 0xC1	; 193
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     890:	60 e0       	ldi	r22, 0x00	; 0
     892:	70 e0       	ldi	r23, 0x00	; 0
     894:	8e e0       	ldi	r24, 0x0E	; 14
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     89c:	8b eb       	ldi	r24, 0xBB	; 187
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8a4:	ce 01       	movw	r24, r28
     8a6:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     8aa:	2a c0       	rjmp	.+84     	; 0x900 <__stack+0xa1>
     8ac:	20 91 60 00 	lds	r18, 0x0060
     8b0:	30 91 61 00 	lds	r19, 0x0061
     8b4:	82 17       	cp	r24, r18
     8b6:	93 07       	cpc	r25, r19
     8b8:	19 f5       	brne	.+70     	; 0x900 <__stack+0xa1>
     8ba:	89 ee       	ldi	r24, 0xE9	; 233
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     8c2:	89 2b       	or	r24, r25
     8c4:	39 f5       	brne	.+78     	; 0x914 <__stack+0xb5>
     8c6:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     8ca:	85 e8       	ldi	r24, 0x85	; 133
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8d2:	60 e0       	ldi	r22, 0x00	; 0
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	88 e0       	ldi	r24, 0x08	; 8
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8de:	81 ec       	ldi	r24, 0xC1	; 193
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	8e e0       	ldi	r24, 0x0E	; 14
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8f2:	8b eb       	ldi	r24, 0xBB	; 187
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8fa:	ce 01       	movw	r24, r28
     8fc:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     900:	2f ef       	ldi	r18, 0xFF	; 255
     902:	80 e7       	ldi	r24, 0x70	; 112
     904:	92 e0       	ldi	r25, 0x02	; 2
     906:	21 50       	subi	r18, 0x01	; 1
     908:	80 40       	sbci	r24, 0x00	; 0
     90a:	90 40       	sbci	r25, 0x00	; 0
     90c:	e1 f7       	brne	.-8      	; 0x906 <__stack+0xa7>
     90e:	00 c0       	rjmp	.+0      	; 0x910 <__stack+0xb1>
     910:	00 00       	nop
     912:	03 cf       	rjmp	.-506    	; 0x71a <_Z11select_foodv+0x9a>
     914:	80 e0       	ldi	r24, 0x00	; 0
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	08 95       	ret

00000920 <_Z13selected_foodv>:
     920:	cf 92       	push	r12
     922:	df 92       	push	r13
     924:	ef 92       	push	r14
     926:	ff 92       	push	r15
     928:	0f 93       	push	r16
     92a:	1f 93       	push	r17
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	cd b7       	in	r28, 0x3d	; 61
     932:	de b7       	in	r29, 0x3e	; 62
     934:	c8 5c       	subi	r28, 0xC8	; 200
     936:	d1 09       	sbc	r29, r1
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	f8 94       	cli
     93c:	de bf       	out	0x3e, r29	; 62
     93e:	0f be       	out	0x3f, r0	; 63
     940:	cd bf       	out	0x3d, r28	; 61
     942:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     946:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_Z8get_infov>
     94a:	2f ef       	ldi	r18, 0xFF	; 255
     94c:	36 e7       	ldi	r19, 0x76	; 118
     94e:	81 e0       	ldi	r24, 0x01	; 1
     950:	21 50       	subi	r18, 0x01	; 1
     952:	30 40       	sbci	r19, 0x00	; 0
     954:	80 40       	sbci	r24, 0x00	; 0
     956:	e1 f7       	brne	.-8      	; 0x950 <_Z13selected_foodv+0x30>
     958:	00 c0       	rjmp	.+0      	; 0x95a <_Z13selected_foodv+0x3a>
     95a:	00 00       	nop
     95c:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     960:	40 91 b0 02 	lds	r20, 0x02B0
     964:	50 91 b1 02 	lds	r21, 0x02B1
     968:	14 16       	cp	r1, r20
     96a:	15 06       	cpc	r1, r21
     96c:	04 f5       	brge	.+64     	; 0x9ae <_Z13selected_foodv+0x8e>
     96e:	e4 e2       	ldi	r30, 0x24	; 36
     970:	f1 e0       	ldi	r31, 0x01	; 1
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	00 e0       	ldi	r16, 0x00	; 0
     978:	10 e0       	ldi	r17, 0x00	; 0
     97a:	20 81       	ld	r18, Z
     97c:	31 81       	ldd	r19, Z+1	; 0x01
     97e:	12 16       	cp	r1, r18
     980:	13 06       	cpc	r1, r19
     982:	6c f4       	brge	.+26     	; 0x99e <_Z13selected_foodv+0x7e>
     984:	d8 01       	movw	r26, r16
     986:	aa 0f       	add	r26, r26
     988:	bb 1f       	adc	r27, r27
     98a:	21 e0       	ldi	r18, 0x01	; 1
     98c:	30 e0       	ldi	r19, 0x00	; 0
     98e:	2c 0f       	add	r18, r28
     990:	3d 1f       	adc	r19, r29
     992:	a2 0f       	add	r26, r18
     994:	b3 1f       	adc	r27, r19
     996:	8d 93       	st	X+, r24
     998:	9c 93       	st	X, r25
     99a:	0f 5f       	subi	r16, 0xFF	; 255
     99c:	1f 4f       	sbci	r17, 0xFF	; 255
     99e:	01 96       	adiw	r24, 0x01	; 1
     9a0:	7c 96       	adiw	r30, 0x1c	; 28
     9a2:	84 17       	cp	r24, r20
     9a4:	95 07       	cpc	r25, r21
     9a6:	4c f3       	brlt	.-46     	; 0x97a <_Z13selected_foodv+0x5a>
     9a8:	01 15       	cp	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	c1 f4       	brne	.+48     	; 0x9de <_Z13selected_foodv+0xbe>
     9ae:	8a ef       	ldi	r24, 0xFA	; 250
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9b6:	61 e0       	ldi	r22, 0x01	; 1
     9b8:	70 e0       	ldi	r23, 0x00	; 0
     9ba:	86 e0       	ldi	r24, 0x06	; 6
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9c2:	82 eb       	ldi	r24, 0xB2	; 178
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9ca:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     9ce:	20 91 62 00 	lds	r18, 0x0062
     9d2:	30 91 63 00 	lds	r19, 0x0063
     9d6:	82 17       	cp	r24, r18
     9d8:	93 07       	cpc	r25, r19
     9da:	b9 f7       	brne	.-18     	; 0x9ca <_Z13selected_foodv+0xaa>
     9dc:	a0 c0       	rjmp	.+320    	; 0xb1e <_Z13selected_foodv+0x1fe>
     9de:	85 e8       	ldi	r24, 0x85	; 133
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	88 e0       	ldi	r24, 0x08	; 8
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9f2:	81 ec       	ldi	r24, 0xC1	; 193
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	70 e0       	ldi	r23, 0x00	; 0
     9fe:	8e e0       	ldi	r24, 0x0E	; 14
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a06:	8b eb       	ldi	r24, 0xBB	; 187
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a0e:	61 e0       	ldi	r22, 0x01	; 1
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a1a:	89 81       	ldd	r24, Y+1	; 0x01
     a1c:	9a 81       	ldd	r25, Y+2	; 0x02
     a1e:	2c e1       	ldi	r18, 0x1C	; 28
     a20:	28 9f       	mul	r18, r24
     a22:	70 01       	movw	r14, r0
     a24:	29 9f       	mul	r18, r25
     a26:	f0 0c       	add	r15, r0
     a28:	11 24       	eor	r1, r1
     a2a:	c7 01       	movw	r24, r14
     a2c:	82 5f       	subi	r24, 0xF2	; 242
     a2e:	9e 4f       	sbci	r25, 0xFE	; 254
     a30:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a34:	61 e0       	ldi	r22, 0x01	; 1
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	88 e0       	ldi	r24, 0x08	; 8
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a40:	c7 01       	movw	r24, r14
     a42:	84 5f       	subi	r24, 0xF4	; 244
     a44:	9e 4f       	sbci	r25, 0xFE	; 254
     a46:	7c 01       	movw	r14, r24
     a48:	fc 01       	movw	r30, r24
     a4a:	86 89       	ldd	r24, Z+22	; 0x16
     a4c:	97 89       	ldd	r25, Z+23	; 0x17
     a4e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     a52:	61 e0       	ldi	r22, 0x01	; 1
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	8e e0       	ldi	r24, 0x0E	; 14
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a5e:	f7 01       	movw	r30, r14
     a60:	80 8d       	ldd	r24, Z+24	; 0x18
     a62:	91 8d       	ldd	r25, Z+25	; 0x19
     a64:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     a68:	e1 2c       	mov	r14, r1
     a6a:	f1 2c       	mov	r15, r1
     a6c:	01 50       	subi	r16, 0x01	; 1
     a6e:	11 09       	sbc	r17, r1
     a70:	c1 2c       	mov	r12, r1
     a72:	d1 2c       	mov	r13, r1
     a74:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     a78:	20 91 6c 00 	lds	r18, 0x006C
     a7c:	30 91 6d 00 	lds	r19, 0x006D
     a80:	82 17       	cp	r24, r18
     a82:	93 07       	cpc	r25, r19
     a84:	b1 f4       	brne	.+44     	; 0xab2 <_Z13selected_foodv+0x192>
     a86:	e1 14       	cp	r14, r1
     a88:	f1 04       	cpc	r15, r1
     a8a:	11 f4       	brne	.+4      	; 0xa90 <_Z13selected_foodv+0x170>
     a8c:	78 01       	movw	r14, r16
     a8e:	03 c0       	rjmp	.+6      	; 0xa96 <_Z13selected_foodv+0x176>
     a90:	f1 e0       	ldi	r31, 0x01	; 1
     a92:	ef 1a       	sub	r14, r31
     a94:	f1 08       	sbc	r15, r1
     a96:	f7 01       	movw	r30, r14
     a98:	ee 0f       	add	r30, r30
     a9a:	ff 1f       	adc	r31, r31
     a9c:	21 e0       	ldi	r18, 0x01	; 1
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	2c 0f       	add	r18, r28
     aa2:	3d 1f       	adc	r19, r29
     aa4:	e2 0f       	add	r30, r18
     aa6:	f3 1f       	adc	r31, r19
     aa8:	80 81       	ld	r24, Z
     aaa:	91 81       	ldd	r25, Z+1	; 0x01
     aac:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     ab0:	2c c0       	rjmp	.+88     	; 0xb0a <_Z13selected_foodv+0x1ea>
     ab2:	20 91 6a 00 	lds	r18, 0x006A
     ab6:	30 91 6b 00 	lds	r19, 0x006B
     aba:	82 17       	cp	r24, r18
     abc:	93 07       	cpc	r25, r19
     abe:	b9 f4       	brne	.+46     	; 0xaee <_Z13selected_foodv+0x1ce>
     ac0:	0e 15       	cp	r16, r14
     ac2:	1f 05       	cpc	r17, r15
     ac4:	21 f0       	breq	.+8      	; 0xace <_Z13selected_foodv+0x1ae>
     ac6:	3f ef       	ldi	r19, 0xFF	; 255
     ac8:	e3 1a       	sub	r14, r19
     aca:	f3 0a       	sbc	r15, r19
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <_Z13selected_foodv+0x1b2>
     ace:	ec 2c       	mov	r14, r12
     ad0:	fd 2c       	mov	r15, r13
     ad2:	f7 01       	movw	r30, r14
     ad4:	ee 0f       	add	r30, r30
     ad6:	ff 1f       	adc	r31, r31
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	8c 0f       	add	r24, r28
     ade:	9d 1f       	adc	r25, r29
     ae0:	e8 0f       	add	r30, r24
     ae2:	f9 1f       	adc	r31, r25
     ae4:	80 81       	ld	r24, Z
     ae6:	91 81       	ldd	r25, Z+1	; 0x01
     ae8:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     aec:	0e c0       	rjmp	.+28     	; 0xb0a <_Z13selected_foodv+0x1ea>
     aee:	20 91 62 00 	lds	r18, 0x0062
     af2:	30 91 63 00 	lds	r19, 0x0063
     af6:	82 17       	cp	r24, r18
     af8:	93 07       	cpc	r25, r19
     afa:	89 f0       	breq	.+34     	; 0xb1e <_Z13selected_foodv+0x1fe>
     afc:	20 91 60 00 	lds	r18, 0x0060
     b00:	30 91 61 00 	lds	r19, 0x0061
     b04:	82 17       	cp	r24, r18
     b06:	93 07       	cpc	r25, r19
     b08:	51 f0       	breq	.+20     	; 0xb1e <_Z13selected_foodv+0x1fe>
     b0a:	9f ef       	ldi	r25, 0xFF	; 255
     b0c:	e0 e7       	ldi	r30, 0x70	; 112
     b0e:	f2 e0       	ldi	r31, 0x02	; 2
     b10:	91 50       	subi	r25, 0x01	; 1
     b12:	e0 40       	sbci	r30, 0x00	; 0
     b14:	f0 40       	sbci	r31, 0x00	; 0
     b16:	e1 f7       	brne	.-8      	; 0xb10 <_Z13selected_foodv+0x1f0>
     b18:	00 c0       	rjmp	.+0      	; 0xb1a <_Z13selected_foodv+0x1fa>
     b1a:	00 00       	nop
     b1c:	ab cf       	rjmp	.-170    	; 0xa74 <_Z13selected_foodv+0x154>
     b1e:	c8 53       	subi	r28, 0x38	; 56
     b20:	df 4f       	sbci	r29, 0xFF	; 255
     b22:	0f b6       	in	r0, 0x3f	; 63
     b24:	f8 94       	cli
     b26:	de bf       	out	0x3e, r29	; 62
     b28:	0f be       	out	0x3f, r0	; 63
     b2a:	cd bf       	out	0x3d, r28	; 61
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	1f 91       	pop	r17
     b32:	0f 91       	pop	r16
     b34:	ff 90       	pop	r15
     b36:	ef 90       	pop	r14
     b38:	df 90       	pop	r13
     b3a:	cf 90       	pop	r12
     b3c:	08 95       	ret

00000b3e <_Z11change_foodv>:




void change_food()
{
     b3e:	1f 93       	push	r17
     b40:	cf 93       	push	r28
     b42:	df 93       	push	r29
	wait_message();
     b44:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
	get_info();
     b48:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <_Z8get_infov>
     b4c:	2f ef       	ldi	r18, 0xFF	; 255
     b4e:	86 e7       	ldi	r24, 0x76	; 118
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	21 50       	subi	r18, 0x01	; 1
     b54:	80 40       	sbci	r24, 0x00	; 0
     b56:	90 40       	sbci	r25, 0x00	; 0
     b58:	e1 f7       	brne	.-8      	; 0xb52 <_Z11change_foodv+0x14>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <_Z11change_foodv+0x1e>
     b5c:	00 00       	nop
	_delay_ms(DELAY_TIME_GET_INFO);
	lcd_clear();
     b5e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_puts("Food");
     b62:	85 e8       	ldi	r24, 0x85	; 133
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,0);
     b6a:	60 e0       	ldi	r22, 0x00	; 0
     b6c:	70 e0       	ldi	r23, 0x00	; 0
     b6e:	88 e0       	ldi	r24, 0x08	; 8
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("Price");
     b76:	81 ec       	ldi	r24, 0xC1	; 193
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(14,0);
     b7e:	60 e0       	ldi	r22, 0x00	; 0
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	8e e0       	ldi	r24, 0x0E	; 14
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("No");
     b8a:	8b eb       	ldi	r24, 0xBB	; 187
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	int selected_pk=0;
	lcd_setCursor(0,1);
     b92:	61 e0       	ldi	r22, 0x01	; 1
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>

	lcd_puts(food[selected_pk].name);
     b9e:	8e e0       	ldi	r24, 0x0E	; 14
     ba0:	91 e0       	ldi	r25, 0x01	; 1
     ba2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,1);
     ba6:	61 e0       	ldi	r22, 0x01	; 1
     ba8:	70 e0       	ldi	r23, 0x00	; 0
     baa:	88 e0       	ldi	r24, 0x08	; 8
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].price);
     bb2:	cc e0       	ldi	r28, 0x0C	; 12
     bb4:	d1 e0       	ldi	r29, 0x01	; 1
     bb6:	8e 89       	ldd	r24, Y+22	; 0x16
     bb8:	9f 89       	ldd	r25, Y+23	; 0x17
     bba:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

	lcd_setCursor(14,1);
     bbe:	61 e0       	ldi	r22, 0x01	; 1
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	8e e0       	ldi	r24, 0x0E	; 14
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].num);
     bca:	88 8d       	ldd	r24, Y+24	; 0x18
     bcc:	99 8d       	ldd	r25, Y+25	; 0x19
     bce:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
	lcd_puts("Price");

	lcd_setCursor(14,0);
	lcd_puts("No");

	int selected_pk=0;
     bd2:	c0 e0       	ldi	r28, 0x00	; 0
     bd4:	d0 e0       	ldi	r29, 0x00	; 0

		}

		else if (in==del)
		{
			if (food[selected_pk].p==0)
     bd6:	1c e1       	ldi	r17, 0x1C	; 28
	lcd_num(food[selected_pk].num);


	while(1)
	{
		int in=input();
     bd8:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>

		if (in==up)
     bdc:	20 91 6c 00 	lds	r18, 0x006C
     be0:	30 91 6d 00 	lds	r19, 0x006D
     be4:	82 17       	cp	r24, r18
     be6:	93 07       	cpc	r25, r19
     be8:	69 f4       	brne	.+26     	; 0xc04 <_Z11change_foodv+0xc6>
		{
			if (selected_pk==0)  selected_pk=num_of_food-1;
     bea:	20 97       	sbiw	r28, 0x00	; 0
     bec:	31 f4       	brne	.+12     	; 0xbfa <_Z11change_foodv+0xbc>
     bee:	c0 91 b0 02 	lds	r28, 0x02B0
     bf2:	d0 91 b1 02 	lds	r29, 0x02B1
     bf6:	21 97       	sbiw	r28, 0x01	; 1
     bf8:	01 c0       	rjmp	.+2      	; 0xbfc <_Z11change_foodv+0xbe>
			else selected_pk--;
     bfa:	21 97       	sbiw	r28, 0x01	; 1
			select_food_print(selected_pk);
     bfc:	ce 01       	movw	r24, r28
     bfe:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     c02:	15 c1       	rjmp	.+554    	; 0xe2e <_Z11change_foodv+0x2f0>

		}

		else if (in==down)
     c04:	20 91 6a 00 	lds	r18, 0x006A
     c08:	30 91 6b 00 	lds	r19, 0x006B
     c0c:	82 17       	cp	r24, r18
     c0e:	93 07       	cpc	r25, r19
     c10:	81 f4       	brne	.+32     	; 0xc32 <_Z11change_foodv+0xf4>
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     c12:	80 91 b0 02 	lds	r24, 0x02B0
     c16:	90 91 b1 02 	lds	r25, 0x02B1
     c1a:	01 97       	sbiw	r24, 0x01	; 1
     c1c:	8c 17       	cp	r24, r28
     c1e:	9d 07       	cpc	r25, r29
     c20:	11 f0       	breq	.+4      	; 0xc26 <_Z11change_foodv+0xe8>
			else selected_pk++;
     c22:	21 96       	adiw	r28, 0x01	; 1
     c24:	02 c0       	rjmp	.+4      	; 0xc2a <_Z11change_foodv+0xec>

		}

		else if (in==down)
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     c26:	c0 e0       	ldi	r28, 0x00	; 0
     c28:	d0 e0       	ldi	r29, 0x00	; 0
			else selected_pk++;
			select_food_print(selected_pk);
     c2a:	ce 01       	movw	r24, r28
     c2c:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     c30:	fe c0       	rjmp	.+508    	; 0xe2e <_Z11change_foodv+0x2f0>

		}

		else if (in==left)
     c32:	20 91 66 00 	lds	r18, 0x0066
     c36:	30 91 67 00 	lds	r19, 0x0067
     c3a:	82 17       	cp	r24, r18
     c3c:	93 07       	cpc	r25, r19
     c3e:	09 f0       	breq	.+2      	; 0xc42 <_Z11change_foodv+0x104>
     c40:	45 c0       	rjmp	.+138    	; 0xccc <_Z11change_foodv+0x18e>
		{
			if (food[selected_pk].p==0)
     c42:	1c 9f       	mul	r17, r28
     c44:	f0 01       	movw	r30, r0
     c46:	1d 9f       	mul	r17, r29
     c48:	f0 0d       	add	r31, r0
     c4a:	11 24       	eor	r1, r1
     c4c:	e4 5f       	subi	r30, 0xF4	; 244
     c4e:	fe 4f       	sbci	r31, 0xFE	; 254
     c50:	82 8d       	ldd	r24, Z+26	; 0x1a
     c52:	93 8d       	ldd	r25, Z+27	; 0x1b
     c54:	89 2b       	or	r24, r25
     c56:	d1 f4       	brne	.+52     	; 0xc8c <_Z11change_foodv+0x14e>
			{
				if(food[selected_pk].num != 0)
     c58:	1c 9f       	mul	r17, r28
     c5a:	f0 01       	movw	r30, r0
     c5c:	1d 9f       	mul	r17, r29
     c5e:	f0 0d       	add	r31, r0
     c60:	11 24       	eor	r1, r1
     c62:	e4 5f       	subi	r30, 0xF4	; 244
     c64:	fe 4f       	sbci	r31, 0xFE	; 254
     c66:	80 8d       	ldd	r24, Z+24	; 0x18
     c68:	91 8d       	ldd	r25, Z+25	; 0x19
     c6a:	00 97       	sbiw	r24, 0x00	; 0
     c6c:	09 f4       	brne	.+2      	; 0xc70 <_Z11change_foodv+0x132>
     c6e:	df c0       	rjmp	.+446    	; 0xe2e <_Z11change_foodv+0x2f0>
				{
					food[selected_pk].num--;
     c70:	1c 9f       	mul	r17, r28
     c72:	f0 01       	movw	r30, r0
     c74:	1d 9f       	mul	r17, r29
     c76:	f0 0d       	add	r31, r0
     c78:	11 24       	eor	r1, r1
     c7a:	e4 5f       	subi	r30, 0xF4	; 244
     c7c:	fe 4f       	sbci	r31, 0xFE	; 254
     c7e:	01 97       	sbiw	r24, 0x01	; 1
     c80:	91 8f       	std	Z+25, r25	; 0x19
     c82:	80 8f       	std	Z+24, r24	; 0x18
					select_food_print(selected_pk);
     c84:	ce 01       	movw	r24, r28
     c86:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     c8a:	d1 c0       	rjmp	.+418    	; 0xe2e <_Z11change_foodv+0x2f0>
				}

			}
			else
			{
				cannot_cancel();
     c8c:	0e 94 24 02 	call	0x448	; 0x448 <_Z13cannot_cancelv>
				lcd_clear();
     c90:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
				lcd_puts("Food");
     c94:	85 e8       	ldi	r24, 0x85	; 133
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(8,0);
     c9c:	60 e0       	ldi	r22, 0x00	; 0
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	88 e0       	ldi	r24, 0x08	; 8
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("Price");
     ca8:	81 ec       	ldi	r24, 0xC1	; 193
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(14,0);
     cb0:	60 e0       	ldi	r22, 0x00	; 0
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	8e e0       	ldi	r24, 0x0E	; 14
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("No");
     cbc:	8b eb       	ldi	r24, 0xBB	; 187
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				select_food_print(selected_pk);
     cc4:	ce 01       	movw	r24, r28
     cc6:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     cca:	b1 c0       	rjmp	.+354    	; 0xe2e <_Z11change_foodv+0x2f0>





		else if (in==right)
     ccc:	20 91 68 00 	lds	r18, 0x0068
     cd0:	30 91 69 00 	lds	r19, 0x0069
     cd4:	82 17       	cp	r24, r18
     cd6:	93 07       	cpc	r25, r19
     cd8:	81 f4       	brne	.+32     	; 0xcfa <_Z11change_foodv+0x1bc>
		{
			food[selected_pk].num++;
     cda:	1c 9f       	mul	r17, r28
     cdc:	f0 01       	movw	r30, r0
     cde:	1d 9f       	mul	r17, r29
     ce0:	f0 0d       	add	r31, r0
     ce2:	11 24       	eor	r1, r1
     ce4:	e4 5f       	subi	r30, 0xF4	; 244
     ce6:	fe 4f       	sbci	r31, 0xFE	; 254
     ce8:	80 8d       	ldd	r24, Z+24	; 0x18
     cea:	91 8d       	ldd	r25, Z+25	; 0x19
     cec:	01 96       	adiw	r24, 0x01	; 1
     cee:	91 8f       	std	Z+25, r25	; 0x19
     cf0:	80 8f       	std	Z+24, r24	; 0x18
			select_food_print(selected_pk);
     cf2:	ce 01       	movw	r24, r28
     cf4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     cf8:	9a c0       	rjmp	.+308    	; 0xe2e <_Z11change_foodv+0x2f0>

		}

		else if (in==del)
     cfa:	20 91 64 00 	lds	r18, 0x0064
     cfe:	30 91 65 00 	lds	r19, 0x0065
     d02:	82 17       	cp	r24, r18
     d04:	93 07       	cpc	r25, r19
     d06:	d9 f5       	brne	.+118    	; 0xd7e <_Z11change_foodv+0x240>
		{
			if (food[selected_pk].p==0)
     d08:	1c 9f       	mul	r17, r28
     d0a:	f0 01       	movw	r30, r0
     d0c:	1d 9f       	mul	r17, r29
     d0e:	f0 0d       	add	r31, r0
     d10:	11 24       	eor	r1, r1
     d12:	e4 5f       	subi	r30, 0xF4	; 244
     d14:	fe 4f       	sbci	r31, 0xFE	; 254
     d16:	82 8d       	ldd	r24, Z+26	; 0x1a
     d18:	93 8d       	ldd	r25, Z+27	; 0x1b
     d1a:	89 2b       	or	r24, r25
     d1c:	81 f4       	brne	.+32     	; 0xd3e <_Z11change_foodv+0x200>
			{
				if (display_message1("Set the no to 0?"))
     d1e:	87 ec       	ldi	r24, 0xC7	; 199
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     d26:	89 2b       	or	r24, r25
     d28:	61 f0       	breq	.+24     	; 0xd42 <_Z11change_foodv+0x204>
				food[selected_pk].num=0;
     d2a:	1c 9f       	mul	r17, r28
     d2c:	f0 01       	movw	r30, r0
     d2e:	1d 9f       	mul	r17, r29
     d30:	f0 0d       	add	r31, r0
     d32:	11 24       	eor	r1, r1
     d34:	e4 5f       	subi	r30, 0xF4	; 244
     d36:	fe 4f       	sbci	r31, 0xFE	; 254
     d38:	11 8e       	std	Z+25, r1	; 0x19
     d3a:	10 8e       	std	Z+24, r1	; 0x18
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <_Z11change_foodv+0x204>
			}
			else
			cannot_cancel();
     d3e:	0e 94 24 02 	call	0x448	; 0x448 <_Z13cannot_cancelv>

			lcd_clear();
     d42:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     d46:	85 e8       	ldi	r24, 0x85	; 133
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     d4e:	60 e0       	ldi	r22, 0x00	; 0
     d50:	70 e0       	ldi	r23, 0x00	; 0
     d52:	88 e0       	ldi	r24, 0x08	; 8
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     d5a:	81 ec       	ldi	r24, 0xC1	; 193
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     d62:	60 e0       	ldi	r22, 0x00	; 0
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	8e e0       	ldi	r24, 0x0E	; 14
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     d6e:	8b eb       	ldi	r24, 0xBB	; 187
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     d76:	ce 01       	movw	r24, r28
     d78:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     d7c:	58 c0       	rjmp	.+176    	; 0xe2e <_Z11change_foodv+0x2f0>
		}

		else if (in==ok)
     d7e:	20 91 62 00 	lds	r18, 0x0062
     d82:	30 91 63 00 	lds	r19, 0x0063
     d86:	82 17       	cp	r24, r18
     d88:	93 07       	cpc	r25, r19
     d8a:	39 f5       	brne	.+78     	; 0xdda <_Z11change_foodv+0x29c>
		{
			if (display_message1("Save the changes"))
     d8c:	88 ed       	ldi	r24, 0xD8	; 216
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     d94:	89 2b       	or	r24, r25
     d96:	19 f0       	breq	.+6      	; 0xd9e <_Z11change_foodv+0x260>
			{
				send_info();
     d98:	0e 94 10 03 	call	0x620	; 0x620 <_Z9send_infov>
				//_delay_ms(DELAY_TIME);
				return;
     d9c:	52 c0       	rjmp	.+164    	; 0xe42 <_Z11change_foodv+0x304>
			}

			lcd_clear();
     d9e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     da2:	85 e8       	ldi	r24, 0x85	; 133
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	70 e0       	ldi	r23, 0x00	; 0
     dae:	88 e0       	ldi	r24, 0x08	; 8
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     db6:	81 ec       	ldi	r24, 0xC1	; 193
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	8e e0       	ldi	r24, 0x0E	; 14
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     dca:	8b eb       	ldi	r24, 0xBB	; 187
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     dd2:	ce 01       	movw	r24, r28
     dd4:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     dd8:	2a c0       	rjmp	.+84     	; 0xe2e <_Z11change_foodv+0x2f0>

		}


		else if (in==back)
     dda:	20 91 60 00 	lds	r18, 0x0060
     dde:	30 91 61 00 	lds	r19, 0x0061
     de2:	82 17       	cp	r24, r18
     de4:	93 07       	cpc	r25, r19
     de6:	19 f5       	brne	.+70     	; 0xe2e <_Z11change_foodv+0x2f0>
		{
			if (display_message1("Discard Changes?"))
     de8:	89 ee       	ldi	r24, 0xE9	; 233
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	0e 94 45 02 	call	0x48a	; 0x48a <_Z16display_message1PKc>
     df0:	89 2b       	or	r24, r25
     df2:	39 f5       	brne	.+78     	; 0xe42 <_Z11change_foodv+0x304>
			{
				//_delay_ms(DELAY_TIME);
				return ;
			}

			lcd_clear();
     df4:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     df8:	85 e8       	ldi	r24, 0x85	; 133
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     e00:	60 e0       	ldi	r22, 0x00	; 0
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	88 e0       	ldi	r24, 0x08	; 8
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     e0c:	81 ec       	ldi	r24, 0xC1	; 193
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	8e e0       	ldi	r24, 0x0E	; 14
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     e20:	8b eb       	ldi	r24, 0xBB	; 187
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     e28:	ce 01       	movw	r24, r28
     e2a:	0e 94 f7 01 	call	0x3ee	; 0x3ee <_Z17select_food_printi>
     e2e:	2f ef       	ldi	r18, 0xFF	; 255
     e30:	80 e7       	ldi	r24, 0x70	; 112
     e32:	92 e0       	ldi	r25, 0x02	; 2
     e34:	21 50       	subi	r18, 0x01	; 1
     e36:	80 40       	sbci	r24, 0x00	; 0
     e38:	90 40       	sbci	r25, 0x00	; 0
     e3a:	e1 f7       	brne	.-8      	; 0xe34 <_Z11change_foodv+0x2f6>
     e3c:	00 c0       	rjmp	.+0      	; 0xe3e <_Z11change_foodv+0x300>
     e3e:	00 00       	nop
     e40:	cb ce       	rjmp	.-618    	; 0xbd8 <_Z11change_foodv+0x9a>


		_delay_ms(DELAY_TIME_LOOP);
	}

}
     e42:	df 91       	pop	r29
     e44:	cf 91       	pop	r28
     e46:	1f 91       	pop	r17
     e48:	08 95       	ret

00000e4a <_Z8mainmenuv>:
     e4a:	2f ef       	ldi	r18, 0xFF	; 255
     e4c:	8a e6       	ldi	r24, 0x6A	; 106
     e4e:	93 e0       	ldi	r25, 0x03	; 3
     e50:	21 50       	subi	r18, 0x01	; 1
     e52:	80 40       	sbci	r24, 0x00	; 0
     e54:	90 40       	sbci	r25, 0x00	; 0
     e56:	e1 f7       	brne	.-8      	; 0xe50 <_Z8mainmenuv+0x6>
     e58:	00 c0       	rjmp	.+0      	; 0xe5a <_Z8mainmenuv+0x10>
     e5a:	00 00       	nop


void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
     e5c:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	num_of_food=0;
     e60:	10 92 b1 02 	sts	0x02B1, r1
     e64:	10 92 b0 02 	sts	0x02B0, r1
	int state=0;
	int first_visit=0;
	main_menu_print(first_visit);
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	0e 94 b9 01 	call	0x372	; 0x372 <_Z15main_menu_printi>
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
	int first_visit=0;
     e70:	e1 2c       	mov	r14, r1
     e72:	f1 2c       	mov	r15, r1
void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
     e74:	c0 e0       	ldi	r28, 0x00	; 0
     e76:	d0 e0       	ldi	r29, 0x00	; 0
			else
			//selected_food();
			{
				selected_food();
				main_menu_print(first_visit);
				state=0;
     e78:	00 e0       	ldi	r16, 0x00	; 0
     e7a:	10 e0       	ldi	r17, 0x00	; 0
	int first_visit=0;
	main_menu_print(first_visit);

	while(1)
	{
		int in=input();
     e7c:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		//  lcd_puts (in);
		if (state==0&& (in==up ||in==down))
     e80:	20 97       	sbiw	r28, 0x00	; 0
     e82:	31 f5       	brne	.+76     	; 0xed0 <_Z8mainmenuv+0x86>
     e84:	20 91 6c 00 	lds	r18, 0x006C
     e88:	30 91 6d 00 	lds	r19, 0x006D
     e8c:	82 17       	cp	r24, r18
     e8e:	93 07       	cpc	r25, r19
     e90:	41 f0       	breq	.+16     	; 0xea2 <_Z8mainmenuv+0x58>
     e92:	20 91 6a 00 	lds	r18, 0x006A
     e96:	30 91 6b 00 	lds	r19, 0x006B
     e9a:	82 17       	cp	r24, r18
     e9c:	93 07       	cpc	r25, r19
     e9e:	09 f0       	breq	.+2      	; 0xea2 <_Z8mainmenuv+0x58>
     ea0:	75 c0       	rjmp	.+234    	; 0xf8c <_Z8mainmenuv+0x142>
		{
			lcd_setCursor(0,0);
     ea2:	60 2f       	mov	r22, r16
     ea4:	71 2f       	mov	r23, r17
     ea6:	80 2f       	mov	r24, r16
     ea8:	91 2f       	mov	r25, r17
     eaa:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts(" ");
     eae:	8f eb       	ldi	r24, 0xBF	; 191
     eb0:	90 e0       	ldi	r25, 0x00	; 0
     eb2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
			lcd_setCursor(0,1);
     eb6:	61 e0       	ldi	r22, 0x01	; 1
     eb8:	70 e0       	ldi	r23, 0x00	; 0
     eba:	80 2f       	mov	r24, r16
     ebc:	91 2f       	mov	r25, r17
     ebe:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts(">");
     ec2:	8a e7       	ldi	r24, 0x7A	; 122
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
			state=1;
     eca:	c1 e0       	ldi	r28, 0x01	; 1
     ecc:	d0 e0       	ldi	r29, 0x00	; 0
     ece:	44 c0       	rjmp	.+136    	; 0xf58 <_Z8mainmenuv+0x10e>
		}
		else if (state==1 && (in==up ||in==down))
     ed0:	c1 30       	cpi	r28, 0x01	; 1
     ed2:	d1 05       	cpc	r29, r1
     ed4:	09 f0       	breq	.+2      	; 0xed8 <_Z8mainmenuv+0x8e>
     ed6:	52 c0       	rjmp	.+164    	; 0xf7c <_Z8mainmenuv+0x132>
     ed8:	20 91 6c 00 	lds	r18, 0x006C
     edc:	30 91 6d 00 	lds	r19, 0x006D
     ee0:	82 17       	cp	r24, r18
     ee2:	93 07       	cpc	r25, r19
     ee4:	39 f0       	breq	.+14     	; 0xef4 <_Z8mainmenuv+0xaa>
     ee6:	20 91 6a 00 	lds	r18, 0x006A
     eea:	30 91 6b 00 	lds	r19, 0x006B
     eee:	82 17       	cp	r24, r18
     ef0:	93 07       	cpc	r25, r19
     ef2:	e1 f5       	brne	.+120    	; 0xf6c <_Z8mainmenuv+0x122>
		{
			lcd_setCursor(0,1);
     ef4:	61 e0       	ldi	r22, 0x01	; 1
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	80 2f       	mov	r24, r16
     efa:	91 2f       	mov	r25, r17
     efc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts(" ");
     f00:	8f eb       	ldi	r24, 0xBF	; 191
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
			lcd_setCursor(0,0);
     f08:	60 2f       	mov	r22, r16
     f0a:	71 2f       	mov	r23, r17
     f0c:	80 2f       	mov	r24, r16
     f0e:	91 2f       	mov	r25, r17
     f10:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts(">");
     f14:	8a e7       	ldi	r24, 0x7A	; 122
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
			state=0;
     f1c:	c0 2f       	mov	r28, r16
     f1e:	d1 2f       	mov	r29, r17
     f20:	1b c0       	rjmp	.+54     	; 0xf58 <_Z8mainmenuv+0x10e>
		{
			//_delay_ms(DELAY_TIME);
			if (state==0)
			{
				int c=0;
				if (first_visit==0)
     f22:	e1 14       	cp	r14, r1
     f24:	f1 04       	cpc	r15, r1
     f26:	59 f4       	brne	.+22     	; 0xf3e <_Z8mainmenuv+0xf4>
				c=select_food();
     f28:	0e 94 40 03 	call	0x680	; 0x680 <_Z11select_foodv>
				else
				change_food();
				if (c==1)
     f2c:	31 e0       	ldi	r19, 0x01	; 1
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	01 97       	sbiw	r24, 0x01	; 1
     f32:	11 f0       	breq	.+4      	; 0xf38 <_Z8mainmenuv+0xee>
     f34:	30 2f       	mov	r19, r16
     f36:	21 2f       	mov	r18, r17
				first_visit=1;
     f38:	e3 2e       	mov	r14, r19
     f3a:	f2 2e       	mov	r15, r18
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <_Z8mainmenuv+0xf8>
			{
				int c=0;
				if (first_visit==0)
				c=select_food();
				else
				change_food();
     f3e:	0e 94 9f 05 	call	0xb3e	; 0xb3e <_Z11change_foodv>
				if (c==1)
				first_visit=1;
				state=0;
				main_menu_print(first_visit);
     f42:	c7 01       	movw	r24, r14
     f44:	0e 94 b9 01 	call	0x372	; 0x372 <_Z15main_menu_printi>
     f48:	07 c0       	rjmp	.+14     	; 0xf58 <_Z8mainmenuv+0x10e>
			}
			else
			//selected_food();
			{
				selected_food();
     f4a:	0e 94 90 04 	call	0x920	; 0x920 <_Z13selected_foodv>
				main_menu_print(first_visit);
     f4e:	c7 01       	movw	r24, r14
     f50:	0e 94 b9 01 	call	0x372	; 0x372 <_Z15main_menu_printi>
				state=0;
     f54:	c0 2f       	mov	r28, r16
     f56:	d1 2f       	mov	r29, r17
     f58:	8f ef       	ldi	r24, 0xFF	; 255
     f5a:	90 e7       	ldi	r25, 0x70	; 112
     f5c:	22 e0       	ldi	r18, 0x02	; 2
     f5e:	81 50       	subi	r24, 0x01	; 1
     f60:	90 40       	sbci	r25, 0x00	; 0
     f62:	20 40       	sbci	r18, 0x00	; 0
     f64:	e1 f7       	brne	.-8      	; 0xf5e <_Z8mainmenuv+0x114>
     f66:	00 c0       	rjmp	.+0      	; 0xf68 <_Z8mainmenuv+0x11e>
     f68:	00 00       	nop
     f6a:	88 cf       	rjmp	.-240    	; 0xe7c <_Z8mainmenuv+0x32>
			lcd_puts(" ");
			lcd_setCursor(0,0);
			lcd_puts(">");
			state=0;
		}
		else if (in==ok)
     f6c:	20 91 62 00 	lds	r18, 0x0062
     f70:	30 91 63 00 	lds	r19, 0x0063
     f74:	82 17       	cp	r24, r18
     f76:	93 07       	cpc	r25, r19
     f78:	79 f7       	brne	.-34     	; 0xf58 <_Z8mainmenuv+0x10e>
     f7a:	e7 cf       	rjmp	.-50     	; 0xf4a <_Z8mainmenuv+0x100>
     f7c:	20 91 62 00 	lds	r18, 0x0062
     f80:	30 91 63 00 	lds	r19, 0x0063
     f84:	82 17       	cp	r24, r18
     f86:	93 07       	cpc	r25, r19
     f88:	39 f7       	brne	.-50     	; 0xf58 <_Z8mainmenuv+0x10e>
     f8a:	df cf       	rjmp	.-66     	; 0xf4a <_Z8mainmenuv+0x100>
     f8c:	20 91 62 00 	lds	r18, 0x0062
     f90:	30 91 63 00 	lds	r19, 0x0063
     f94:	82 17       	cp	r24, r18
     f96:	93 07       	cpc	r25, r19
     f98:	f9 f6       	brne	.-66     	; 0xf58 <_Z8mainmenuv+0x10e>
     f9a:	c3 cf       	rjmp	.-122    	; 0xf22 <_Z8mainmenuv+0xd8>

00000f9c <main>:
int select_food();
void selected_food();
void change_food();

int main() {
	sei();
     f9c:	78 94       	sei
	uart0_init(UART_BAUD_SELECT(9600,F_CPU));
     f9e:	87 e6       	ldi	r24, 0x67	; 103
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 28 08 	call	0x1050	; 0x1050 <_Z10uart0_initj>
	// set up the LCD's number of columns and rows:
	// pinMode(13,OUTPUT);
	
	DDRB&= ~(1<<s_zero);
     fa6:	bb 98       	cbi	0x17, 3	; 23
	DDRB&= ~(1<<s_one);
     fa8:	bc 98       	cbi	0x17, 4	; 23
   DDRB&= ~(1<<s_two);
     faa:	bd 98       	cbi	0x17, 5	; 23


	lcd_init();
     fac:	0e 94 91 00 	call	0x122	; 0x122 <_Z8lcd_initv>
	mainmenu();
     fb0:	0e 94 25 07 	call	0xe4a	; 0xe4a <_Z8mainmenuv>

00000fb4 <__vector_13>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
     fb4:	1f 92       	push	r1
     fb6:	0f 92       	push	r0
     fb8:	0f b6       	in	r0, 0x3f	; 63
     fba:	0f 92       	push	r0
     fbc:	11 24       	eor	r1, r1
     fbe:	2f 93       	push	r18
     fc0:	8f 93       	push	r24
     fc2:	9f 93       	push	r25
     fc4:	ef 93       	push	r30
     fc6:	ff 93       	push	r31
     fc8:	8b b1       	in	r24, 0x0b	; 11
     fca:	2c b1       	in	r18, 0x0c	; 12
     fcc:	88 71       	andi	r24, 0x18	; 24
     fce:	e0 91 b4 02 	lds	r30, 0x02B4
     fd2:	ef 5f       	subi	r30, 0xFF	; 255
     fd4:	ef 71       	andi	r30, 0x1F	; 31
     fd6:	90 91 b3 02 	lds	r25, 0x02B3
     fda:	e9 17       	cp	r30, r25
     fdc:	39 f0       	breq	.+14     	; 0xfec <__vector_13+0x38>
     fde:	e0 93 b4 02 	sts	0x02B4, r30
     fe2:	f0 e0       	ldi	r31, 0x00	; 0
     fe4:	e9 54       	subi	r30, 0x49	; 73
     fe6:	fd 4f       	sbci	r31, 0xFD	; 253
     fe8:	20 83       	st	Z, r18
     fea:	01 c0       	rjmp	.+2      	; 0xfee <__vector_13+0x3a>
     fec:	82 e0       	ldi	r24, 0x02	; 2
     fee:	80 93 b2 02 	sts	0x02B2, r24
     ff2:	ff 91       	pop	r31
     ff4:	ef 91       	pop	r30
     ff6:	9f 91       	pop	r25
     ff8:	8f 91       	pop	r24
     ffa:	2f 91       	pop	r18
     ffc:	0f 90       	pop	r0
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	0f 90       	pop	r0
    1002:	1f 90       	pop	r1
    1004:	18 95       	reti

00001006 <__vector_14>:
    1006:	1f 92       	push	r1
    1008:	0f 92       	push	r0
    100a:	0f b6       	in	r0, 0x3f	; 63
    100c:	0f 92       	push	r0
    100e:	11 24       	eor	r1, r1
    1010:	8f 93       	push	r24
    1012:	9f 93       	push	r25
    1014:	ef 93       	push	r30
    1016:	ff 93       	push	r31
    1018:	90 91 b6 02 	lds	r25, 0x02B6
    101c:	80 91 b5 02 	lds	r24, 0x02B5
    1020:	98 17       	cp	r25, r24
    1022:	61 f0       	breq	.+24     	; 0x103c <__vector_14+0x36>
    1024:	e0 91 b5 02 	lds	r30, 0x02B5
    1028:	ef 5f       	subi	r30, 0xFF	; 255
    102a:	ef 71       	andi	r30, 0x1F	; 31
    102c:	e0 93 b5 02 	sts	0x02B5, r30
    1030:	f0 e0       	ldi	r31, 0x00	; 0
    1032:	e9 52       	subi	r30, 0x29	; 41
    1034:	fd 4f       	sbci	r31, 0xFD	; 253
    1036:	80 81       	ld	r24, Z
    1038:	8c b9       	out	0x0c, r24	; 12
    103a:	01 c0       	rjmp	.+2      	; 0x103e <__vector_14+0x38>
    103c:	55 98       	cbi	0x0a, 5	; 10
    103e:	ff 91       	pop	r31
    1040:	ef 91       	pop	r30
    1042:	9f 91       	pop	r25
    1044:	8f 91       	pop	r24
    1046:	0f 90       	pop	r0
    1048:	0f be       	out	0x3f, r0	; 63
    104a:	0f 90       	pop	r0
    104c:	1f 90       	pop	r1
    104e:	18 95       	reti

00001050 <_Z10uart0_initj>:
    1050:	10 92 b6 02 	sts	0x02B6, r1
    1054:	10 92 b5 02 	sts	0x02B5, r1
    1058:	10 92 b4 02 	sts	0x02B4, r1
    105c:	10 92 b3 02 	sts	0x02B3, r1
    1060:	99 23       	and	r25, r25
    1062:	1c f4       	brge	.+6      	; 0x106a <_Z10uart0_initj+0x1a>
    1064:	22 e0       	ldi	r18, 0x02	; 2
    1066:	2b b9       	out	0x0b, r18	; 11
    1068:	9f 77       	andi	r25, 0x7F	; 127
    106a:	90 bd       	out	0x20, r25	; 32
    106c:	89 b9       	out	0x09, r24	; 9
    106e:	88 e9       	ldi	r24, 0x98	; 152
    1070:	8a b9       	out	0x0a, r24	; 10
    1072:	86 e8       	ldi	r24, 0x86	; 134
    1074:	80 bd       	out	0x20, r24	; 32
    1076:	08 95       	ret

00001078 <_Z10uart0_getcv>:
    1078:	90 91 b4 02 	lds	r25, 0x02B4
    107c:	80 91 b3 02 	lds	r24, 0x02B3
    1080:	98 17       	cp	r25, r24
    1082:	91 f0       	breq	.+36     	; 0x10a8 <_Z10uart0_getcv+0x30>
    1084:	e0 91 b3 02 	lds	r30, 0x02B3
    1088:	ef 5f       	subi	r30, 0xFF	; 255
    108a:	ef 71       	andi	r30, 0x1F	; 31
    108c:	e0 93 b3 02 	sts	0x02B3, r30
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	e9 54       	subi	r30, 0x49	; 73
    1094:	fd 4f       	sbci	r31, 0xFD	; 253
    1096:	20 81       	ld	r18, Z
    1098:	80 91 b2 02 	lds	r24, 0x02B2
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	98 2f       	mov	r25, r24
    10a0:	88 27       	eor	r24, r24
    10a2:	82 0f       	add	r24, r18
    10a4:	91 1d       	adc	r25, r1
    10a6:	08 95       	ret
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	91 e0       	ldi	r25, 0x01	; 1
    10ac:	08 95       	ret

000010ae <_Z10uart0_putch>:
    10ae:	20 91 b6 02 	lds	r18, 0x02B6
    10b2:	2f 5f       	subi	r18, 0xFF	; 255
    10b4:	2f 71       	andi	r18, 0x1F	; 31
    10b6:	90 91 b5 02 	lds	r25, 0x02B5
    10ba:	29 17       	cp	r18, r25
    10bc:	e1 f3       	breq	.-8      	; 0x10b6 <_Z10uart0_putch+0x8>
    10be:	e2 2f       	mov	r30, r18
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	e9 52       	subi	r30, 0x29	; 41
    10c4:	fd 4f       	sbci	r31, 0xFD	; 253
    10c6:	80 83       	st	Z, r24
    10c8:	20 93 b6 02 	sts	0x02B6, r18
    10cc:	55 9a       	sbi	0x0a, 5	; 10
    10ce:	08 95       	ret

000010d0 <_Z12uart0_putinti>:
    10d0:	0f 93       	push	r16
    10d2:	1f 93       	push	r17
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	cd b7       	in	r28, 0x3d	; 61
    10da:	de b7       	in	r29, 0x3e	; 62
    10dc:	2f 97       	sbiw	r28, 0x0f	; 15
    10de:	0f b6       	in	r0, 0x3f	; 63
    10e0:	f8 94       	cli
    10e2:	de bf       	out	0x3e, r29	; 62
    10e4:	0f be       	out	0x3f, r0	; 63
    10e6:	cd bf       	out	0x3d, r28	; 61
    10e8:	4a e0       	ldi	r20, 0x0A	; 10
    10ea:	be 01       	movw	r22, r28
    10ec:	6f 5f       	subi	r22, 0xFF	; 255
    10ee:	7f 4f       	sbci	r23, 0xFF	; 255
    10f0:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <__itoa_ncheck>
    10f4:	89 81       	ldd	r24, Y+1	; 0x01
    10f6:	88 23       	and	r24, r24
    10f8:	51 f0       	breq	.+20     	; 0x110e <_Z12uart0_putinti+0x3e>
    10fa:	8e 01       	movw	r16, r28
    10fc:	0e 5f       	subi	r16, 0xFE	; 254
    10fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1100:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z10uart0_putch>
    1104:	f8 01       	movw	r30, r16
    1106:	81 91       	ld	r24, Z+
    1108:	8f 01       	movw	r16, r30
    110a:	81 11       	cpse	r24, r1
    110c:	f9 cf       	rjmp	.-14     	; 0x1100 <_Z12uart0_putinti+0x30>
    110e:	2f 96       	adiw	r28, 0x0f	; 15
    1110:	0f b6       	in	r0, 0x3f	; 63
    1112:	f8 94       	cli
    1114:	de bf       	out	0x3e, r29	; 62
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	cd bf       	out	0x3d, r28	; 61
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	08 95       	ret

00001124 <_Z10uart0_putsPKc>:
    1124:	cf 93       	push	r28
    1126:	df 93       	push	r29
    1128:	ec 01       	movw	r28, r24
    112a:	88 81       	ld	r24, Y
    112c:	88 23       	and	r24, r24
    112e:	31 f0       	breq	.+12     	; 0x113c <_Z10uart0_putsPKc+0x18>
    1130:	21 96       	adiw	r28, 0x01	; 1
    1132:	0e 94 57 08 	call	0x10ae	; 0x10ae <_Z10uart0_putch>
    1136:	89 91       	ld	r24, Y+
    1138:	81 11       	cpse	r24, r1
    113a:	fb cf       	rjmp	.-10     	; 0x1132 <_Z10uart0_putsPKc+0xe>
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	08 95       	ret

00001142 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
    1142:	80 91 b4 02 	lds	r24, 0x02B4
    1146:	20 91 b3 02 	lds	r18, 0x02B3
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	4f 96       	adiw	r24, 0x1f	; 31
    114e:	82 1b       	sub	r24, r18
    1150:	91 09       	sbc	r25, r1
    1152:	6f e1       	ldi	r22, 0x1F	; 31
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	0e 94 b3 08 	call	0x1166	; 0x1166 <__divmodhi4>
}/* uart_available */
    115a:	08 95       	ret

0000115c <_Z11uart0_flushv>:
 Input:    None
 Returns:  None
 **************************************************************************/
void uart0_flush(void)
{
	UART0_RxHead = UART0_RxTail;
    115c:	80 91 b3 02 	lds	r24, 0x02B3
    1160:	80 93 b4 02 	sts	0x02B4, r24
    1164:	08 95       	ret

00001166 <__divmodhi4>:
    1166:	97 fb       	bst	r25, 7
    1168:	07 2e       	mov	r0, r23
    116a:	16 f4       	brtc	.+4      	; 0x1170 <__divmodhi4+0xa>
    116c:	00 94       	com	r0
    116e:	07 d0       	rcall	.+14     	; 0x117e <__divmodhi4_neg1>
    1170:	77 fd       	sbrc	r23, 7
    1172:	09 d0       	rcall	.+18     	; 0x1186 <__divmodhi4_neg2>
    1174:	0e 94 c7 08 	call	0x118e	; 0x118e <__udivmodhi4>
    1178:	07 fc       	sbrc	r0, 7
    117a:	05 d0       	rcall	.+10     	; 0x1186 <__divmodhi4_neg2>
    117c:	3e f4       	brtc	.+14     	; 0x118c <__divmodhi4_exit>

0000117e <__divmodhi4_neg1>:
    117e:	90 95       	com	r25
    1180:	81 95       	neg	r24
    1182:	9f 4f       	sbci	r25, 0xFF	; 255
    1184:	08 95       	ret

00001186 <__divmodhi4_neg2>:
    1186:	70 95       	com	r23
    1188:	61 95       	neg	r22
    118a:	7f 4f       	sbci	r23, 0xFF	; 255

0000118c <__divmodhi4_exit>:
    118c:	08 95       	ret

0000118e <__udivmodhi4>:
    118e:	aa 1b       	sub	r26, r26
    1190:	bb 1b       	sub	r27, r27
    1192:	51 e1       	ldi	r21, 0x11	; 17
    1194:	07 c0       	rjmp	.+14     	; 0x11a4 <__udivmodhi4_ep>

00001196 <__udivmodhi4_loop>:
    1196:	aa 1f       	adc	r26, r26
    1198:	bb 1f       	adc	r27, r27
    119a:	a6 17       	cp	r26, r22
    119c:	b7 07       	cpc	r27, r23
    119e:	10 f0       	brcs	.+4      	; 0x11a4 <__udivmodhi4_ep>
    11a0:	a6 1b       	sub	r26, r22
    11a2:	b7 0b       	sbc	r27, r23

000011a4 <__udivmodhi4_ep>:
    11a4:	88 1f       	adc	r24, r24
    11a6:	99 1f       	adc	r25, r25
    11a8:	5a 95       	dec	r21
    11aa:	a9 f7       	brne	.-22     	; 0x1196 <__udivmodhi4_loop>
    11ac:	80 95       	com	r24
    11ae:	90 95       	com	r25
    11b0:	bc 01       	movw	r22, r24
    11b2:	cd 01       	movw	r24, r26
    11b4:	08 95       	ret

000011b6 <strcpy>:
    11b6:	fb 01       	movw	r30, r22
    11b8:	dc 01       	movw	r26, r24
    11ba:	01 90       	ld	r0, Z+
    11bc:	0d 92       	st	X+, r0
    11be:	00 20       	and	r0, r0
    11c0:	e1 f7       	brne	.-8      	; 0x11ba <strcpy+0x4>
    11c2:	08 95       	ret

000011c4 <__itoa_ncheck>:
    11c4:	bb 27       	eor	r27, r27
    11c6:	4a 30       	cpi	r20, 0x0A	; 10
    11c8:	31 f4       	brne	.+12     	; 0x11d6 <__itoa_ncheck+0x12>
    11ca:	99 23       	and	r25, r25
    11cc:	22 f4       	brpl	.+8      	; 0x11d6 <__itoa_ncheck+0x12>
    11ce:	bd e2       	ldi	r27, 0x2D	; 45
    11d0:	90 95       	com	r25
    11d2:	81 95       	neg	r24
    11d4:	9f 4f       	sbci	r25, 0xFF	; 255
    11d6:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__utoa_common>

000011da <__utoa_ncheck>:
    11da:	bb 27       	eor	r27, r27

000011dc <__utoa_common>:
    11dc:	fb 01       	movw	r30, r22
    11de:	55 27       	eor	r21, r21
    11e0:	aa 27       	eor	r26, r26
    11e2:	88 0f       	add	r24, r24
    11e4:	99 1f       	adc	r25, r25
    11e6:	aa 1f       	adc	r26, r26
    11e8:	a4 17       	cp	r26, r20
    11ea:	10 f0       	brcs	.+4      	; 0x11f0 <__utoa_common+0x14>
    11ec:	a4 1b       	sub	r26, r20
    11ee:	83 95       	inc	r24
    11f0:	50 51       	subi	r21, 0x10	; 16
    11f2:	b9 f7       	brne	.-18     	; 0x11e2 <__utoa_common+0x6>
    11f4:	a0 5d       	subi	r26, 0xD0	; 208
    11f6:	aa 33       	cpi	r26, 0x3A	; 58
    11f8:	08 f0       	brcs	.+2      	; 0x11fc <__utoa_common+0x20>
    11fa:	a9 5d       	subi	r26, 0xD9	; 217
    11fc:	a1 93       	st	Z+, r26
    11fe:	00 97       	sbiw	r24, 0x00	; 0
    1200:	79 f7       	brne	.-34     	; 0x11e0 <__utoa_common+0x4>
    1202:	b1 11       	cpse	r27, r1
    1204:	b1 93       	st	Z+, r27
    1206:	11 92       	st	Z+, r1
    1208:	cb 01       	movw	r24, r22
    120a:	0c 94 07 09 	jmp	0x120e	; 0x120e <strrev>

0000120e <strrev>:
    120e:	dc 01       	movw	r26, r24
    1210:	fc 01       	movw	r30, r24
    1212:	67 2f       	mov	r22, r23
    1214:	71 91       	ld	r23, Z+
    1216:	77 23       	and	r23, r23
    1218:	e1 f7       	brne	.-8      	; 0x1212 <strrev+0x4>
    121a:	32 97       	sbiw	r30, 0x02	; 2
    121c:	04 c0       	rjmp	.+8      	; 0x1226 <strrev+0x18>
    121e:	7c 91       	ld	r23, X
    1220:	6d 93       	st	X+, r22
    1222:	70 83       	st	Z, r23
    1224:	62 91       	ld	r22, -Z
    1226:	ae 17       	cp	r26, r30
    1228:	bf 07       	cpc	r27, r31
    122a:	c8 f3       	brcs	.-14     	; 0x121e <strrev+0x10>
    122c:	08 95       	ret

0000122e <_exit>:
    122e:	f8 94       	cli

00001230 <__stop_program>:
    1230:	ff cf       	rjmp	.-2      	; 0x1230 <__stop_program>
