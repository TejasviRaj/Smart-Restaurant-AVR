
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001256  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ac  00800060  00001256  000012ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001eb  0080010c  0080010c  00001396  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001396  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ad0  00000000  00000000  0000158c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c3  00000000  00000000  0000405c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012de  00000000  00000000  00004a1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000454  00000000  00000000  00005d00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075c  00000000  00000000  00006154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012a0  00000000  00000000  000068b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00007b50  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 ec 07 	jmp	0xfd8	; 0xfd8 <__vector_13>
      38:	0c 94 15 08 	jmp	0x102a	; 0x102a <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e5       	ldi	r30, 0x56	; 86
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 30       	cpi	r26, 0x0C	; 12
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	22 e0       	ldi	r18, 0x02	; 2
      78:	ac e0       	ldi	r26, 0x0C	; 12
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 3f       	cpi	r26, 0xF7	; 247
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <main>
      8a:	0c 94 29 09 	jmp	0x1252	; 0x1252 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      92:	95 ed       	ldi	r25, 0xD5	; 213
      94:	9a 95       	dec	r25
      96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
      98:	00 00       	nop
#define	LCD_STROBE()	((CPORT |= (1 << EN)),(CPORT &= ~(1 << EN)))
static void lcd_write(uint8_t c)
{
	_delay_us(40);

	if(c & 0x80)
      9a:	88 23       	and	r24, r24
      9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
	DPORT |=  (1 << D7);
      9e:	da 9a       	sbi	0x1b, 2	; 27
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
	else
	DPORT &= ~(1 << D7);
      a2:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x40)
      a4:	86 ff       	sbrs	r24, 6
      a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
	DPORT |=  (1 << D6);
      a8:	db 9a       	sbi	0x1b, 3	; 27
      aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
	else
	DPORT &= ~(1 << D6);
      ac:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x20)
      ae:	85 ff       	sbrs	r24, 5
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
	DPORT |=  (1 << D5);
      b2:	dc 9a       	sbi	0x1b, 4	; 27
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
	else
	DPORT &= ~(1 << D5);
      b6:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x10)
      b8:	84 ff       	sbrs	r24, 4
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
	DPORT |=  (1 << D4);
      bc:	dd 9a       	sbi	0x1b, 5	; 27
      be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
	else
	DPORT &= ~(1 << D4);
      c0:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      c2:	de 9a       	sbi	0x1b, 6	; 27
      c4:	de 98       	cbi	0x1b, 6	; 27
	
	

	if(c & 0x08)
      c6:	83 ff       	sbrs	r24, 3
      c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
	
	DPORT |=  (1 << D7);
      ca:	da 9a       	sbi	0x1b, 2	; 27
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
	else
	DPORT &= ~(1 << D7);
      ce:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x04)
      d0:	82 ff       	sbrs	r24, 2
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
	DPORT |=  (1 << D6);
      d4:	db 9a       	sbi	0x1b, 3	; 27
      d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
	else
	DPORT &= ~(1 << D6);
      d8:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x02)
      da:	81 ff       	sbrs	r24, 1
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
	DPORT |=  (1 << D5);
      de:	dc 9a       	sbi	0x1b, 4	; 27
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
	else
	DPORT &= ~(1 << D5);
      e2:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x01)
      e4:	80 ff       	sbrs	r24, 0
      e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
	DPORT |=  (1 << D4);
      e8:	dd 9a       	sbi	0x1b, 5	; 27
      ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
	else
	DPORT &= ~(1 << D4);
      ec:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      ee:	de 9a       	sbi	0x1b, 6	; 27
      f0:	de 98       	cbi	0x1b, 6	; 27
      f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
#include "lcd.h"


void lcd_clear(void)
{
	CPORT &= ~(1 << RS);
      f4:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(1<<LCD_CLR);
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	8f e3       	ldi	r24, 0x3F	; 63
      fe:	9f e1       	ldi	r25, 0x1F	; 31
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
     104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
     106:	00 00       	nop
     108:	08 95       	ret

0000010a <_Z8lcd_gotoh>:
	_delay_ms(2);
}

void lcd_goto(unsigned char pos)
{
	CPORT &= ~(1 << RS);
     10a:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(0x80|pos);
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     112:	08 95       	ret

00000114 <_Z10lcd_gotoxyhh>:
}


void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     114:	90 e4       	ldi	r25, 0x40	; 64
     116:	69 9f       	mul	r22, r25
     118:	80 0d       	add	r24, r0
     11a:	11 24       	eor	r1, r1
     11c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_gotoh>
     120:	08 95       	ret

00000122 <_Z8lcd_initv>:
}

void lcd_init()
{
	DDR(CPORT) |= (1 << RS);
     122:	d7 9a       	sbi	0x1a, 7	; 26
	DDR(CPORT) |= (1 << EN);
     124:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDR(DPORT) |= (1 << D7);
     126:	d2 9a       	sbi	0x1a, 2	; 26
	DDR(DPORT) |= (1 << D6);
     128:	d3 9a       	sbi	0x1a, 3	; 26
	DDR(DPORT) |= (1 << D5);
     12a:	d4 9a       	sbi	0x1a, 4	; 26
	DDR(DPORT) |= (1 << D4);
     12c:	d5 9a       	sbi	0x1a, 5	; 26
	
	CPORT &= ~(1 << RS);
     12e:	df 98       	cbi	0x1b, 7	; 27
	CPORT &= ~(1 << EN);
     130:	de 98       	cbi	0x1b, 6	; 27
     132:	8f e5       	ldi	r24, 0x5F	; 95
     134:	9a ee       	ldi	r25, 0xEA	; 234
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <_Z8lcd_initv+0x14>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8lcd_initv+0x1a>
     13c:	00 00       	nop
	
	_delay_ms(15);

	DPORT |= (1 << D4);
     13e:	dd 9a       	sbi	0x1b, 5	; 27
	DPORT |= (1 << D5);
     140:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     142:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     144:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     146:	de 9a       	sbi	0x1b, 6	; 27
     148:	de 98       	cbi	0x1b, 6	; 27
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	9e e4       	ldi	r25, 0x4E	; 78
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <_Z8lcd_initv+0x2c>
     152:	00 c0       	rjmp	.+0      	; 0x154 <_Z8lcd_initv+0x32>
     154:	00 00       	nop
	_delay_ms(5);
	LCD_STROBE();
     156:	de 9a       	sbi	0x1b, 6	; 27
     158:	de 98       	cbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	8f e1       	ldi	r24, 0x1F	; 31
     15c:	93 e0       	ldi	r25, 0x03	; 3
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <_Z8lcd_initv+0x3c>
     162:	00 c0       	rjmp	.+0      	; 0x164 <_Z8lcd_initv+0x42>
     164:	00 00       	nop
	_delay_us(200);
	LCD_STROBE();
     166:	de 9a       	sbi	0x1b, 6	; 27
     168:	de 98       	cbi	0x1b, 6	; 27
     16a:	8f e1       	ldi	r24, 0x1F	; 31
     16c:	93 e0       	ldi	r25, 0x03	; 3
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x4c>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_Z8lcd_initv+0x52>
     174:	00 00       	nop
	_delay_us(200);
	
	
	DPORT &= ~(1 << D4);
     176:	dd 98       	cbi	0x1b, 5	; 27
	DPORT |=  (1 << D5);
     178:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     17a:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     17c:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     17e:	de 9a       	sbi	0x1b, 6	; 27
     180:	de 98       	cbi	0x1b, 6	; 27

	lcd_write(0x28);
     182:	88 e2       	ldi	r24, 0x28	; 40
     184:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_write(0b00001100);
     188:	8c e0       	ldi	r24, 0x0C	; 12
     18a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_clear();
     18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_write(0x6);
     192:	86 e0       	ldi	r24, 0x06	; 6
     194:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     198:	08 95       	ret

0000019a <_Z8lcd_putsPKc>:
}

void lcd_puts(const char * s)
{
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
	CPORT|= (1 << RS);
     1a0:	df 9a       	sbi	0x1b, 7	; 27
	while(*s)
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <_Z8lcd_putsPKc+0x1a>
     1a8:	21 96       	adiw	r28, 0x01	; 1
	lcd_write(*s++);
     1aa:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
}

void lcd_puts(const char * s)
{
	CPORT|= (1 << RS);
	while(*s)
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <_Z8lcd_putsPKc+0x10>
	lcd_write(*s++);
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <_Z8lcd_putcc>:

void lcd_putc(char x)
{
	CPORT|= (1 << RS);
     1ba:	df 9a       	sbi	0x1b, 7	; 27
	lcd_write(x);
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     1c0:	08 95       	ret

000001c2 <_Z7lcd_numi>:
}

void lcd_num(int in)
{
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	c4 56       	subi	r28, 0x64	; 100
     1d4:	d1 09       	sbc	r29, r1
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	bc 01       	movw	r22, r24
     1e2:	ce 01       	movw	r24, r28
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	7c 01       	movw	r14, r24
     1e8:	fc 01       	movw	r30, r24
	int c;
	char temp[100];
	int index=0;
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	10 e0       	ldi	r17, 0x00	; 0
	do
	{
		c=in%10;
     1ee:	2a e0       	ldi	r18, 0x0A	; 10
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_Z7lcd_numi+0x34>
		in=in/10;
		temp[index]=c+'0';
		index++;
     1f4:	8c 01       	movw	r16, r24
	char temp[100];
	int index=0;
	do
	{
		c=in%10;
		in=in/10;
     1f6:	cb 01       	movw	r24, r22
     1f8:	b9 01       	movw	r22, r18
     1fa:	0e 94 c5 08 	call	0x118a	; 0x118a <__divmodhi4>
		temp[index]=c+'0';
     1fe:	90 e3       	ldi	r25, 0x30	; 48
     200:	98 0f       	add	r25, r24
     202:	91 93       	st	Z+, r25
		index++;
     204:	c8 01       	movw	r24, r16
     206:	01 96       	adiw	r24, 0x01	; 1
void lcd_num(int in)
{
	int c;
	char temp[100];
	int index=0;
	do
     208:	61 15       	cp	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	99 f7       	brne	.-26     	; 0x1f4 <_Z7lcd_numi+0x32>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     20e:	11 23       	and	r17, r17
     210:	64 f0       	brlt	.+24     	; 0x22a <_Z7lcd_numi+0x68>
     212:	0c 0f       	add	r16, r28
     214:	1d 1f       	adc	r17, r29
     216:	0e 5f       	subi	r16, 0xFE	; 254
     218:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_putc(temp[i]);
     21a:	f8 01       	movw	r30, r16
     21c:	82 91       	ld	r24, -Z
     21e:	8f 01       	movw	r16, r30
     220:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z8lcd_putcc>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     224:	0e 15       	cp	r16, r14
     226:	1f 05       	cpc	r17, r15
     228:	c1 f7       	brne	.-16     	; 0x21a <_Z7lcd_numi+0x58>
	{
		lcd_putc(temp[i]);
	}
}
     22a:	cc 59       	subi	r28, 0x9C	; 156
     22c:	df 4f       	sbci	r29, 0xFF	; 255
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	08 95       	ret

00000246 <_Z13lcd_setCursorii>:
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
	}
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	96 1b       	sub	r25, r22
     24a:	69 2f       	mov	r22, r25
     24c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     250:	08 95       	ret

00000252 <_Z10uart0_getsPc>:
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	0f 93       	push	r16
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	c4 56       	subi	r28, 0x64	; 100
     268:	d1 09       	sbc	r29, r1
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	6c 01       	movw	r12, r24
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	7c 01       	movw	r14, r24
     27c:	00 e0       	ldi	r16, 0x00	; 0
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <_Z10uart0_getsPc+0x32>
     282:	89 01       	movw	r16, r18
     284:	0e 94 b3 08 	call	0x1166	; 0x1166 <_Z15uart0_availablev>
     288:	89 2b       	or	r24, r25
     28a:	e1 f3       	breq	.-8      	; 0x284 <_Z10uart0_getsPc+0x32>
     28c:	0e 94 4e 08 	call	0x109c	; 0x109c <_Z10uart0_getcv>
     290:	f7 01       	movw	r30, r14
     292:	81 93       	st	Z+, r24
     294:	7f 01       	movw	r14, r30
     296:	98 01       	movw	r18, r16
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255
     29c:	80 32       	cpi	r24, 0x20	; 32
     29e:	89 f7       	brne	.-30     	; 0x282 <_Z10uart0_getsPc+0x30>
     2a0:	e1 e0       	ldi	r30, 0x01	; 1
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e0 0f       	add	r30, r16
     2aa:	f1 1f       	adc	r31, r17
     2ac:	10 82       	st	Z, r1
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	c6 01       	movw	r24, r12
     2b6:	0e 94 ed 08 	call	0x11da	; 0x11da <strcpy>
     2ba:	cc 59       	subi	r28, 0x9C	; 156
     2bc:	df 4f       	sbci	r29, 0xFF	; 255
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	ef 90       	pop	r14
     2d4:	df 90       	pop	r13
     2d6:	cf 90       	pop	r12
     2d8:	08 95       	ret

000002da <_Z12uart0_getintv>:
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	00 d0       	rcall	.+0      	; 0x2e4 <_Z12uart0_getintv+0xa>
     2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_Z12uart0_getintv+0xc>
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	8e 01       	movw	r16, r28
     2ee:	0f 5f       	subi	r16, 0xFF	; 255
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	c8 01       	movw	r24, r16
     2f4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
     2f8:	d8 01       	movw	r26, r16
     2fa:	0d 90       	ld	r0, X+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <_Z12uart0_getintv+0x20>
     300:	f8 01       	movw	r30, r16
     302:	ad 01       	movw	r20, r26
     304:	41 50       	subi	r20, 0x01	; 1
     306:	51 09       	sbc	r21, r1
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	11 c0       	rjmp	.+34     	; 0x330 <_Z12uart0_getintv+0x56>
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	21 91       	ld	r18, Z+
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	20 53       	subi	r18, 0x30	; 48
     32a:	31 09       	sbc	r19, r1
     32c:	82 0f       	add	r24, r18
     32e:	93 1f       	adc	r25, r19
     330:	e4 17       	cp	r30, r20
     332:	f5 07       	cpc	r31, r21
     334:	61 f7       	brne	.-40     	; 0x30e <_Z12uart0_getintv+0x34>
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <_Z12wait_messagev>:

    void wait_message()
    {
        lcd_clear();
     34a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
        lcd_puts("Please wait");
     34e:	8e e6       	ldi	r24, 0x6E	; 110
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     356:	08 95       	ret

00000358 <_Z5inputv>:
		return ans;
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
     358:	80 b3       	in	r24, 0x10	; 16
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
       if (digitalRead(s_zero))
     35a:	28 2f       	mov	r18, r24
     35c:	21 70       	andi	r18, 0x01	; 1
     35e:	30 e0       	ldi	r19, 0x00	; 0
        lcd_clear();
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
     360:	c9 01       	movw	r24, r18
       if (digitalRead(s_zero))
         a+=1;
       if (digitalRead(s_one))
     362:	81 99       	sbic	0x10, 1	; 16
         a+=10;
     364:	0a 96       	adiw	r24, 0x0a	; 10
       if (digitalRead(s_two))
     366:	82 9b       	sbis	0x10, 2	; 16
     368:	02 c0       	rjmp	.+4      	; 0x36e <_Z5inputv+0x16>
         a+=100;
     36a:	8c 59       	subi	r24, 0x9C	; 156
     36c:	9f 4f       	sbci	r25, 0xFF	; 255
       return(a);
   }
     36e:	08 95       	ret

00000370 <_Z15main_menu_printi>:

   void main_menu_print(int first_visit)
   {
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	ec 01       	movw	r28, r24
     lcd_clear();
     376:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     37a:	62 e0       	ldi	r22, 0x02	; 2
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

   void main_menu_print(int first_visit)
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     382:	8f eb       	ldi	r24, 0xBF	; 191
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");
     392:	8a e7       	ldi	r24, 0x7A	; 122
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");
     3a2:	8c e7       	ldi	r24, 0x7C	; 124
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3aa:	62 e0       	ldi	r22, 0x02	; 2
     3ac:	82 e0       	ldi	r24, 0x02	; 2
     3ae:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");

      lcd_setCursor(2, 0);
      if (first_visit==1)
     3b2:	21 97       	sbiw	r28, 0x01	; 1
     3b4:	29 f4       	brne	.+10     	; 0x3c0 <_Z15main_menu_printi+0x50>
      lcd_puts("Change Food");
     3b6:	8a e8       	ldi	r24, 0x8A	; 138
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <_Z15main_menu_printi+0x58>
      else
      lcd_puts("Select Food");
     3c0:	86 e9       	ldi	r24, 0x96	; 150
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
   }
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <_Z17clear_second_linev>:
                lcd_num(food[selected_pk].num);

     }

     void clear_second_line()
     {
     3ce:	cf 93       	push	r28
     3d0:	c0 e0       	ldi	r28, 0x00	; 0
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	8c 2f       	mov	r24, r28
     3d6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
     3da:	8f eb       	ldi	r24, 0xBF	; 191
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3e2:	cf 5f       	subi	r28, 0xFF	; 255

     }

     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
     3e4:	c0 31       	cpi	r28, 0x10	; 16
     3e6:	a9 f7       	brne	.-22     	; 0x3d2 <_Z17clear_second_linev+0x4>
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
       }
     }
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <_Z17select_food_printi>:
      else
      lcd_puts("Select Food");
   }

   void select_food_print(int selected_pk)
     {
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	8c 01       	movw	r16, r24
               clear_second_line();
     3f6:	0e 94 e7 01 	call	0x3ce	; 0x3ce <_Z17clear_second_linev>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
               clear_second_line();

                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);
     402:	8c e1       	ldi	r24, 0x1C	; 28
     404:	80 9f       	mul	r24, r16
     406:	e0 01       	movw	r28, r0
     408:	81 9f       	mul	r24, r17
     40a:	d0 0d       	add	r29, r0
     40c:	11 24       	eor	r1, r1
     40e:	ce 01       	movw	r24, r28
     410:	82 5f       	subi	r24, 0xF2	; 242
     412:	9e 4f       	sbci	r25, 0xFE	; 254
     414:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	88 e0       	ldi	r24, 0x08	; 8
     41c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);
     420:	c4 5f       	subi	r28, 0xF4	; 244
     422:	de 4f       	sbci	r29, 0xFE	; 254
     424:	8e 89       	ldd	r24, Y+22	; 0x16
     426:	9f 89       	ldd	r25, Y+23	; 0x17
     428:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	8e e0       	ldi	r24, 0x0E	; 14
     430:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);

                 lcd_setCursor(14,1);
                lcd_num(food[selected_pk].num);
     434:	88 8d       	ldd	r24, Y+24	; 0x18
     436:	99 8d       	ldd	r25, Y+25	; 0x19
     438:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

     }
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	08 95       	ret

00000446 <_Z13cannot_cancelv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     446:	2f ef       	ldi	r18, 0xFF	; 255
     448:	80 e7       	ldi	r24, 0x70	; 112
     44a:	92 e0       	ldi	r25, 0x02	; 2
     44c:	21 50       	subi	r18, 0x01	; 1
     44e:	80 40       	sbci	r24, 0x00	; 0
     450:	90 40       	sbci	r25, 0x00	; 0
     452:	e1 f7       	brne	.-8      	; 0x44c <_Z13cannot_cancelv+0x6>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_Z13cannot_cancelv+0x10>
     456:	00 00       	nop
     }

     void cannot_cancel()
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
     458:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
         lcd_puts(" Cannot Cancel ");
     45c:	82 ea       	ldi	r24, 0xA2	; 162
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	86 e0       	ldi	r24, 0x06	; 6
     468:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
         lcd_puts(" Cannot Cancel ");
         lcd_setCursor(6,1);
         lcd_puts(">Ok");
     46c:	82 eb       	ldi	r24, 0xB2	; 178
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
         while(1)
           {
             int in=input();
     474:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
             if (in == ok)
     478:	20 91 62 00 	lds	r18, 0x0062
     47c:	30 91 63 00 	lds	r19, 0x0063
     480:	82 17       	cp	r24, r18
     482:	93 07       	cpc	r25, r19
     484:	b9 f7       	brne	.-18     	; 0x474 <_Z13cannot_cancelv+0x2e>
				//	_delay_ms(DELAY_TIME);
                 //mainmenu();
                 return ;
                }
           }
     }
     486:	08 95       	ret

00000488 <_Z16display_message1PKc>:

     //confirmation messages
     int display_message1(char const *s)
       {
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	ec 01       	movw	r28, r24
           lcd_clear();
     496:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
           lcd_puts(s);
     49a:	ce 01       	movw	r24, r28
     49c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     int display_message1(char const *s)
       {
           lcd_clear();
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");
     4a8:	86 eb       	ldi	r24, 0xB6	; 182
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4b0:	61 e0       	ldi	r22, 0x01	; 1
     4b2:	8c e0       	ldi	r24, 0x0C	; 12
     4b4:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");

           lcd_setCursor(12,1);
           lcd_puts("No");
     4b8:	8b eb       	ldi	r24, 0xBB	; 187
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     4c0:	2f ef       	ldi	r18, 0xFF	; 255
     4c2:	8a e6       	ldi	r24, 0x6A	; 106
     4c4:	93 e0       	ldi	r25, 0x03	; 3
     4c6:	21 50       	subi	r18, 0x01	; 1
     4c8:	80 40       	sbci	r24, 0x00	; 0
     4ca:	90 40       	sbci	r25, 0x00	; 0
     4cc:	e1 f7       	brne	.-8      	; 0x4c6 <_Z16display_message1PKc+0x3e>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <_Z16display_message1PKc+0x48>
     4d0:	00 00       	nop
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
     4d2:	c1 e0       	ldi	r28, 0x01	; 1
     4d4:	d0 e0       	ldi	r29, 0x00	; 0
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
                         state=1;
     4d6:	01 e0       	ldi	r16, 0x01	; 1
     4d8:	10 e0       	ldi	r17, 0x00	; 0
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
                         state=0;
     4da:	e1 2c       	mov	r14, r1
     4dc:	f1 2c       	mov	r15, r1
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
           while(1)
              {
                    int in=input();
     4de:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
     4e2:	c1 30       	cpi	r28, 0x01	; 1
     4e4:	d1 05       	cpc	r29, r1
     4e6:	09 f5       	brne	.+66     	; 0x52a <_Z16display_message1PKc+0xa2>
     4e8:	20 91 66 00 	lds	r18, 0x0066
     4ec:	30 91 67 00 	lds	r19, 0x0067
     4f0:	82 17       	cp	r24, r18
     4f2:	93 07       	cpc	r25, r19
     4f4:	39 f0       	breq	.+14     	; 0x504 <_Z16display_message1PKc+0x7c>
     4f6:	20 91 68 00 	lds	r18, 0x0068
     4fa:	30 91 69 00 	lds	r19, 0x0069
     4fe:	82 17       	cp	r24, r18
     500:	93 07       	cpc	r25, r19
     502:	b1 f5       	brne	.+108    	; 0x570 <_Z16display_message1PKc+0xe8>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     504:	61 e0       	ldi	r22, 0x01	; 1
     506:	82 e0       	ldi	r24, 0x02	; 2
     508:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                    int in=input();
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
     50c:	8f eb       	ldi	r24, 0xBF	; 191
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	8b e0       	ldi	r24, 0x0B	; 11
     518:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
     51c:	8a e7       	ldi	r24, 0x7A	; 122
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=0;
     524:	ce 2d       	mov	r28, r14
     526:	df 2d       	mov	r29, r15
     528:	2a c0       	rjmp	.+84     	; 0x57e <_Z16display_message1PKc+0xf6>
                      }
                   else if (state==0 && (in==left ||in==right))
     52a:	20 97       	sbiw	r28, 0x00	; 0
     52c:	09 f5       	brne	.+66     	; 0x570 <_Z16display_message1PKc+0xe8>
     52e:	20 91 66 00 	lds	r18, 0x0066
     532:	30 91 67 00 	lds	r19, 0x0067
     536:	82 17       	cp	r24, r18
     538:	93 07       	cpc	r25, r19
     53a:	39 f0       	breq	.+14     	; 0x54a <_Z16display_message1PKc+0xc2>
     53c:	20 91 68 00 	lds	r18, 0x0068
     540:	30 91 69 00 	lds	r19, 0x0069
     544:	82 17       	cp	r24, r18
     546:	93 07       	cpc	r25, r19
     548:	99 f4       	brne	.+38     	; 0x570 <_Z16display_message1PKc+0xe8>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	8b e0       	ldi	r24, 0x0B	; 11
     54e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                         state=0;
                      }
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
     552:	8f eb       	ldi	r24, 0xBF	; 191
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
int dnum_of_food;

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     55a:	61 e0       	ldi	r22, 0x01	; 1
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
     562:	8a e7       	ldi	r24, 0x7A	; 122
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=1;
     56a:	c0 2f       	mov	r28, r16
     56c:	d1 2f       	mov	r29, r17
     56e:	07 c0       	rjmp	.+14     	; 0x57e <_Z16display_message1PKc+0xf6>
                      }
                  else if (in==ok)
     570:	20 91 62 00 	lds	r18, 0x0062
     574:	30 91 63 00 	lds	r19, 0x0063
     578:	82 17       	cp	r24, r18
     57a:	93 07       	cpc	r25, r19
     57c:	51 f0       	breq	.+20     	; 0x592 <_Z16display_message1PKc+0x10a>
     57e:	8f ef       	ldi	r24, 0xFF	; 255
     580:	9a e6       	ldi	r25, 0x6A	; 106
     582:	23 e0       	ldi	r18, 0x03	; 3
     584:	81 50       	subi	r24, 0x01	; 1
     586:	90 40       	sbci	r25, 0x00	; 0
     588:	20 40       	sbci	r18, 0x00	; 0
     58a:	e1 f7       	brne	.-8      	; 0x584 <_Z16display_message1PKc+0xfc>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <_Z16display_message1PKc+0x106>
     58e:	00 00       	nop
     590:	a6 cf       	rjmp	.-180    	; 0x4de <_Z16display_message1PKc+0x56>
                   return state;

                   _delay_ms(DELAY_TIME_STRAIGHT_START);
               }

       }
     592:	ce 01       	movw	r24, r28
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	1f 91       	pop	r17
     59a:	0f 91       	pop	r16
     59c:	ff 90       	pop	r15
     59e:	ef 90       	pop	r14
     5a0:	08 95       	ret

000005a2 <_Z8get_infov>:




void get_info()
{
     5a2:	0f 93       	push	r16
     5a4:	1f 93       	push	r17
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
	uart0_flush();
     5aa:	0e 94 c0 08 	call	0x1180	; 0x1180 <_Z11uart0_flushv>
  uart0_putc('1');
     5ae:	81 e3       	ldi	r24, 0x31	; 49
     5b0:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_Z10uart0_putch>
  while (!(uart0_available()) ) {}
     5b4:	0e 94 b3 08 	call	0x1166	; 0x1166 <_Z15uart0_availablev>
     5b8:	89 2b       	or	r24, r25
     5ba:	e1 f3       	breq	.-8      	; 0x5b4 <_Z8get_infov+0x12>
  num_of_food=uart0_getint();
     5bc:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5c0:	90 93 b1 02 	sts	0x02B1, r25
     5c4:	80 93 b0 02 	sts	0x02B0, r24
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     5c8:	18 16       	cp	r1, r24
     5ca:	19 06       	cpc	r1, r25
     5cc:	1c f5       	brge	.+70     	; 0x614 <_Z8get_infov+0x72>
     5ce:	ce e0       	ldi	r28, 0x0E	; 14
     5d0:	d1 e0       	ldi	r29, 0x01	; 1
     5d2:	00 e0       	ldi	r16, 0x00	; 0
     5d4:	10 e0       	ldi	r17, 0x00	; 0
{
    //  Serial.puts("Start");
      food[i].id=uart0_getint();
     5d6:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5da:	fe 01       	movw	r30, r28
     5dc:	32 97       	sbiw	r30, 0x02	; 2
     5de:	91 83       	std	Z+1, r25	; 0x01
     5e0:	80 83       	st	Z, r24
      uart0_gets(food[i].name);
     5e2:	ce 01       	movw	r24, r28
     5e4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
      food[i].price=uart0_getint();
     5e8:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5ec:	9d 8b       	std	Y+21, r25	; 0x15
     5ee:	8c 8b       	std	Y+20, r24	; 0x14
      food[i].num=uart0_getint();
     5f0:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5f4:	9f 8b       	std	Y+23, r25	; 0x17
     5f6:	8e 8b       	std	Y+22, r24	; 0x16
      food[i].p=uart0_getint();
     5f8:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5fc:	99 8f       	std	Y+25, r25	; 0x19
     5fe:	88 8f       	std	Y+24, r24	; 0x18
  while (!(uart0_available()) ) {}
  num_of_food=uart0_getint();
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     600:	0f 5f       	subi	r16, 0xFF	; 255
     602:	1f 4f       	sbci	r17, 0xFF	; 255
     604:	6c 96       	adiw	r28, 0x1c	; 28
     606:	80 91 b0 02 	lds	r24, 0x02B0
     60a:	90 91 b1 02 	lds	r25, 0x02B1
     60e:	08 17       	cp	r16, r24
     610:	19 07       	cpc	r17, r25
     612:	0c f3       	brlt	.-62     	; 0x5d6 <_Z8get_infov+0x34>
  }

  // Serial.putsln("Done");


}
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	08 95       	ret

0000061e <_Z9send_infov>:

      void send_info()
        {
     61e:	0f 93       	push	r16
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
          for (int i=0;i<num_of_food;i++)
     626:	80 91 b0 02 	lds	r24, 0x02B0
     62a:	90 91 b1 02 	lds	r25, 0x02B1
     62e:	18 16       	cp	r1, r24
     630:	19 06       	cpc	r1, r25
     632:	04 f5       	brge	.+64     	; 0x674 <_Z9send_infov+0x56>
     634:	cc e0       	ldi	r28, 0x0C	; 12
     636:	d1 e0       	ldi	r29, 0x01	; 1
     638:	00 e0       	ldi	r16, 0x00	; 0
     63a:	10 e0       	ldi	r17, 0x00	; 0
              {
                uart0_puts("2 ");
     63c:	8e eb       	ldi	r24, 0xBE	; 190
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	0e 94 a4 08 	call	0x1148	; 0x1148 <_Z10uart0_putsPKc>
				uart0_putint(food[i].id);
     644:	88 81       	ld	r24, Y
     646:	99 81       	ldd	r25, Y+1	; 0x01
     648:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <_Z12uart0_putinti>
                uart0_putc(' ');
     64c:	80 e2       	ldi	r24, 0x20	; 32
     64e:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_Z10uart0_putch>
                uart0_putint(food[i].num);
     652:	88 8d       	ldd	r24, Y+24	; 0x18
     654:	99 8d       	ldd	r25, Y+25	; 0x19
     656:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <_Z12uart0_putinti>
                uart0_putc(' ');
     65a:	80 e2       	ldi	r24, 0x20	; 32
     65c:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_Z10uart0_putch>

}

      void send_info()
        {
          for (int i=0;i<num_of_food;i++)
     660:	0f 5f       	subi	r16, 0xFF	; 255
     662:	1f 4f       	sbci	r17, 0xFF	; 255
     664:	6c 96       	adiw	r28, 0x1c	; 28
     666:	80 91 b0 02 	lds	r24, 0x02B0
     66a:	90 91 b1 02 	lds	r25, 0x02B1
     66e:	08 17       	cp	r16, r24
     670:	19 07       	cpc	r17, r25
     672:	24 f3       	brlt	.-56     	; 0x63c <_Z9send_infov+0x1e>
                uart0_putc(' ');
              }



        }
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	08 95       	ret

0000067e <_Z11select_foodv>:
     67e:	1f 93       	push	r17
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     688:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_Z8get_infov>
     68c:	2f ef       	ldi	r18, 0xFF	; 255
     68e:	86 e7       	ldi	r24, 0x76	; 118
     690:	91 e0       	ldi	r25, 0x01	; 1
     692:	21 50       	subi	r18, 0x01	; 1
     694:	80 40       	sbci	r24, 0x00	; 0
     696:	90 40       	sbci	r25, 0x00	; 0
     698:	e1 f7       	brne	.-8      	; 0x692 <_Z11select_foodv+0x14>
     69a:	00 c0       	rjmp	.+0      	; 0x69c <_Z11select_foodv+0x1e>
     69c:	00 00       	nop
     69e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     6a2:	85 e8       	ldi	r24, 0x85	; 133
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	88 e0       	ldi	r24, 0x08	; 8
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6b6:	81 ec       	ldi	r24, 0xC1	; 193
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6be:	60 e0       	ldi	r22, 0x00	; 0
     6c0:	70 e0       	ldi	r23, 0x00	; 0
     6c2:	8e e0       	ldi	r24, 0x0E	; 14
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6ca:	8b eb       	ldi	r24, 0xBB	; 187
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6d2:	61 e0       	ldi	r22, 0x01	; 1
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6de:	8e e0       	ldi	r24, 0x0E	; 14
     6e0:	91 e0       	ldi	r25, 0x01	; 1
     6e2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6e6:	61 e0       	ldi	r22, 0x01	; 1
     6e8:	70 e0       	ldi	r23, 0x00	; 0
     6ea:	88 e0       	ldi	r24, 0x08	; 8
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     6f2:	cc e0       	ldi	r28, 0x0C	; 12
     6f4:	d1 e0       	ldi	r29, 0x01	; 1
     6f6:	8e 89       	ldd	r24, Y+22	; 0x16
     6f8:	9f 89       	ldd	r25, Y+23	; 0x17
     6fa:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     6fe:	61 e0       	ldi	r22, 0x01	; 1
     700:	70 e0       	ldi	r23, 0x00	; 0
     702:	8e e0       	ldi	r24, 0x0E	; 14
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     70a:	88 8d       	ldd	r24, Y+24	; 0x18
     70c:	99 8d       	ldd	r25, Y+25	; 0x19
     70e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     712:	c0 e0       	ldi	r28, 0x00	; 0
     714:	d0 e0       	ldi	r29, 0x00	; 0
     716:	1c e1       	ldi	r17, 0x1C	; 28
     718:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     71c:	20 91 6c 00 	lds	r18, 0x006C
     720:	30 91 6d 00 	lds	r19, 0x006D
     724:	82 17       	cp	r24, r18
     726:	93 07       	cpc	r25, r19
     728:	69 f4       	brne	.+26     	; 0x744 <_Z11select_foodv+0xc6>
     72a:	20 97       	sbiw	r28, 0x00	; 0
     72c:	31 f4       	brne	.+12     	; 0x73a <_Z11select_foodv+0xbc>
     72e:	c0 91 b0 02 	lds	r28, 0x02B0
     732:	d0 91 b1 02 	lds	r29, 0x02B1
     736:	21 97       	sbiw	r28, 0x01	; 1
     738:	01 c0       	rjmp	.+2      	; 0x73c <_Z11select_foodv+0xbe>
     73a:	21 97       	sbiw	r28, 0x01	; 1
     73c:	ce 01       	movw	r24, r28
     73e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     742:	dd c0       	rjmp	.+442    	; 0x8fe <__stack+0x9f>
     744:	20 91 6a 00 	lds	r18, 0x006A
     748:	30 91 6b 00 	lds	r19, 0x006B
     74c:	82 17       	cp	r24, r18
     74e:	93 07       	cpc	r25, r19
     750:	81 f4       	brne	.+32     	; 0x772 <_Z11select_foodv+0xf4>
     752:	80 91 b0 02 	lds	r24, 0x02B0
     756:	90 91 b1 02 	lds	r25, 0x02B1
     75a:	01 97       	sbiw	r24, 0x01	; 1
     75c:	8c 17       	cp	r24, r28
     75e:	9d 07       	cpc	r25, r29
     760:	11 f0       	breq	.+4      	; 0x766 <_Z11select_foodv+0xe8>
     762:	21 96       	adiw	r28, 0x01	; 1
     764:	02 c0       	rjmp	.+4      	; 0x76a <_Z11select_foodv+0xec>
     766:	c0 e0       	ldi	r28, 0x00	; 0
     768:	d0 e0       	ldi	r29, 0x00	; 0
     76a:	ce 01       	movw	r24, r28
     76c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     770:	c6 c0       	rjmp	.+396    	; 0x8fe <__stack+0x9f>
     772:	20 91 66 00 	lds	r18, 0x0066
     776:	30 91 67 00 	lds	r19, 0x0067
     77a:	82 17       	cp	r24, r18
     77c:	93 07       	cpc	r25, r19
     77e:	d1 f4       	brne	.+52     	; 0x7b4 <_Z11select_foodv+0x136>
     780:	1c 9f       	mul	r17, r28
     782:	f0 01       	movw	r30, r0
     784:	1d 9f       	mul	r17, r29
     786:	f0 0d       	add	r31, r0
     788:	11 24       	eor	r1, r1
     78a:	e4 5f       	subi	r30, 0xF4	; 244
     78c:	fe 4f       	sbci	r31, 0xFE	; 254
     78e:	80 8d       	ldd	r24, Z+24	; 0x18
     790:	91 8d       	ldd	r25, Z+25	; 0x19
     792:	00 97       	sbiw	r24, 0x00	; 0
     794:	09 f4       	brne	.+2      	; 0x798 <_Z11select_foodv+0x11a>
     796:	b3 c0       	rjmp	.+358    	; 0x8fe <__stack+0x9f>
     798:	1c 9f       	mul	r17, r28
     79a:	f0 01       	movw	r30, r0
     79c:	1d 9f       	mul	r17, r29
     79e:	f0 0d       	add	r31, r0
     7a0:	11 24       	eor	r1, r1
     7a2:	e4 5f       	subi	r30, 0xF4	; 244
     7a4:	fe 4f       	sbci	r31, 0xFE	; 254
     7a6:	01 97       	sbiw	r24, 0x01	; 1
     7a8:	91 8f       	std	Z+25, r25	; 0x19
     7aa:	80 8f       	std	Z+24, r24	; 0x18
     7ac:	ce 01       	movw	r24, r28
     7ae:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     7b2:	a5 c0       	rjmp	.+330    	; 0x8fe <__stack+0x9f>
     7b4:	20 91 68 00 	lds	r18, 0x0068
     7b8:	30 91 69 00 	lds	r19, 0x0069
     7bc:	82 17       	cp	r24, r18
     7be:	93 07       	cpc	r25, r19
     7c0:	81 f4       	brne	.+32     	; 0x7e2 <_Z11select_foodv+0x164>
     7c2:	1c 9f       	mul	r17, r28
     7c4:	f0 01       	movw	r30, r0
     7c6:	1d 9f       	mul	r17, r29
     7c8:	f0 0d       	add	r31, r0
     7ca:	11 24       	eor	r1, r1
     7cc:	e4 5f       	subi	r30, 0xF4	; 244
     7ce:	fe 4f       	sbci	r31, 0xFE	; 254
     7d0:	80 8d       	ldd	r24, Z+24	; 0x18
     7d2:	91 8d       	ldd	r25, Z+25	; 0x19
     7d4:	01 96       	adiw	r24, 0x01	; 1
     7d6:	91 8f       	std	Z+25, r25	; 0x19
     7d8:	80 8f       	std	Z+24, r24	; 0x18
     7da:	ce 01       	movw	r24, r28
     7dc:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     7e0:	8e c0       	rjmp	.+284    	; 0x8fe <__stack+0x9f>
     7e2:	20 91 64 00 	lds	r18, 0x0064
     7e6:	30 91 65 00 	lds	r19, 0x0065
     7ea:	82 17       	cp	r24, r18
     7ec:	93 07       	cpc	r25, r19
     7ee:	69 f5       	brne	.+90     	; 0x84a <_Z11select_foodv+0x1cc>
     7f0:	87 ec       	ldi	r24, 0xC7	; 199
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     7f8:	89 2b       	or	r24, r25
     7fa:	49 f0       	breq	.+18     	; 0x80e <_Z11select_foodv+0x190>
     7fc:	1c 9f       	mul	r17, r28
     7fe:	f0 01       	movw	r30, r0
     800:	1d 9f       	mul	r17, r29
     802:	f0 0d       	add	r31, r0
     804:	11 24       	eor	r1, r1
     806:	e4 5f       	subi	r30, 0xF4	; 244
     808:	fe 4f       	sbci	r31, 0xFE	; 254
     80a:	11 8e       	std	Z+25, r1	; 0x19
     80c:	10 8e       	std	Z+24, r1	; 0x18
     80e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     812:	85 e8       	ldi	r24, 0x85	; 133
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	70 e0       	ldi	r23, 0x00	; 0
     81e:	88 e0       	ldi	r24, 0x08	; 8
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     826:	81 ec       	ldi	r24, 0xC1	; 193
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     82e:	60 e0       	ldi	r22, 0x00	; 0
     830:	70 e0       	ldi	r23, 0x00	; 0
     832:	8e e0       	ldi	r24, 0x0E	; 14
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     83a:	8b eb       	ldi	r24, 0xBB	; 187
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     842:	ce 01       	movw	r24, r28
     844:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     848:	5a c0       	rjmp	.+180    	; 0x8fe <__stack+0x9f>
     84a:	20 91 62 00 	lds	r18, 0x0062
     84e:	30 91 63 00 	lds	r19, 0x0063
     852:	82 17       	cp	r24, r18
     854:	93 07       	cpc	r25, r19
     856:	49 f5       	brne	.+82     	; 0x8aa <__stack+0x4b>
     858:	88 ed       	ldi	r24, 0xD8	; 216
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     860:	89 2b       	or	r24, r25
     862:	29 f0       	breq	.+10     	; 0x86e <__stack+0xf>
     864:	0e 94 0f 03 	call	0x61e	; 0x61e <_Z9send_infov>
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	54 c0       	rjmp	.+168    	; 0x916 <__stack+0xb7>
     86e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     872:	85 e8       	ldi	r24, 0x85	; 133
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     87a:	60 e0       	ldi	r22, 0x00	; 0
     87c:	70 e0       	ldi	r23, 0x00	; 0
     87e:	88 e0       	ldi	r24, 0x08	; 8
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     886:	81 ec       	ldi	r24, 0xC1	; 193
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     88e:	60 e0       	ldi	r22, 0x00	; 0
     890:	70 e0       	ldi	r23, 0x00	; 0
     892:	8e e0       	ldi	r24, 0x0E	; 14
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     89a:	8b eb       	ldi	r24, 0xBB	; 187
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8a2:	ce 01       	movw	r24, r28
     8a4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     8a8:	2a c0       	rjmp	.+84     	; 0x8fe <__stack+0x9f>
     8aa:	20 91 60 00 	lds	r18, 0x0060
     8ae:	30 91 61 00 	lds	r19, 0x0061
     8b2:	82 17       	cp	r24, r18
     8b4:	93 07       	cpc	r25, r19
     8b6:	19 f5       	brne	.+70     	; 0x8fe <__stack+0x9f>
     8b8:	89 ee       	ldi	r24, 0xE9	; 233
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     8c0:	89 2b       	or	r24, r25
     8c2:	39 f5       	brne	.+78     	; 0x912 <__stack+0xb3>
     8c4:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     8c8:	85 e8       	ldi	r24, 0x85	; 133
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	88 e0       	ldi	r24, 0x08	; 8
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8dc:	81 ec       	ldi	r24, 0xC1	; 193
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	8e e0       	ldi	r24, 0x0E	; 14
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8f0:	8b eb       	ldi	r24, 0xBB	; 187
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8f8:	ce 01       	movw	r24, r28
     8fa:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     8fe:	2f ef       	ldi	r18, 0xFF	; 255
     900:	85 ea       	ldi	r24, 0xA5	; 165
     902:	9e e0       	ldi	r25, 0x0E	; 14
     904:	21 50       	subi	r18, 0x01	; 1
     906:	80 40       	sbci	r24, 0x00	; 0
     908:	90 40       	sbci	r25, 0x00	; 0
     90a:	e1 f7       	brne	.-8      	; 0x904 <__stack+0xa5>
     90c:	00 c0       	rjmp	.+0      	; 0x90e <__stack+0xaf>
     90e:	00 00       	nop
     910:	03 cf       	rjmp	.-506    	; 0x718 <_Z11select_foodv+0x9a>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	1f 91       	pop	r17
     91c:	08 95       	ret

0000091e <_Z13selected_foodv>:
     91e:	cf 92       	push	r12
     920:	df 92       	push	r13
     922:	ef 92       	push	r14
     924:	ff 92       	push	r15
     926:	0f 93       	push	r16
     928:	1f 93       	push	r17
     92a:	cf 93       	push	r28
     92c:	df 93       	push	r29
     92e:	cd b7       	in	r28, 0x3d	; 61
     930:	de b7       	in	r29, 0x3e	; 62
     932:	c8 5c       	subi	r28, 0xC8	; 200
     934:	d1 09       	sbc	r29, r1
     936:	0f b6       	in	r0, 0x3f	; 63
     938:	f8 94       	cli
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	cd bf       	out	0x3d, r28	; 61
     940:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     944:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_Z8get_infov>
     948:	2f ef       	ldi	r18, 0xFF	; 255
     94a:	36 e7       	ldi	r19, 0x76	; 118
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	21 50       	subi	r18, 0x01	; 1
     950:	30 40       	sbci	r19, 0x00	; 0
     952:	80 40       	sbci	r24, 0x00	; 0
     954:	e1 f7       	brne	.-8      	; 0x94e <_Z13selected_foodv+0x30>
     956:	00 c0       	rjmp	.+0      	; 0x958 <_Z13selected_foodv+0x3a>
     958:	00 00       	nop
     95a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     95e:	40 91 b0 02 	lds	r20, 0x02B0
     962:	50 91 b1 02 	lds	r21, 0x02B1
     966:	14 16       	cp	r1, r20
     968:	15 06       	cpc	r1, r21
     96a:	04 f5       	brge	.+64     	; 0x9ac <_Z13selected_foodv+0x8e>
     96c:	e4 e2       	ldi	r30, 0x24	; 36
     96e:	f1 e0       	ldi	r31, 0x01	; 1
     970:	80 e0       	ldi	r24, 0x00	; 0
     972:	90 e0       	ldi	r25, 0x00	; 0
     974:	00 e0       	ldi	r16, 0x00	; 0
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	20 81       	ld	r18, Z
     97a:	31 81       	ldd	r19, Z+1	; 0x01
     97c:	12 16       	cp	r1, r18
     97e:	13 06       	cpc	r1, r19
     980:	6c f4       	brge	.+26     	; 0x99c <_Z13selected_foodv+0x7e>
     982:	d8 01       	movw	r26, r16
     984:	aa 0f       	add	r26, r26
     986:	bb 1f       	adc	r27, r27
     988:	21 e0       	ldi	r18, 0x01	; 1
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	2c 0f       	add	r18, r28
     98e:	3d 1f       	adc	r19, r29
     990:	a2 0f       	add	r26, r18
     992:	b3 1f       	adc	r27, r19
     994:	8d 93       	st	X+, r24
     996:	9c 93       	st	X, r25
     998:	0f 5f       	subi	r16, 0xFF	; 255
     99a:	1f 4f       	sbci	r17, 0xFF	; 255
     99c:	01 96       	adiw	r24, 0x01	; 1
     99e:	7c 96       	adiw	r30, 0x1c	; 28
     9a0:	84 17       	cp	r24, r20
     9a2:	95 07       	cpc	r25, r21
     9a4:	4c f3       	brlt	.-46     	; 0x978 <_Z13selected_foodv+0x5a>
     9a6:	01 15       	cp	r16, r1
     9a8:	11 05       	cpc	r17, r1
     9aa:	c1 f4       	brne	.+48     	; 0x9dc <_Z13selected_foodv+0xbe>
     9ac:	8a ef       	ldi	r24, 0xFA	; 250
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9b4:	61 e0       	ldi	r22, 0x01	; 1
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	86 e0       	ldi	r24, 0x06	; 6
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9c0:	82 eb       	ldi	r24, 0xB2	; 178
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9c8:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     9cc:	20 91 62 00 	lds	r18, 0x0062
     9d0:	30 91 63 00 	lds	r19, 0x0063
     9d4:	82 17       	cp	r24, r18
     9d6:	93 07       	cpc	r25, r19
     9d8:	b9 f7       	brne	.-18     	; 0x9c8 <_Z13selected_foodv+0xaa>
     9da:	a0 c0       	rjmp	.+320    	; 0xb1c <_Z13selected_foodv+0x1fe>
     9dc:	85 e8       	ldi	r24, 0x85	; 133
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9e4:	60 e0       	ldi	r22, 0x00	; 0
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	88 e0       	ldi	r24, 0x08	; 8
     9ea:	90 e0       	ldi	r25, 0x00	; 0
     9ec:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9f0:	81 ec       	ldi	r24, 0xC1	; 193
     9f2:	90 e0       	ldi	r25, 0x00	; 0
     9f4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9f8:	60 e0       	ldi	r22, 0x00	; 0
     9fa:	70 e0       	ldi	r23, 0x00	; 0
     9fc:	8e e0       	ldi	r24, 0x0E	; 14
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a04:	8b eb       	ldi	r24, 0xBB	; 187
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a0c:	61 e0       	ldi	r22, 0x01	; 1
     a0e:	70 e0       	ldi	r23, 0x00	; 0
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a18:	89 81       	ldd	r24, Y+1	; 0x01
     a1a:	9a 81       	ldd	r25, Y+2	; 0x02
     a1c:	2c e1       	ldi	r18, 0x1C	; 28
     a1e:	28 9f       	mul	r18, r24
     a20:	70 01       	movw	r14, r0
     a22:	29 9f       	mul	r18, r25
     a24:	f0 0c       	add	r15, r0
     a26:	11 24       	eor	r1, r1
     a28:	c7 01       	movw	r24, r14
     a2a:	82 5f       	subi	r24, 0xF2	; 242
     a2c:	9e 4f       	sbci	r25, 0xFE	; 254
     a2e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a32:	61 e0       	ldi	r22, 0x01	; 1
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	88 e0       	ldi	r24, 0x08	; 8
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a3e:	c7 01       	movw	r24, r14
     a40:	84 5f       	subi	r24, 0xF4	; 244
     a42:	9e 4f       	sbci	r25, 0xFE	; 254
     a44:	7c 01       	movw	r14, r24
     a46:	fc 01       	movw	r30, r24
     a48:	86 89       	ldd	r24, Z+22	; 0x16
     a4a:	97 89       	ldd	r25, Z+23	; 0x17
     a4c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     a50:	61 e0       	ldi	r22, 0x01	; 1
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	8e e0       	ldi	r24, 0x0E	; 14
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a5c:	f7 01       	movw	r30, r14
     a5e:	80 8d       	ldd	r24, Z+24	; 0x18
     a60:	91 8d       	ldd	r25, Z+25	; 0x19
     a62:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     a66:	e1 2c       	mov	r14, r1
     a68:	f1 2c       	mov	r15, r1
     a6a:	01 50       	subi	r16, 0x01	; 1
     a6c:	11 09       	sbc	r17, r1
     a6e:	c1 2c       	mov	r12, r1
     a70:	d1 2c       	mov	r13, r1
     a72:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     a76:	20 91 6c 00 	lds	r18, 0x006C
     a7a:	30 91 6d 00 	lds	r19, 0x006D
     a7e:	82 17       	cp	r24, r18
     a80:	93 07       	cpc	r25, r19
     a82:	b1 f4       	brne	.+44     	; 0xab0 <_Z13selected_foodv+0x192>
     a84:	e1 14       	cp	r14, r1
     a86:	f1 04       	cpc	r15, r1
     a88:	11 f4       	brne	.+4      	; 0xa8e <_Z13selected_foodv+0x170>
     a8a:	78 01       	movw	r14, r16
     a8c:	03 c0       	rjmp	.+6      	; 0xa94 <_Z13selected_foodv+0x176>
     a8e:	f1 e0       	ldi	r31, 0x01	; 1
     a90:	ef 1a       	sub	r14, r31
     a92:	f1 08       	sbc	r15, r1
     a94:	f7 01       	movw	r30, r14
     a96:	ee 0f       	add	r30, r30
     a98:	ff 1f       	adc	r31, r31
     a9a:	21 e0       	ldi	r18, 0x01	; 1
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	2c 0f       	add	r18, r28
     aa0:	3d 1f       	adc	r19, r29
     aa2:	e2 0f       	add	r30, r18
     aa4:	f3 1f       	adc	r31, r19
     aa6:	80 81       	ld	r24, Z
     aa8:	91 81       	ldd	r25, Z+1	; 0x01
     aaa:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     aae:	2c c0       	rjmp	.+88     	; 0xb08 <_Z13selected_foodv+0x1ea>
     ab0:	20 91 6a 00 	lds	r18, 0x006A
     ab4:	30 91 6b 00 	lds	r19, 0x006B
     ab8:	82 17       	cp	r24, r18
     aba:	93 07       	cpc	r25, r19
     abc:	b9 f4       	brne	.+46     	; 0xaec <_Z13selected_foodv+0x1ce>
     abe:	0e 15       	cp	r16, r14
     ac0:	1f 05       	cpc	r17, r15
     ac2:	21 f0       	breq	.+8      	; 0xacc <_Z13selected_foodv+0x1ae>
     ac4:	3f ef       	ldi	r19, 0xFF	; 255
     ac6:	e3 1a       	sub	r14, r19
     ac8:	f3 0a       	sbc	r15, r19
     aca:	02 c0       	rjmp	.+4      	; 0xad0 <_Z13selected_foodv+0x1b2>
     acc:	ec 2c       	mov	r14, r12
     ace:	fd 2c       	mov	r15, r13
     ad0:	f7 01       	movw	r30, r14
     ad2:	ee 0f       	add	r30, r30
     ad4:	ff 1f       	adc	r31, r31
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	8c 0f       	add	r24, r28
     adc:	9d 1f       	adc	r25, r29
     ade:	e8 0f       	add	r30, r24
     ae0:	f9 1f       	adc	r31, r25
     ae2:	80 81       	ld	r24, Z
     ae4:	91 81       	ldd	r25, Z+1	; 0x01
     ae6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     aea:	0e c0       	rjmp	.+28     	; 0xb08 <_Z13selected_foodv+0x1ea>
     aec:	20 91 62 00 	lds	r18, 0x0062
     af0:	30 91 63 00 	lds	r19, 0x0063
     af4:	82 17       	cp	r24, r18
     af6:	93 07       	cpc	r25, r19
     af8:	89 f0       	breq	.+34     	; 0xb1c <_Z13selected_foodv+0x1fe>
     afa:	20 91 60 00 	lds	r18, 0x0060
     afe:	30 91 61 00 	lds	r19, 0x0061
     b02:	82 17       	cp	r24, r18
     b04:	93 07       	cpc	r25, r19
     b06:	51 f0       	breq	.+20     	; 0xb1c <_Z13selected_foodv+0x1fe>
     b08:	9f ef       	ldi	r25, 0xFF	; 255
     b0a:	e5 ea       	ldi	r30, 0xA5	; 165
     b0c:	fe e0       	ldi	r31, 0x0E	; 14
     b0e:	91 50       	subi	r25, 0x01	; 1
     b10:	e0 40       	sbci	r30, 0x00	; 0
     b12:	f0 40       	sbci	r31, 0x00	; 0
     b14:	e1 f7       	brne	.-8      	; 0xb0e <_Z13selected_foodv+0x1f0>
     b16:	00 c0       	rjmp	.+0      	; 0xb18 <_Z13selected_foodv+0x1fa>
     b18:	00 00       	nop
     b1a:	ab cf       	rjmp	.-170    	; 0xa72 <_Z13selected_foodv+0x154>
     b1c:	c8 53       	subi	r28, 0x38	; 56
     b1e:	df 4f       	sbci	r29, 0xFF	; 255
     b20:	0f b6       	in	r0, 0x3f	; 63
     b22:	f8 94       	cli
     b24:	de bf       	out	0x3e, r29	; 62
     b26:	0f be       	out	0x3f, r0	; 63
     b28:	cd bf       	out	0x3d, r28	; 61
     b2a:	df 91       	pop	r29
     b2c:	cf 91       	pop	r28
     b2e:	1f 91       	pop	r17
     b30:	0f 91       	pop	r16
     b32:	ff 90       	pop	r15
     b34:	ef 90       	pop	r14
     b36:	df 90       	pop	r13
     b38:	cf 90       	pop	r12
     b3a:	08 95       	ret

00000b3c <_Z11change_foodv>:




void change_food()
{
     b3c:	1f 93       	push	r17
     b3e:	cf 93       	push	r28
     b40:	df 93       	push	r29
	wait_message();
     b42:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
	get_info();
     b46:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_Z8get_infov>
     b4a:	2f ef       	ldi	r18, 0xFF	; 255
     b4c:	86 e7       	ldi	r24, 0x76	; 118
     b4e:	91 e0       	ldi	r25, 0x01	; 1
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	80 40       	sbci	r24, 0x00	; 0
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	e1 f7       	brne	.-8      	; 0xb50 <_Z11change_foodv+0x14>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <_Z11change_foodv+0x1e>
     b5a:	00 00       	nop
	_delay_ms(DELAY_TIME_GET_INFO);
	lcd_clear();
     b5c:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_puts("Food");
     b60:	85 e8       	ldi	r24, 0x85	; 133
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,0);
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	88 e0       	ldi	r24, 0x08	; 8
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("Price");
     b74:	81 ec       	ldi	r24, 0xC1	; 193
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(14,0);
     b7c:	60 e0       	ldi	r22, 0x00	; 0
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	8e e0       	ldi	r24, 0x0E	; 14
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("No");
     b88:	8b eb       	ldi	r24, 0xBB	; 187
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	int selected_pk=0;
	lcd_setCursor(0,1);
     b90:	61 e0       	ldi	r22, 0x01	; 1
     b92:	70 e0       	ldi	r23, 0x00	; 0
     b94:	80 e0       	ldi	r24, 0x00	; 0
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>

	lcd_puts(food[selected_pk].name);
     b9c:	8e e0       	ldi	r24, 0x0E	; 14
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,1);
     ba4:	61 e0       	ldi	r22, 0x01	; 1
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	88 e0       	ldi	r24, 0x08	; 8
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].price);
     bb0:	cc e0       	ldi	r28, 0x0C	; 12
     bb2:	d1 e0       	ldi	r29, 0x01	; 1
     bb4:	8e 89       	ldd	r24, Y+22	; 0x16
     bb6:	9f 89       	ldd	r25, Y+23	; 0x17
     bb8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

	lcd_setCursor(14,1);
     bbc:	61 e0       	ldi	r22, 0x01	; 1
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	8e e0       	ldi	r24, 0x0E	; 14
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].num);
     bc8:	88 8d       	ldd	r24, Y+24	; 0x18
     bca:	99 8d       	ldd	r25, Y+25	; 0x19
     bcc:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
	lcd_puts("Price");

	lcd_setCursor(14,0);
	lcd_puts("No");

	int selected_pk=0;
     bd0:	c0 e0       	ldi	r28, 0x00	; 0
     bd2:	d0 e0       	ldi	r29, 0x00	; 0

		}

		else if (in==del)
		{
			if (food[selected_pk].p==0)
     bd4:	1c e1       	ldi	r17, 0x1C	; 28
	lcd_num(food[selected_pk].num);


	while(1)
	{
		int in=input();
     bd6:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>

		if (in==up)
     bda:	20 91 6c 00 	lds	r18, 0x006C
     bde:	30 91 6d 00 	lds	r19, 0x006D
     be2:	82 17       	cp	r24, r18
     be4:	93 07       	cpc	r25, r19
     be6:	69 f4       	brne	.+26     	; 0xc02 <_Z11change_foodv+0xc6>
		{
			if (selected_pk==0)  selected_pk=num_of_food-1;
     be8:	20 97       	sbiw	r28, 0x00	; 0
     bea:	31 f4       	brne	.+12     	; 0xbf8 <_Z11change_foodv+0xbc>
     bec:	c0 91 b0 02 	lds	r28, 0x02B0
     bf0:	d0 91 b1 02 	lds	r29, 0x02B1
     bf4:	21 97       	sbiw	r28, 0x01	; 1
     bf6:	01 c0       	rjmp	.+2      	; 0xbfa <_Z11change_foodv+0xbe>
			else selected_pk--;
     bf8:	21 97       	sbiw	r28, 0x01	; 1
			select_food_print(selected_pk);
     bfa:	ce 01       	movw	r24, r28
     bfc:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c00:	15 c1       	rjmp	.+554    	; 0xe2c <_Z11change_foodv+0x2f0>

		}

		else if (in==down)
     c02:	20 91 6a 00 	lds	r18, 0x006A
     c06:	30 91 6b 00 	lds	r19, 0x006B
     c0a:	82 17       	cp	r24, r18
     c0c:	93 07       	cpc	r25, r19
     c0e:	81 f4       	brne	.+32     	; 0xc30 <_Z11change_foodv+0xf4>
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     c10:	80 91 b0 02 	lds	r24, 0x02B0
     c14:	90 91 b1 02 	lds	r25, 0x02B1
     c18:	01 97       	sbiw	r24, 0x01	; 1
     c1a:	8c 17       	cp	r24, r28
     c1c:	9d 07       	cpc	r25, r29
     c1e:	11 f0       	breq	.+4      	; 0xc24 <_Z11change_foodv+0xe8>
			else selected_pk++;
     c20:	21 96       	adiw	r28, 0x01	; 1
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <_Z11change_foodv+0xec>

		}

		else if (in==down)
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     c24:	c0 e0       	ldi	r28, 0x00	; 0
     c26:	d0 e0       	ldi	r29, 0x00	; 0
			else selected_pk++;
			select_food_print(selected_pk);
     c28:	ce 01       	movw	r24, r28
     c2a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c2e:	fe c0       	rjmp	.+508    	; 0xe2c <_Z11change_foodv+0x2f0>

		}

		else if (in==left)
     c30:	20 91 66 00 	lds	r18, 0x0066
     c34:	30 91 67 00 	lds	r19, 0x0067
     c38:	82 17       	cp	r24, r18
     c3a:	93 07       	cpc	r25, r19
     c3c:	09 f0       	breq	.+2      	; 0xc40 <_Z11change_foodv+0x104>
     c3e:	45 c0       	rjmp	.+138    	; 0xcca <_Z11change_foodv+0x18e>
		{
			if (food[selected_pk].p==0)
     c40:	1c 9f       	mul	r17, r28
     c42:	f0 01       	movw	r30, r0
     c44:	1d 9f       	mul	r17, r29
     c46:	f0 0d       	add	r31, r0
     c48:	11 24       	eor	r1, r1
     c4a:	e4 5f       	subi	r30, 0xF4	; 244
     c4c:	fe 4f       	sbci	r31, 0xFE	; 254
     c4e:	82 8d       	ldd	r24, Z+26	; 0x1a
     c50:	93 8d       	ldd	r25, Z+27	; 0x1b
     c52:	89 2b       	or	r24, r25
     c54:	d1 f4       	brne	.+52     	; 0xc8a <_Z11change_foodv+0x14e>
			{
				if(food[selected_pk].num != 0)
     c56:	1c 9f       	mul	r17, r28
     c58:	f0 01       	movw	r30, r0
     c5a:	1d 9f       	mul	r17, r29
     c5c:	f0 0d       	add	r31, r0
     c5e:	11 24       	eor	r1, r1
     c60:	e4 5f       	subi	r30, 0xF4	; 244
     c62:	fe 4f       	sbci	r31, 0xFE	; 254
     c64:	80 8d       	ldd	r24, Z+24	; 0x18
     c66:	91 8d       	ldd	r25, Z+25	; 0x19
     c68:	00 97       	sbiw	r24, 0x00	; 0
     c6a:	09 f4       	brne	.+2      	; 0xc6e <_Z11change_foodv+0x132>
     c6c:	df c0       	rjmp	.+446    	; 0xe2c <_Z11change_foodv+0x2f0>
				{
					food[selected_pk].num--;
     c6e:	1c 9f       	mul	r17, r28
     c70:	f0 01       	movw	r30, r0
     c72:	1d 9f       	mul	r17, r29
     c74:	f0 0d       	add	r31, r0
     c76:	11 24       	eor	r1, r1
     c78:	e4 5f       	subi	r30, 0xF4	; 244
     c7a:	fe 4f       	sbci	r31, 0xFE	; 254
     c7c:	01 97       	sbiw	r24, 0x01	; 1
     c7e:	91 8f       	std	Z+25, r25	; 0x19
     c80:	80 8f       	std	Z+24, r24	; 0x18
					select_food_print(selected_pk);
     c82:	ce 01       	movw	r24, r28
     c84:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c88:	d1 c0       	rjmp	.+418    	; 0xe2c <_Z11change_foodv+0x2f0>
				}

			}
			else
			{
				cannot_cancel();
     c8a:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>
				lcd_clear();
     c8e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
				lcd_puts("Food");
     c92:	85 e8       	ldi	r24, 0x85	; 133
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(8,0);
     c9a:	60 e0       	ldi	r22, 0x00	; 0
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	88 e0       	ldi	r24, 0x08	; 8
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("Price");
     ca6:	81 ec       	ldi	r24, 0xC1	; 193
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(14,0);
     cae:	60 e0       	ldi	r22, 0x00	; 0
     cb0:	70 e0       	ldi	r23, 0x00	; 0
     cb2:	8e e0       	ldi	r24, 0x0E	; 14
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("No");
     cba:	8b eb       	ldi	r24, 0xBB	; 187
     cbc:	90 e0       	ldi	r25, 0x00	; 0
     cbe:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				select_food_print(selected_pk);
     cc2:	ce 01       	movw	r24, r28
     cc4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     cc8:	b1 c0       	rjmp	.+354    	; 0xe2c <_Z11change_foodv+0x2f0>





		else if (in==right)
     cca:	20 91 68 00 	lds	r18, 0x0068
     cce:	30 91 69 00 	lds	r19, 0x0069
     cd2:	82 17       	cp	r24, r18
     cd4:	93 07       	cpc	r25, r19
     cd6:	81 f4       	brne	.+32     	; 0xcf8 <_Z11change_foodv+0x1bc>
		{
			food[selected_pk].num++;
     cd8:	1c 9f       	mul	r17, r28
     cda:	f0 01       	movw	r30, r0
     cdc:	1d 9f       	mul	r17, r29
     cde:	f0 0d       	add	r31, r0
     ce0:	11 24       	eor	r1, r1
     ce2:	e4 5f       	subi	r30, 0xF4	; 244
     ce4:	fe 4f       	sbci	r31, 0xFE	; 254
     ce6:	80 8d       	ldd	r24, Z+24	; 0x18
     ce8:	91 8d       	ldd	r25, Z+25	; 0x19
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	91 8f       	std	Z+25, r25	; 0x19
     cee:	80 8f       	std	Z+24, r24	; 0x18
			select_food_print(selected_pk);
     cf0:	ce 01       	movw	r24, r28
     cf2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     cf6:	9a c0       	rjmp	.+308    	; 0xe2c <_Z11change_foodv+0x2f0>

		}

		else if (in==del)
     cf8:	20 91 64 00 	lds	r18, 0x0064
     cfc:	30 91 65 00 	lds	r19, 0x0065
     d00:	82 17       	cp	r24, r18
     d02:	93 07       	cpc	r25, r19
     d04:	d9 f5       	brne	.+118    	; 0xd7c <_Z11change_foodv+0x240>
		{
			if (food[selected_pk].p==0)
     d06:	1c 9f       	mul	r17, r28
     d08:	f0 01       	movw	r30, r0
     d0a:	1d 9f       	mul	r17, r29
     d0c:	f0 0d       	add	r31, r0
     d0e:	11 24       	eor	r1, r1
     d10:	e4 5f       	subi	r30, 0xF4	; 244
     d12:	fe 4f       	sbci	r31, 0xFE	; 254
     d14:	82 8d       	ldd	r24, Z+26	; 0x1a
     d16:	93 8d       	ldd	r25, Z+27	; 0x1b
     d18:	89 2b       	or	r24, r25
     d1a:	81 f4       	brne	.+32     	; 0xd3c <_Z11change_foodv+0x200>
			{
				if (display_message1("Set the no to 0?"))
     d1c:	87 ec       	ldi	r24, 0xC7	; 199
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     d24:	89 2b       	or	r24, r25
     d26:	61 f0       	breq	.+24     	; 0xd40 <_Z11change_foodv+0x204>
				food[selected_pk].num=0;
     d28:	1c 9f       	mul	r17, r28
     d2a:	f0 01       	movw	r30, r0
     d2c:	1d 9f       	mul	r17, r29
     d2e:	f0 0d       	add	r31, r0
     d30:	11 24       	eor	r1, r1
     d32:	e4 5f       	subi	r30, 0xF4	; 244
     d34:	fe 4f       	sbci	r31, 0xFE	; 254
     d36:	11 8e       	std	Z+25, r1	; 0x19
     d38:	10 8e       	std	Z+24, r1	; 0x18
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <_Z11change_foodv+0x204>
			}
			else
			cannot_cancel();
     d3c:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>

			lcd_clear();
     d40:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     d44:	85 e8       	ldi	r24, 0x85	; 133
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     d4c:	60 e0       	ldi	r22, 0x00	; 0
     d4e:	70 e0       	ldi	r23, 0x00	; 0
     d50:	88 e0       	ldi	r24, 0x08	; 8
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     d58:	81 ec       	ldi	r24, 0xC1	; 193
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     d60:	60 e0       	ldi	r22, 0x00	; 0
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	8e e0       	ldi	r24, 0x0E	; 14
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     d6c:	8b eb       	ldi	r24, 0xBB	; 187
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     d74:	ce 01       	movw	r24, r28
     d76:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     d7a:	58 c0       	rjmp	.+176    	; 0xe2c <_Z11change_foodv+0x2f0>
		}

		else if (in==ok)
     d7c:	20 91 62 00 	lds	r18, 0x0062
     d80:	30 91 63 00 	lds	r19, 0x0063
     d84:	82 17       	cp	r24, r18
     d86:	93 07       	cpc	r25, r19
     d88:	39 f5       	brne	.+78     	; 0xdd8 <_Z11change_foodv+0x29c>
		{
			if (display_message1("Save the changes"))
     d8a:	88 ed       	ldi	r24, 0xD8	; 216
     d8c:	90 e0       	ldi	r25, 0x00	; 0
     d8e:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     d92:	89 2b       	or	r24, r25
     d94:	19 f0       	breq	.+6      	; 0xd9c <_Z11change_foodv+0x260>
			{
				send_info();
     d96:	0e 94 0f 03 	call	0x61e	; 0x61e <_Z9send_infov>
				//_delay_ms(DELAY_TIME);
				return;
     d9a:	52 c0       	rjmp	.+164    	; 0xe40 <_Z11change_foodv+0x304>
			}

			lcd_clear();
     d9c:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     da0:	85 e8       	ldi	r24, 0x85	; 133
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     da8:	60 e0       	ldi	r22, 0x00	; 0
     daa:	70 e0       	ldi	r23, 0x00	; 0
     dac:	88 e0       	ldi	r24, 0x08	; 8
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     db4:	81 ec       	ldi	r24, 0xC1	; 193
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     dbc:	60 e0       	ldi	r22, 0x00	; 0
     dbe:	70 e0       	ldi	r23, 0x00	; 0
     dc0:	8e e0       	ldi	r24, 0x0E	; 14
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     dc8:	8b eb       	ldi	r24, 0xBB	; 187
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     dd0:	ce 01       	movw	r24, r28
     dd2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     dd6:	2a c0       	rjmp	.+84     	; 0xe2c <_Z11change_foodv+0x2f0>

		}


		else if (in==back)
     dd8:	20 91 60 00 	lds	r18, 0x0060
     ddc:	30 91 61 00 	lds	r19, 0x0061
     de0:	82 17       	cp	r24, r18
     de2:	93 07       	cpc	r25, r19
     de4:	19 f5       	brne	.+70     	; 0xe2c <_Z11change_foodv+0x2f0>
		{
			if (display_message1("Discard Changes?"))
     de6:	89 ee       	ldi	r24, 0xE9	; 233
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     dee:	89 2b       	or	r24, r25
     df0:	39 f5       	brne	.+78     	; 0xe40 <_Z11change_foodv+0x304>
			{
				//_delay_ms(DELAY_TIME);
				return ;
			}

			lcd_clear();
     df2:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     df6:	85 e8       	ldi	r24, 0x85	; 133
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     dfe:	60 e0       	ldi	r22, 0x00	; 0
     e00:	70 e0       	ldi	r23, 0x00	; 0
     e02:	88 e0       	ldi	r24, 0x08	; 8
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     e0a:	81 ec       	ldi	r24, 0xC1	; 193
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	70 e0       	ldi	r23, 0x00	; 0
     e16:	8e e0       	ldi	r24, 0x0E	; 14
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     e1e:	8b eb       	ldi	r24, 0xBB	; 187
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     e26:	ce 01       	movw	r24, r28
     e28:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e2c:	2f ef       	ldi	r18, 0xFF	; 255
     e2e:	85 ea       	ldi	r24, 0xA5	; 165
     e30:	9e e0       	ldi	r25, 0x0E	; 14
     e32:	21 50       	subi	r18, 0x01	; 1
     e34:	80 40       	sbci	r24, 0x00	; 0
     e36:	90 40       	sbci	r25, 0x00	; 0
     e38:	e1 f7       	brne	.-8      	; 0xe32 <_Z11change_foodv+0x2f6>
     e3a:	00 c0       	rjmp	.+0      	; 0xe3c <_Z11change_foodv+0x300>
     e3c:	00 00       	nop
     e3e:	cb ce       	rjmp	.-618    	; 0xbd6 <_Z11change_foodv+0x9a>


		_delay_ms(DELAY_TIME_LOOP);
	}

}
     e40:	df 91       	pop	r29
     e42:	cf 91       	pop	r28
     e44:	1f 91       	pop	r17
     e46:	08 95       	ret

00000e48 <_Z8mainmenuv>:
     e48:	2f ef       	ldi	r18, 0xFF	; 255
     e4a:	8a e6       	ldi	r24, 0x6A	; 106
     e4c:	93 e0       	ldi	r25, 0x03	; 3
     e4e:	21 50       	subi	r18, 0x01	; 1
     e50:	80 40       	sbci	r24, 0x00	; 0
     e52:	90 40       	sbci	r25, 0x00	; 0
     e54:	e1 f7       	brne	.-8      	; 0xe4e <_Z8mainmenuv+0x6>
     e56:	00 c0       	rjmp	.+0      	; 0xe58 <_Z8mainmenuv+0x10>
     e58:	00 00       	nop


void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
     e5a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	num_of_food=0;
     e5e:	10 92 b1 02 	sts	0x02B1, r1
     e62:	10 92 b0 02 	sts	0x02B0, r1
	int state=0;
	int first_visit=0;
	main_menu_print(first_visit);
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
	int first_visit=0;
     e6e:	e1 2c       	mov	r14, r1
     e70:	f1 2c       	mov	r15, r1
void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
     e72:	c0 e0       	ldi	r28, 0x00	; 0
     e74:	d0 e0       	ldi	r29, 0x00	; 0
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
     e76:	00 e0       	ldi	r16, 0x00	; 0
     e78:	10 e0       	ldi	r17, 0x00	; 0
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
					if (c==1)
     e7a:	cc 24       	eor	r12, r12
     e7c:	c3 94       	inc	r12
     e7e:	d1 2c       	mov	r13, r1
	int first_visit=0;
	main_menu_print(first_visit);

	while(1)
	{
		int in=input();
     e80:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		//  lcd_puts (in);
		if (in!=000)
     e84:	89 2b       	or	r24, r25
     e86:	e1 f3       	breq	.-8      	; 0xe80 <_Z8mainmenuv+0x38>
     e88:	2f ef       	ldi	r18, 0xFF	; 255
     e8a:	86 e7       	ldi	r24, 0x76	; 118
     e8c:	91 e0       	ldi	r25, 0x01	; 1
     e8e:	21 50       	subi	r18, 0x01	; 1
     e90:	80 40       	sbci	r24, 0x00	; 0
     e92:	90 40       	sbci	r25, 0x00	; 0
     e94:	e1 f7       	brne	.-8      	; 0xe8e <_Z8mainmenuv+0x46>
     e96:	00 c0       	rjmp	.+0      	; 0xe98 <_Z8mainmenuv+0x50>
     e98:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in=input();
     e9a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			if (state==0&& (in==up ||in==down))
     e9e:	20 97       	sbiw	r28, 0x00	; 0
     ea0:	31 f5       	brne	.+76     	; 0xeee <_Z8mainmenuv+0xa6>
     ea2:	20 91 6c 00 	lds	r18, 0x006C
     ea6:	30 91 6d 00 	lds	r19, 0x006D
     eaa:	82 17       	cp	r24, r18
     eac:	93 07       	cpc	r25, r19
     eae:	41 f0       	breq	.+16     	; 0xec0 <_Z8mainmenuv+0x78>
     eb0:	20 91 6a 00 	lds	r18, 0x006A
     eb4:	30 91 6b 00 	lds	r19, 0x006B
     eb8:	82 17       	cp	r24, r18
     eba:	93 07       	cpc	r25, r19
     ebc:	09 f0       	breq	.+2      	; 0xec0 <_Z8mainmenuv+0x78>
     ebe:	70 c0       	rjmp	.+224    	; 0xfa0 <_Z8mainmenuv+0x158>
			{
				lcd_setCursor(0,0);
     ec0:	60 2f       	mov	r22, r16
     ec2:	71 2f       	mov	r23, r17
     ec4:	80 2f       	mov	r24, r16
     ec6:	91 2f       	mov	r25, r17
     ec8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
     ecc:	8f eb       	ldi	r24, 0xBF	; 191
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,1);
     ed4:	6c 2d       	mov	r22, r12
     ed6:	7d 2d       	mov	r23, r13
     ed8:	80 2f       	mov	r24, r16
     eda:	91 2f       	mov	r25, r17
     edc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
     ee0:	8a e7       	ldi	r24, 0x7A	; 122
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=1;
     ee8:	cc 2d       	mov	r28, r12
     eea:	dd 2d       	mov	r29, r13
     eec:	4f c0       	rjmp	.+158    	; 0xf8c <_Z8mainmenuv+0x144>
			}
			else if (state==1 && (in==up ||in==down))
     eee:	c1 30       	cpi	r28, 0x01	; 1
     ef0:	d1 05       	cpc	r29, r1
     ef2:	09 f0       	breq	.+2      	; 0xef6 <_Z8mainmenuv+0xae>
     ef4:	5d c0       	rjmp	.+186    	; 0xfb0 <_Z8mainmenuv+0x168>
     ef6:	20 91 6c 00 	lds	r18, 0x006C
     efa:	30 91 6d 00 	lds	r19, 0x006D
     efe:	82 17       	cp	r24, r18
     f00:	93 07       	cpc	r25, r19
     f02:	39 f0       	breq	.+14     	; 0xf12 <_Z8mainmenuv+0xca>
     f04:	20 91 6a 00 	lds	r18, 0x006A
     f08:	30 91 6b 00 	lds	r19, 0x006B
     f0c:	82 17       	cp	r24, r18
     f0e:	93 07       	cpc	r25, r19
     f10:	b9 f4       	brne	.+46     	; 0xf40 <_Z8mainmenuv+0xf8>
			{
				lcd_setCursor(0,1);
     f12:	6c 2d       	mov	r22, r12
     f14:	7d 2d       	mov	r23, r13
     f16:	80 2f       	mov	r24, r16
     f18:	91 2f       	mov	r25, r17
     f1a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
     f1e:	8f eb       	ldi	r24, 0xBF	; 191
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,0);
     f26:	60 2f       	mov	r22, r16
     f28:	71 2f       	mov	r23, r17
     f2a:	80 2f       	mov	r24, r16
     f2c:	91 2f       	mov	r25, r17
     f2e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
     f32:	8a e7       	ldi	r24, 0x7A	; 122
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=0;
     f3a:	c0 2f       	mov	r28, r16
     f3c:	d1 2f       	mov	r29, r17
     f3e:	26 c0       	rjmp	.+76     	; 0xf8c <_Z8mainmenuv+0x144>
			}
			else if (in==ok)
     f40:	20 91 62 00 	lds	r18, 0x0062
     f44:	30 91 63 00 	lds	r19, 0x0063
     f48:	82 17       	cp	r24, r18
     f4a:	93 07       	cpc	r25, r19
     f4c:	f9 f4       	brne	.+62     	; 0xf8c <_Z8mainmenuv+0x144>
			{
				//_delay_ms(DELAY_TIME);
				if (state==0)
     f4e:	cd 2b       	or	r28, r29
     f50:	b1 f4       	brne	.+44     	; 0xf7e <_Z8mainmenuv+0x136>
				{
					int c=0;
					if (first_visit==0)
     f52:	e1 14       	cp	r14, r1
     f54:	f1 04       	cpc	r15, r1
     f56:	59 f4       	brne	.+22     	; 0xf6e <_Z8mainmenuv+0x126>
					c=select_food();
     f58:	0e 94 3f 03 	call	0x67e	; 0x67e <_Z11select_foodv>
					else
					change_food();
					if (c==1)
     f5c:	3c 2d       	mov	r19, r12
     f5e:	2d 2d       	mov	r18, r13
     f60:	01 97       	sbiw	r24, 0x01	; 1
     f62:	11 f0       	breq	.+4      	; 0xf68 <_Z8mainmenuv+0x120>
     f64:	30 2f       	mov	r19, r16
     f66:	21 2f       	mov	r18, r17
					first_visit=1;
     f68:	e3 2e       	mov	r14, r19
     f6a:	f2 2e       	mov	r15, r18
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <_Z8mainmenuv+0x12a>
				{
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
     f6e:	0e 94 9e 05 	call	0xb3c	; 0xb3c <_Z11change_foodv>
					if (c==1)
					first_visit=1;
					state=0;
					main_menu_print(first_visit);
     f72:	c7 01       	movw	r24, r14
     f74:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
     f78:	c0 2f       	mov	r28, r16
     f7a:	d1 2f       	mov	r29, r17
     f7c:	07 c0       	rjmp	.+14     	; 0xf8c <_Z8mainmenuv+0x144>
					main_menu_print(first_visit);
				}
				else
				//selected_food();
				{
					selected_food();
     f7e:	0e 94 8f 04 	call	0x91e	; 0x91e <_Z13selected_foodv>
					main_menu_print(first_visit);
     f82:	c7 01       	movw	r24, r14
     f84:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					state=0;
     f88:	c0 2f       	mov	r28, r16
     f8a:	d1 2f       	mov	r29, r17
     f8c:	9f ef       	ldi	r25, 0xFF	; 255
     f8e:	25 ea       	ldi	r18, 0xA5	; 165
     f90:	8e e0       	ldi	r24, 0x0E	; 14
     f92:	91 50       	subi	r25, 0x01	; 1
     f94:	20 40       	sbci	r18, 0x00	; 0
     f96:	80 40       	sbci	r24, 0x00	; 0
     f98:	e1 f7       	brne	.-8      	; 0xf92 <_Z8mainmenuv+0x14a>
     f9a:	00 c0       	rjmp	.+0      	; 0xf9c <_Z8mainmenuv+0x154>
     f9c:	00 00       	nop
     f9e:	70 cf       	rjmp	.-288    	; 0xe80 <_Z8mainmenuv+0x38>
				lcd_puts(" ");
				lcd_setCursor(0,0);
				lcd_puts(">");
				state=0;
			}
			else if (in==ok)
     fa0:	20 91 62 00 	lds	r18, 0x0062
     fa4:	30 91 63 00 	lds	r19, 0x0063
     fa8:	82 17       	cp	r24, r18
     faa:	93 07       	cpc	r25, r19
     fac:	79 f7       	brne	.-34     	; 0xf8c <_Z8mainmenuv+0x144>
     fae:	d1 cf       	rjmp	.-94     	; 0xf52 <_Z8mainmenuv+0x10a>
     fb0:	20 91 62 00 	lds	r18, 0x0062
     fb4:	30 91 63 00 	lds	r19, 0x0063
     fb8:	82 17       	cp	r24, r18
     fba:	93 07       	cpc	r25, r19
     fbc:	39 f7       	brne	.-50     	; 0xf8c <_Z8mainmenuv+0x144>
     fbe:	df cf       	rjmp	.-66     	; 0xf7e <_Z8mainmenuv+0x136>

00000fc0 <main>:
void selected_food();
void change_food();
void main_menu_test();

int main() {
	sei();
     fc0:	78 94       	sei
	uart0_init(UART_BAUD_SELECT(9600,F_CPU));
     fc2:	87 e6       	ldi	r24, 0x67	; 103
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	0e 94 3a 08 	call	0x1074	; 0x1074 <_Z10uart0_initj>
	// set up the LCD's number of columns and rows:
	// pinMode(13,OUTPUT);
	
	DDRD&= ~(1<<s_zero);
     fca:	88 98       	cbi	0x11, 0	; 17
	DDRD&= ~(1<<s_one);
     fcc:	89 98       	cbi	0x11, 1	; 17
   DDRD&= ~(1<<s_two);
     fce:	8a 98       	cbi	0x11, 2	; 17


	lcd_init();
     fd0:	0e 94 91 00 	call	0x122	; 0x122 <_Z8lcd_initv>
	mainmenu();
     fd4:	0e 94 24 07 	call	0xe48	; 0xe48 <_Z8mainmenuv>

00000fd8 <__vector_13>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
     fd8:	1f 92       	push	r1
     fda:	0f 92       	push	r0
     fdc:	0f b6       	in	r0, 0x3f	; 63
     fde:	0f 92       	push	r0
     fe0:	11 24       	eor	r1, r1
     fe2:	2f 93       	push	r18
     fe4:	8f 93       	push	r24
     fe6:	9f 93       	push	r25
     fe8:	ef 93       	push	r30
     fea:	ff 93       	push	r31
     fec:	8b b1       	in	r24, 0x0b	; 11
     fee:	2c b1       	in	r18, 0x0c	; 12
     ff0:	88 71       	andi	r24, 0x18	; 24
     ff2:	e0 91 b4 02 	lds	r30, 0x02B4
     ff6:	ef 5f       	subi	r30, 0xFF	; 255
     ff8:	ef 71       	andi	r30, 0x1F	; 31
     ffa:	90 91 b3 02 	lds	r25, 0x02B3
     ffe:	e9 17       	cp	r30, r25
    1000:	39 f0       	breq	.+14     	; 0x1010 <__vector_13+0x38>
    1002:	e0 93 b4 02 	sts	0x02B4, r30
    1006:	f0 e0       	ldi	r31, 0x00	; 0
    1008:	e9 54       	subi	r30, 0x49	; 73
    100a:	fd 4f       	sbci	r31, 0xFD	; 253
    100c:	20 83       	st	Z, r18
    100e:	01 c0       	rjmp	.+2      	; 0x1012 <__vector_13+0x3a>
    1010:	82 e0       	ldi	r24, 0x02	; 2
    1012:	80 93 b2 02 	sts	0x02B2, r24
    1016:	ff 91       	pop	r31
    1018:	ef 91       	pop	r30
    101a:	9f 91       	pop	r25
    101c:	8f 91       	pop	r24
    101e:	2f 91       	pop	r18
    1020:	0f 90       	pop	r0
    1022:	0f be       	out	0x3f, r0	; 63
    1024:	0f 90       	pop	r0
    1026:	1f 90       	pop	r1
    1028:	18 95       	reti

0000102a <__vector_14>:
    102a:	1f 92       	push	r1
    102c:	0f 92       	push	r0
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	0f 92       	push	r0
    1032:	11 24       	eor	r1, r1
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	ef 93       	push	r30
    103a:	ff 93       	push	r31
    103c:	90 91 b6 02 	lds	r25, 0x02B6
    1040:	80 91 b5 02 	lds	r24, 0x02B5
    1044:	98 17       	cp	r25, r24
    1046:	61 f0       	breq	.+24     	; 0x1060 <__vector_14+0x36>
    1048:	e0 91 b5 02 	lds	r30, 0x02B5
    104c:	ef 5f       	subi	r30, 0xFF	; 255
    104e:	ef 71       	andi	r30, 0x1F	; 31
    1050:	e0 93 b5 02 	sts	0x02B5, r30
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	e9 52       	subi	r30, 0x29	; 41
    1058:	fd 4f       	sbci	r31, 0xFD	; 253
    105a:	80 81       	ld	r24, Z
    105c:	8c b9       	out	0x0c, r24	; 12
    105e:	01 c0       	rjmp	.+2      	; 0x1062 <__vector_14+0x38>
    1060:	55 98       	cbi	0x0a, 5	; 10
    1062:	ff 91       	pop	r31
    1064:	ef 91       	pop	r30
    1066:	9f 91       	pop	r25
    1068:	8f 91       	pop	r24
    106a:	0f 90       	pop	r0
    106c:	0f be       	out	0x3f, r0	; 63
    106e:	0f 90       	pop	r0
    1070:	1f 90       	pop	r1
    1072:	18 95       	reti

00001074 <_Z10uart0_initj>:
    1074:	10 92 b6 02 	sts	0x02B6, r1
    1078:	10 92 b5 02 	sts	0x02B5, r1
    107c:	10 92 b4 02 	sts	0x02B4, r1
    1080:	10 92 b3 02 	sts	0x02B3, r1
    1084:	99 23       	and	r25, r25
    1086:	1c f4       	brge	.+6      	; 0x108e <_Z10uart0_initj+0x1a>
    1088:	22 e0       	ldi	r18, 0x02	; 2
    108a:	2b b9       	out	0x0b, r18	; 11
    108c:	9f 77       	andi	r25, 0x7F	; 127
    108e:	90 bd       	out	0x20, r25	; 32
    1090:	89 b9       	out	0x09, r24	; 9
    1092:	88 e9       	ldi	r24, 0x98	; 152
    1094:	8a b9       	out	0x0a, r24	; 10
    1096:	86 e8       	ldi	r24, 0x86	; 134
    1098:	80 bd       	out	0x20, r24	; 32
    109a:	08 95       	ret

0000109c <_Z10uart0_getcv>:
    109c:	90 91 b4 02 	lds	r25, 0x02B4
    10a0:	80 91 b3 02 	lds	r24, 0x02B3
    10a4:	98 17       	cp	r25, r24
    10a6:	91 f0       	breq	.+36     	; 0x10cc <_Z10uart0_getcv+0x30>
    10a8:	e0 91 b3 02 	lds	r30, 0x02B3
    10ac:	ef 5f       	subi	r30, 0xFF	; 255
    10ae:	ef 71       	andi	r30, 0x1F	; 31
    10b0:	e0 93 b3 02 	sts	0x02B3, r30
    10b4:	f0 e0       	ldi	r31, 0x00	; 0
    10b6:	e9 54       	subi	r30, 0x49	; 73
    10b8:	fd 4f       	sbci	r31, 0xFD	; 253
    10ba:	20 81       	ld	r18, Z
    10bc:	80 91 b2 02 	lds	r24, 0x02B2
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	98 2f       	mov	r25, r24
    10c4:	88 27       	eor	r24, r24
    10c6:	82 0f       	add	r24, r18
    10c8:	91 1d       	adc	r25, r1
    10ca:	08 95       	ret
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	91 e0       	ldi	r25, 0x01	; 1
    10d0:	08 95       	ret

000010d2 <_Z10uart0_putch>:
    10d2:	20 91 b6 02 	lds	r18, 0x02B6
    10d6:	2f 5f       	subi	r18, 0xFF	; 255
    10d8:	2f 71       	andi	r18, 0x1F	; 31
    10da:	90 91 b5 02 	lds	r25, 0x02B5
    10de:	29 17       	cp	r18, r25
    10e0:	e1 f3       	breq	.-8      	; 0x10da <_Z10uart0_putch+0x8>
    10e2:	e2 2f       	mov	r30, r18
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	e9 52       	subi	r30, 0x29	; 41
    10e8:	fd 4f       	sbci	r31, 0xFD	; 253
    10ea:	80 83       	st	Z, r24
    10ec:	20 93 b6 02 	sts	0x02B6, r18
    10f0:	55 9a       	sbi	0x0a, 5	; 10
    10f2:	08 95       	ret

000010f4 <_Z12uart0_putinti>:
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	2f 97       	sbiw	r28, 0x0f	; 15
    1102:	0f b6       	in	r0, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	de bf       	out	0x3e, r29	; 62
    1108:	0f be       	out	0x3f, r0	; 63
    110a:	cd bf       	out	0x3d, r28	; 61
    110c:	4a e0       	ldi	r20, 0x0A	; 10
    110e:	be 01       	movw	r22, r28
    1110:	6f 5f       	subi	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__itoa_ncheck>
    1118:	89 81       	ldd	r24, Y+1	; 0x01
    111a:	88 23       	and	r24, r24
    111c:	51 f0       	breq	.+20     	; 0x1132 <_Z12uart0_putinti+0x3e>
    111e:	8e 01       	movw	r16, r28
    1120:	0e 5f       	subi	r16, 0xFE	; 254
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_Z10uart0_putch>
    1128:	f8 01       	movw	r30, r16
    112a:	81 91       	ld	r24, Z+
    112c:	8f 01       	movw	r16, r30
    112e:	81 11       	cpse	r24, r1
    1130:	f9 cf       	rjmp	.-14     	; 0x1124 <_Z12uart0_putinti+0x30>
    1132:	2f 96       	adiw	r28, 0x0f	; 15
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	df 91       	pop	r29
    1140:	cf 91       	pop	r28
    1142:	1f 91       	pop	r17
    1144:	0f 91       	pop	r16
    1146:	08 95       	ret

00001148 <_Z10uart0_putsPKc>:
    1148:	cf 93       	push	r28
    114a:	df 93       	push	r29
    114c:	ec 01       	movw	r28, r24
    114e:	88 81       	ld	r24, Y
    1150:	88 23       	and	r24, r24
    1152:	31 f0       	breq	.+12     	; 0x1160 <_Z10uart0_putsPKc+0x18>
    1154:	21 96       	adiw	r28, 0x01	; 1
    1156:	0e 94 69 08 	call	0x10d2	; 0x10d2 <_Z10uart0_putch>
    115a:	89 91       	ld	r24, Y+
    115c:	81 11       	cpse	r24, r1
    115e:	fb cf       	rjmp	.-10     	; 0x1156 <_Z10uart0_putsPKc+0xe>
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	08 95       	ret

00001166 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
    1166:	80 91 b4 02 	lds	r24, 0x02B4
    116a:	20 91 b3 02 	lds	r18, 0x02B3
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	4f 96       	adiw	r24, 0x1f	; 31
    1172:	82 1b       	sub	r24, r18
    1174:	91 09       	sbc	r25, r1
    1176:	6f e1       	ldi	r22, 0x1F	; 31
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	0e 94 c5 08 	call	0x118a	; 0x118a <__divmodhi4>
}/* uart_available */
    117e:	08 95       	ret

00001180 <_Z11uart0_flushv>:
 Input:    None
 Returns:  None
 **************************************************************************/
void uart0_flush(void)
{
	UART0_RxHead = UART0_RxTail;
    1180:	80 91 b3 02 	lds	r24, 0x02B3
    1184:	80 93 b4 02 	sts	0x02B4, r24
    1188:	08 95       	ret

0000118a <__divmodhi4>:
    118a:	97 fb       	bst	r25, 7
    118c:	07 2e       	mov	r0, r23
    118e:	16 f4       	brtc	.+4      	; 0x1194 <__divmodhi4+0xa>
    1190:	00 94       	com	r0
    1192:	07 d0       	rcall	.+14     	; 0x11a2 <__divmodhi4_neg1>
    1194:	77 fd       	sbrc	r23, 7
    1196:	09 d0       	rcall	.+18     	; 0x11aa <__divmodhi4_neg2>
    1198:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__udivmodhi4>
    119c:	07 fc       	sbrc	r0, 7
    119e:	05 d0       	rcall	.+10     	; 0x11aa <__divmodhi4_neg2>
    11a0:	3e f4       	brtc	.+14     	; 0x11b0 <__divmodhi4_exit>

000011a2 <__divmodhi4_neg1>:
    11a2:	90 95       	com	r25
    11a4:	81 95       	neg	r24
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	08 95       	ret

000011aa <__divmodhi4_neg2>:
    11aa:	70 95       	com	r23
    11ac:	61 95       	neg	r22
    11ae:	7f 4f       	sbci	r23, 0xFF	; 255

000011b0 <__divmodhi4_exit>:
    11b0:	08 95       	ret

000011b2 <__udivmodhi4>:
    11b2:	aa 1b       	sub	r26, r26
    11b4:	bb 1b       	sub	r27, r27
    11b6:	51 e1       	ldi	r21, 0x11	; 17
    11b8:	07 c0       	rjmp	.+14     	; 0x11c8 <__udivmodhi4_ep>

000011ba <__udivmodhi4_loop>:
    11ba:	aa 1f       	adc	r26, r26
    11bc:	bb 1f       	adc	r27, r27
    11be:	a6 17       	cp	r26, r22
    11c0:	b7 07       	cpc	r27, r23
    11c2:	10 f0       	brcs	.+4      	; 0x11c8 <__udivmodhi4_ep>
    11c4:	a6 1b       	sub	r26, r22
    11c6:	b7 0b       	sbc	r27, r23

000011c8 <__udivmodhi4_ep>:
    11c8:	88 1f       	adc	r24, r24
    11ca:	99 1f       	adc	r25, r25
    11cc:	5a 95       	dec	r21
    11ce:	a9 f7       	brne	.-22     	; 0x11ba <__udivmodhi4_loop>
    11d0:	80 95       	com	r24
    11d2:	90 95       	com	r25
    11d4:	bc 01       	movw	r22, r24
    11d6:	cd 01       	movw	r24, r26
    11d8:	08 95       	ret

000011da <strcpy>:
    11da:	fb 01       	movw	r30, r22
    11dc:	dc 01       	movw	r26, r24
    11de:	01 90       	ld	r0, Z+
    11e0:	0d 92       	st	X+, r0
    11e2:	00 20       	and	r0, r0
    11e4:	e1 f7       	brne	.-8      	; 0x11de <strcpy+0x4>
    11e6:	08 95       	ret

000011e8 <__itoa_ncheck>:
    11e8:	bb 27       	eor	r27, r27
    11ea:	4a 30       	cpi	r20, 0x0A	; 10
    11ec:	31 f4       	brne	.+12     	; 0x11fa <__itoa_ncheck+0x12>
    11ee:	99 23       	and	r25, r25
    11f0:	22 f4       	brpl	.+8      	; 0x11fa <__itoa_ncheck+0x12>
    11f2:	bd e2       	ldi	r27, 0x2D	; 45
    11f4:	90 95       	com	r25
    11f6:	81 95       	neg	r24
    11f8:	9f 4f       	sbci	r25, 0xFF	; 255
    11fa:	0c 94 00 09 	jmp	0x1200	; 0x1200 <__utoa_common>

000011fe <__utoa_ncheck>:
    11fe:	bb 27       	eor	r27, r27

00001200 <__utoa_common>:
    1200:	fb 01       	movw	r30, r22
    1202:	55 27       	eor	r21, r21
    1204:	aa 27       	eor	r26, r26
    1206:	88 0f       	add	r24, r24
    1208:	99 1f       	adc	r25, r25
    120a:	aa 1f       	adc	r26, r26
    120c:	a4 17       	cp	r26, r20
    120e:	10 f0       	brcs	.+4      	; 0x1214 <__utoa_common+0x14>
    1210:	a4 1b       	sub	r26, r20
    1212:	83 95       	inc	r24
    1214:	50 51       	subi	r21, 0x10	; 16
    1216:	b9 f7       	brne	.-18     	; 0x1206 <__utoa_common+0x6>
    1218:	a0 5d       	subi	r26, 0xD0	; 208
    121a:	aa 33       	cpi	r26, 0x3A	; 58
    121c:	08 f0       	brcs	.+2      	; 0x1220 <__utoa_common+0x20>
    121e:	a9 5d       	subi	r26, 0xD9	; 217
    1220:	a1 93       	st	Z+, r26
    1222:	00 97       	sbiw	r24, 0x00	; 0
    1224:	79 f7       	brne	.-34     	; 0x1204 <__utoa_common+0x4>
    1226:	b1 11       	cpse	r27, r1
    1228:	b1 93       	st	Z+, r27
    122a:	11 92       	st	Z+, r1
    122c:	cb 01       	movw	r24, r22
    122e:	0c 94 19 09 	jmp	0x1232	; 0x1232 <strrev>

00001232 <strrev>:
    1232:	dc 01       	movw	r26, r24
    1234:	fc 01       	movw	r30, r24
    1236:	67 2f       	mov	r22, r23
    1238:	71 91       	ld	r23, Z+
    123a:	77 23       	and	r23, r23
    123c:	e1 f7       	brne	.-8      	; 0x1236 <strrev+0x4>
    123e:	32 97       	sbiw	r30, 0x02	; 2
    1240:	04 c0       	rjmp	.+8      	; 0x124a <strrev+0x18>
    1242:	7c 91       	ld	r23, X
    1244:	6d 93       	st	X+, r22
    1246:	70 83       	st	Z, r23
    1248:	62 91       	ld	r22, -Z
    124a:	ae 17       	cp	r26, r30
    124c:	bf 07       	cpc	r27, r31
    124e:	c8 f3       	brcs	.-14     	; 0x1242 <strrev+0x10>
    1250:	08 95       	ret

00001252 <_exit>:
    1252:	f8 94       	cli

00001254 <__stop_program>:
    1254:	ff cf       	rjmp	.-2      	; 0x1254 <__stop_program>
