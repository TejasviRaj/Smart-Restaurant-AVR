
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001306  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000be  00800060  00001306  0000139a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001eb  0080011e  0080011e  00001458  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001458  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001488  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  000014c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e54  00000000  00000000  00001664  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aaa  00000000  00000000  000044b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000142e  00000000  00000000  00004f62  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000494  00000000  00000000  00006390  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007e8  00000000  00000000  00006824  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001427  00000000  00000000  0000700c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00008433  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__vector_13>
      38:	0c 94 72 08 	jmp	0x10e4	; 0x10e4 <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e0       	ldi	r30, 0x06	; 6
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 31       	cpi	r26, 0x1E	; 30
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	23 e0       	ldi	r18, 0x03	; 3
      78:	ae e1       	ldi	r26, 0x1E	; 30
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 30       	cpi	r26, 0x09	; 9
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 3d 08 	call	0x107a	; 0x107a <main>
      8a:	0c 94 81 09 	jmp	0x1302	; 0x1302 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      92:	95 ed       	ldi	r25, 0xD5	; 213
      94:	9a 95       	dec	r25
      96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
      98:	00 00       	nop
#define	LCD_STROBE()	((CPORT |= (1 << EN)),(CPORT &= ~(1 << EN)))
static void lcd_write(uint8_t c)
{
	_delay_us(40);

	if(c & 0x80)
      9a:	88 23       	and	r24, r24
      9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
	DPORT |=  (1 << D7);
      9e:	da 9a       	sbi	0x1b, 2	; 27
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
	else
	DPORT &= ~(1 << D7);
      a2:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x40)
      a4:	86 ff       	sbrs	r24, 6
      a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
	DPORT |=  (1 << D6);
      a8:	db 9a       	sbi	0x1b, 3	; 27
      aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
	else
	DPORT &= ~(1 << D6);
      ac:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x20)
      ae:	85 ff       	sbrs	r24, 5
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
	DPORT |=  (1 << D5);
      b2:	dc 9a       	sbi	0x1b, 4	; 27
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
	else
	DPORT &= ~(1 << D5);
      b6:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x10)
      b8:	84 ff       	sbrs	r24, 4
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
	DPORT |=  (1 << D4);
      bc:	dd 9a       	sbi	0x1b, 5	; 27
      be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
	else
	DPORT &= ~(1 << D4);
      c0:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      c2:	de 9a       	sbi	0x1b, 6	; 27
      c4:	de 98       	cbi	0x1b, 6	; 27
	
	

	if(c & 0x08)
      c6:	83 ff       	sbrs	r24, 3
      c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
	
	DPORT |=  (1 << D7);
      ca:	da 9a       	sbi	0x1b, 2	; 27
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
	else
	DPORT &= ~(1 << D7);
      ce:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x04)
      d0:	82 ff       	sbrs	r24, 2
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
	DPORT |=  (1 << D6);
      d4:	db 9a       	sbi	0x1b, 3	; 27
      d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
	else
	DPORT &= ~(1 << D6);
      d8:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x02)
      da:	81 ff       	sbrs	r24, 1
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
	DPORT |=  (1 << D5);
      de:	dc 9a       	sbi	0x1b, 4	; 27
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
	else
	DPORT &= ~(1 << D5);
      e2:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x01)
      e4:	80 ff       	sbrs	r24, 0
      e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
	DPORT |=  (1 << D4);
      e8:	dd 9a       	sbi	0x1b, 5	; 27
      ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
	else
	DPORT &= ~(1 << D4);
      ec:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      ee:	de 9a       	sbi	0x1b, 6	; 27
      f0:	de 98       	cbi	0x1b, 6	; 27
      f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
#include "lcd.h"


void lcd_clear(void)
{
	CPORT &= ~(1 << RS);
      f4:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(1<<LCD_CLR);
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	8f e3       	ldi	r24, 0x3F	; 63
      fe:	9f e1       	ldi	r25, 0x1F	; 31
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
     104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
     106:	00 00       	nop
     108:	08 95       	ret

0000010a <_Z8lcd_gotoh>:
	_delay_ms(2);
}

void lcd_goto(unsigned char pos)
{
	CPORT &= ~(1 << RS);
     10a:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(0x80|pos);
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     112:	08 95       	ret

00000114 <_Z10lcd_gotoxyhh>:
}


void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     114:	90 e4       	ldi	r25, 0x40	; 64
     116:	69 9f       	mul	r22, r25
     118:	80 0d       	add	r24, r0
     11a:	11 24       	eor	r1, r1
     11c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_gotoh>
     120:	08 95       	ret

00000122 <_Z8lcd_initv>:
}

void lcd_init()
{
	DDR(CPORT) |= (1 << RS);
     122:	d7 9a       	sbi	0x1a, 7	; 26
	DDR(CPORT) |= (1 << EN);
     124:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDR(DPORT) |= (1 << D7);
     126:	d2 9a       	sbi	0x1a, 2	; 26
	DDR(DPORT) |= (1 << D6);
     128:	d3 9a       	sbi	0x1a, 3	; 26
	DDR(DPORT) |= (1 << D5);
     12a:	d4 9a       	sbi	0x1a, 4	; 26
	DDR(DPORT) |= (1 << D4);
     12c:	d5 9a       	sbi	0x1a, 5	; 26
	
	CPORT &= ~(1 << RS);
     12e:	df 98       	cbi	0x1b, 7	; 27
	CPORT &= ~(1 << EN);
     130:	de 98       	cbi	0x1b, 6	; 27
     132:	8f e5       	ldi	r24, 0x5F	; 95
     134:	9a ee       	ldi	r25, 0xEA	; 234
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <_Z8lcd_initv+0x14>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8lcd_initv+0x1a>
     13c:	00 00       	nop
	
	_delay_ms(15);

	DPORT |= (1 << D4);
     13e:	dd 9a       	sbi	0x1b, 5	; 27
	DPORT |= (1 << D5);
     140:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     142:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     144:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     146:	de 9a       	sbi	0x1b, 6	; 27
     148:	de 98       	cbi	0x1b, 6	; 27
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	9e e4       	ldi	r25, 0x4E	; 78
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <_Z8lcd_initv+0x2c>
     152:	00 c0       	rjmp	.+0      	; 0x154 <_Z8lcd_initv+0x32>
     154:	00 00       	nop
	_delay_ms(5);
	LCD_STROBE();
     156:	de 9a       	sbi	0x1b, 6	; 27
     158:	de 98       	cbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	8f e1       	ldi	r24, 0x1F	; 31
     15c:	93 e0       	ldi	r25, 0x03	; 3
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <_Z8lcd_initv+0x3c>
     162:	00 c0       	rjmp	.+0      	; 0x164 <_Z8lcd_initv+0x42>
     164:	00 00       	nop
	_delay_us(200);
	LCD_STROBE();
     166:	de 9a       	sbi	0x1b, 6	; 27
     168:	de 98       	cbi	0x1b, 6	; 27
     16a:	8f e1       	ldi	r24, 0x1F	; 31
     16c:	93 e0       	ldi	r25, 0x03	; 3
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x4c>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_Z8lcd_initv+0x52>
     174:	00 00       	nop
	_delay_us(200);
	
	
	DPORT &= ~(1 << D4);
     176:	dd 98       	cbi	0x1b, 5	; 27
	DPORT |=  (1 << D5);
     178:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     17a:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     17c:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     17e:	de 9a       	sbi	0x1b, 6	; 27
     180:	de 98       	cbi	0x1b, 6	; 27

	lcd_write(0x28);
     182:	88 e2       	ldi	r24, 0x28	; 40
     184:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_write(0b00001100);
     188:	8c e0       	ldi	r24, 0x0C	; 12
     18a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_clear();
     18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_write(0x6);
     192:	86 e0       	ldi	r24, 0x06	; 6
     194:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     198:	08 95       	ret

0000019a <_Z8lcd_putsPKc>:
}

void lcd_puts(const char * s)
{
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
	CPORT|= (1 << RS);
     1a0:	df 9a       	sbi	0x1b, 7	; 27
	while(*s)
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <_Z8lcd_putsPKc+0x1a>
     1a8:	21 96       	adiw	r28, 0x01	; 1
	lcd_write(*s++);
     1aa:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
}

void lcd_puts(const char * s)
{
	CPORT|= (1 << RS);
	while(*s)
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <_Z8lcd_putsPKc+0x10>
	lcd_write(*s++);
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <_Z8lcd_putcc>:

void lcd_putc(char x)
{
	CPORT|= (1 << RS);
     1ba:	df 9a       	sbi	0x1b, 7	; 27
	lcd_write(x);
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     1c0:	08 95       	ret

000001c2 <_Z7lcd_numi>:
}

void lcd_num(int in)
{
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	c4 56       	subi	r28, 0x64	; 100
     1d4:	d1 09       	sbc	r29, r1
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	bc 01       	movw	r22, r24
     1e2:	ce 01       	movw	r24, r28
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	7c 01       	movw	r14, r24
     1e8:	fc 01       	movw	r30, r24
	int c;
	char temp[100];
	int index=0;
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	10 e0       	ldi	r17, 0x00	; 0
	do
	{
		c=in%10;
     1ee:	2a e0       	ldi	r18, 0x0A	; 10
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_Z7lcd_numi+0x34>
		in=in/10;
		temp[index]=c+'0';
		index++;
     1f4:	8c 01       	movw	r16, r24
	char temp[100];
	int index=0;
	do
	{
		c=in%10;
		in=in/10;
     1f6:	cb 01       	movw	r24, r22
     1f8:	b9 01       	movw	r22, r18
     1fa:	0e 94 1d 09 	call	0x123a	; 0x123a <__divmodhi4>
		temp[index]=c+'0';
     1fe:	90 e3       	ldi	r25, 0x30	; 48
     200:	98 0f       	add	r25, r24
     202:	91 93       	st	Z+, r25
		index++;
     204:	c8 01       	movw	r24, r16
     206:	01 96       	adiw	r24, 0x01	; 1
void lcd_num(int in)
{
	int c;
	char temp[100];
	int index=0;
	do
     208:	61 15       	cp	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	99 f7       	brne	.-26     	; 0x1f4 <_Z7lcd_numi+0x32>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     20e:	11 23       	and	r17, r17
     210:	64 f0       	brlt	.+24     	; 0x22a <_Z7lcd_numi+0x68>
     212:	0c 0f       	add	r16, r28
     214:	1d 1f       	adc	r17, r29
     216:	0e 5f       	subi	r16, 0xFE	; 254
     218:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_putc(temp[i]);
     21a:	f8 01       	movw	r30, r16
     21c:	82 91       	ld	r24, -Z
     21e:	8f 01       	movw	r16, r30
     220:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z8lcd_putcc>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     224:	0e 15       	cp	r16, r14
     226:	1f 05       	cpc	r17, r15
     228:	c1 f7       	brne	.-16     	; 0x21a <_Z7lcd_numi+0x58>
	{
		lcd_putc(temp[i]);
	}
}
     22a:	cc 59       	subi	r28, 0x9C	; 156
     22c:	df 4f       	sbci	r29, 0xFF	; 255
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	08 95       	ret

00000246 <_Z13lcd_setCursorii>:
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
	}
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	96 1b       	sub	r25, r22
     24a:	69 2f       	mov	r22, r25
     24c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     250:	08 95       	ret

00000252 <_Z10uart0_getsPc>:
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	0f 93       	push	r16
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	c4 56       	subi	r28, 0x64	; 100
     268:	d1 09       	sbc	r29, r1
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	6c 01       	movw	r12, r24
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	7c 01       	movw	r14, r24
     27c:	00 e0       	ldi	r16, 0x00	; 0
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <_Z10uart0_getsPc+0x32>
     282:	89 01       	movw	r16, r18
     284:	0e 94 10 09 	call	0x1220	; 0x1220 <_Z15uart0_availablev>
     288:	89 2b       	or	r24, r25
     28a:	e1 f3       	breq	.-8      	; 0x284 <_Z10uart0_getsPc+0x32>
     28c:	0e 94 ab 08 	call	0x1156	; 0x1156 <_Z10uart0_getcv>
     290:	f7 01       	movw	r30, r14
     292:	81 93       	st	Z+, r24
     294:	7f 01       	movw	r14, r30
     296:	98 01       	movw	r18, r16
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255
     29c:	80 32       	cpi	r24, 0x20	; 32
     29e:	89 f7       	brne	.-30     	; 0x282 <_Z10uart0_getsPc+0x30>
     2a0:	e1 e0       	ldi	r30, 0x01	; 1
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e0 0f       	add	r30, r16
     2aa:	f1 1f       	adc	r31, r17
     2ac:	10 82       	st	Z, r1
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	c6 01       	movw	r24, r12
     2b6:	0e 94 45 09 	call	0x128a	; 0x128a <strcpy>
     2ba:	cc 59       	subi	r28, 0x9C	; 156
     2bc:	df 4f       	sbci	r29, 0xFF	; 255
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	ef 90       	pop	r14
     2d4:	df 90       	pop	r13
     2d6:	cf 90       	pop	r12
     2d8:	08 95       	ret

000002da <_Z12uart0_getintv>:
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	00 d0       	rcall	.+0      	; 0x2e4 <_Z12uart0_getintv+0xa>
     2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_Z12uart0_getintv+0xc>
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	8e 01       	movw	r16, r28
     2ee:	0f 5f       	subi	r16, 0xFF	; 255
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	c8 01       	movw	r24, r16
     2f4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
     2f8:	d8 01       	movw	r26, r16
     2fa:	0d 90       	ld	r0, X+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <_Z12uart0_getintv+0x20>
     300:	f8 01       	movw	r30, r16
     302:	ad 01       	movw	r20, r26
     304:	41 50       	subi	r20, 0x01	; 1
     306:	51 09       	sbc	r21, r1
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	11 c0       	rjmp	.+34     	; 0x330 <_Z12uart0_getintv+0x56>
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	21 91       	ld	r18, Z+
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	20 53       	subi	r18, 0x30	; 48
     32a:	31 09       	sbc	r19, r1
     32c:	82 0f       	add	r24, r18
     32e:	93 1f       	adc	r25, r19
     330:	e4 17       	cp	r30, r20
     332:	f5 07       	cpc	r31, r21
     334:	61 f7       	brne	.-40     	; 0x30e <_Z12uart0_getintv+0x34>
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <_Z12wait_messagev>:

    void wait_message()
    {
        lcd_clear();
     34a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
        lcd_puts("Please wait");
     34e:	8e e6       	ldi	r24, 0x6E	; 110
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     356:	08 95       	ret

00000358 <_Z5inputv>:
		return ans;
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
     358:	80 b3       	in	r24, 0x10	; 16
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
       if (digitalRead(s_zero))
     35a:	28 2f       	mov	r18, r24
     35c:	21 70       	andi	r18, 0x01	; 1
     35e:	30 e0       	ldi	r19, 0x00	; 0
        lcd_clear();
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
     360:	c9 01       	movw	r24, r18
       if (digitalRead(s_zero))
         a+=1;
       if (digitalRead(s_one))
     362:	81 99       	sbic	0x10, 1	; 16
         a+=10;
     364:	0a 96       	adiw	r24, 0x0a	; 10
       if (digitalRead(s_two))
     366:	82 9b       	sbis	0x10, 2	; 16
     368:	02 c0       	rjmp	.+4      	; 0x36e <_Z5inputv+0x16>
         a+=100;
     36a:	8c 59       	subi	r24, 0x9C	; 156
     36c:	9f 4f       	sbci	r25, 0xFF	; 255
       return(a);
   }
     36e:	08 95       	ret

00000370 <_Z15main_menu_printi>:

   void main_menu_print(int first_visit)
   {
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	ec 01       	movw	r28, r24
     lcd_clear();
     376:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     37a:	62 e0       	ldi	r22, 0x02	; 2
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

   void main_menu_print(int first_visit)
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     382:	8f eb       	ldi	r24, 0xBF	; 191
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");
     392:	8a e7       	ldi	r24, 0x7A	; 122
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");
     3a2:	8c e7       	ldi	r24, 0x7C	; 124
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3aa:	62 e0       	ldi	r22, 0x02	; 2
     3ac:	82 e0       	ldi	r24, 0x02	; 2
     3ae:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");

      lcd_setCursor(2, 0);
      if (first_visit==1)
     3b2:	21 97       	sbiw	r28, 0x01	; 1
     3b4:	29 f4       	brne	.+10     	; 0x3c0 <_Z15main_menu_printi+0x50>
      lcd_puts("Change Food");
     3b6:	8a e8       	ldi	r24, 0x8A	; 138
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <_Z15main_menu_printi+0x58>
      else
      lcd_puts("Select Food");
     3c0:	86 e9       	ldi	r24, 0x96	; 150
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
   }
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <_Z17clear_second_linev>:
                lcd_num(food[selected_pk].num);

     }

     void clear_second_line()
     {
     3ce:	cf 93       	push	r28
     3d0:	c0 e0       	ldi	r28, 0x00	; 0
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	8c 2f       	mov	r24, r28
     3d6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
     3da:	8f eb       	ldi	r24, 0xBF	; 191
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3e2:	cf 5f       	subi	r28, 0xFF	; 255

     }

     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
     3e4:	c0 31       	cpi	r28, 0x10	; 16
     3e6:	a9 f7       	brne	.-22     	; 0x3d2 <_Z17clear_second_linev+0x4>
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
       }
     }
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <_Z17select_food_printi>:
      else
      lcd_puts("Select Food");
   }

   void select_food_print(int selected_pk)
     {
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	8c 01       	movw	r16, r24
               clear_second_line();
     3f6:	0e 94 e7 01 	call	0x3ce	; 0x3ce <_Z17clear_second_linev>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
               clear_second_line();

                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);
     402:	8c e1       	ldi	r24, 0x1C	; 28
     404:	80 9f       	mul	r24, r16
     406:	e0 01       	movw	r28, r0
     408:	81 9f       	mul	r24, r17
     40a:	d0 0d       	add	r29, r0
     40c:	11 24       	eor	r1, r1
     40e:	ce 01       	movw	r24, r28
     410:	80 5e       	subi	r24, 0xE0	; 224
     412:	9e 4f       	sbci	r25, 0xFE	; 254
     414:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	88 e0       	ldi	r24, 0x08	; 8
     41c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);
     420:	c2 5e       	subi	r28, 0xE2	; 226
     422:	de 4f       	sbci	r29, 0xFE	; 254
     424:	8e 89       	ldd	r24, Y+22	; 0x16
     426:	9f 89       	ldd	r25, Y+23	; 0x17
     428:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	8e e0       	ldi	r24, 0x0E	; 14
     430:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);

                 lcd_setCursor(14,1);
                lcd_num(food[selected_pk].num);
     434:	88 8d       	ldd	r24, Y+24	; 0x18
     436:	99 8d       	ldd	r25, Y+25	; 0x19
     438:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

     }
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	08 95       	ret

00000446 <_Z13cannot_cancelv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     446:	2f ef       	ldi	r18, 0xFF	; 255
     448:	35 ea       	ldi	r19, 0xA5	; 165
     44a:	4e e0       	ldi	r20, 0x0E	; 14
     44c:	21 50       	subi	r18, 0x01	; 1
     44e:	30 40       	sbci	r19, 0x00	; 0
     450:	40 40       	sbci	r20, 0x00	; 0
     452:	e1 f7       	brne	.-8      	; 0x44c <_Z13cannot_cancelv+0x6>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_Z13cannot_cancelv+0x10>
     456:	00 00       	nop
     }

     void cannot_cancel()
     {
		  _delay_ms(DELAY_TIME_STRAIGHT_START);
          lcd_clear();
     458:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
         lcd_puts(" Cannot Cancel ");
     45c:	82 ea       	ldi	r24, 0xA2	; 162
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	86 e0       	ldi	r24, 0x06	; 6
     468:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
		  _delay_ms(DELAY_TIME_STRAIGHT_START);
          lcd_clear();
         lcd_puts(" Cannot Cancel ");
         lcd_setCursor(6,1);
         lcd_puts(">Ok");
     46c:	82 eb       	ldi	r24, 0xB2	; 178
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
         while(1)
           {
             int in=input();
     474:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			 if (in !=0)
     478:	00 97       	sbiw	r24, 0x00	; 0
     47a:	e1 f3       	breq	.-8      	; 0x474 <_Z13cannot_cancelv+0x2e>
     47c:	2f ef       	ldi	r18, 0xFF	; 255
     47e:	36 e7       	ldi	r19, 0x76	; 118
     480:	41 e0       	ldi	r20, 0x01	; 1
     482:	21 50       	subi	r18, 0x01	; 1
     484:	30 40       	sbci	r19, 0x00	; 0
     486:	40 40       	sbci	r20, 0x00	; 0
     488:	e1 f7       	brne	.-8      	; 0x482 <_Z13cannot_cancelv+0x3c>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <_Z13cannot_cancelv+0x46>
     48c:	00 00       	nop
			 {
				 _delay_ms(DELAY_BOUNCE);
             if (in == ok)
     48e:	20 91 62 00 	lds	r18, 0x0062
     492:	30 91 63 00 	lds	r19, 0x0063
     496:	82 17       	cp	r24, r18
     498:	93 07       	cpc	r25, r19
     49a:	51 f0       	breq	.+20     	; 0x4b0 <_Z13cannot_cancelv+0x6a>
     49c:	8f ef       	ldi	r24, 0xFF	; 255
     49e:	95 ea       	ldi	r25, 0xA5	; 165
     4a0:	2e e0       	ldi	r18, 0x0E	; 14
     4a2:	81 50       	subi	r24, 0x01	; 1
     4a4:	90 40       	sbci	r25, 0x00	; 0
     4a6:	20 40       	sbci	r18, 0x00	; 0
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <_Z13cannot_cancelv+0x5c>
     4aa:	00 c0       	rjmp	.+0      	; 0x4ac <_Z13cannot_cancelv+0x66>
     4ac:	00 00       	nop
     4ae:	e2 cf       	rjmp	.-60     	; 0x474 <_Z13cannot_cancelv+0x2e>
     4b0:	08 95       	ret

000004b2 <_Z16display_message1PKc>:
		 }
     }

     //confirmation messages
     int display_message1(char const *s)
       {
     4b2:	ef 92       	push	r14
     4b4:	ff 92       	push	r15
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	ec 01       	movw	r28, r24
           lcd_clear();
     4c0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
           lcd_puts(s);
     4c4:	ce 01       	movw	r24, r28
     4c6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4ca:	61 e0       	ldi	r22, 0x01	; 1
     4cc:	82 e0       	ldi	r24, 0x02	; 2
     4ce:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     int display_message1(char const *s)
       {
           lcd_clear();
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");
     4d2:	86 eb       	ldi	r24, 0xB6	; 182
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4da:	61 e0       	ldi	r22, 0x01	; 1
     4dc:	8c e0       	ldi	r24, 0x0C	; 12
     4de:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");

           lcd_setCursor(12,1);
           lcd_puts("No");
     4e2:	8b eb       	ldi	r24, 0xBB	; 187
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     4ea:	2f ef       	ldi	r18, 0xFF	; 255
     4ec:	85 ea       	ldi	r24, 0xA5	; 165
     4ee:	9e e0       	ldi	r25, 0x0E	; 14
     4f0:	21 50       	subi	r18, 0x01	; 1
     4f2:	80 40       	sbci	r24, 0x00	; 0
     4f4:	90 40       	sbci	r25, 0x00	; 0
     4f6:	e1 f7       	brne	.-8      	; 0x4f0 <_Z16display_message1PKc+0x3e>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <_Z16display_message1PKc+0x48>
     4fa:	00 00       	nop
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
     4fc:	c1 e0       	ldi	r28, 0x01	; 1
     4fe:	d0 e0       	ldi	r29, 0x00	; 0
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
                         state=1;
     500:	01 e0       	ldi	r16, 0x01	; 1
     502:	10 e0       	ldi	r17, 0x00	; 0
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
                         state=0;
     504:	e1 2c       	mov	r14, r1
     506:	f1 2c       	mov	r15, r1
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
           while(1)
              {
                    int in=input();
     508:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                  //  lcd_puts (in);
				  if (in !=0)
     50c:	89 2b       	or	r24, r25
     50e:	e1 f3       	breq	.-8      	; 0x508 <_Z16display_message1PKc+0x56>
     510:	2f ef       	ldi	r18, 0xFF	; 255
     512:	86 e7       	ldi	r24, 0x76	; 118
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	21 50       	subi	r18, 0x01	; 1
     518:	80 40       	sbci	r24, 0x00	; 0
     51a:	90 40       	sbci	r25, 0x00	; 0
     51c:	e1 f7       	brne	.-8      	; 0x516 <_Z16display_message1PKc+0x64>
     51e:	00 c0       	rjmp	.+0      	; 0x520 <_Z16display_message1PKc+0x6e>
     520:	00 00       	nop
				  {
					  _delay_ms(DELAY_BOUNCE);
					  in =input();
     522:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                   if (state==1&& (in==left ||in==right))
     526:	c1 30       	cpi	r28, 0x01	; 1
     528:	d1 05       	cpc	r29, r1
     52a:	09 f5       	brne	.+66     	; 0x56e <_Z16display_message1PKc+0xbc>
     52c:	20 91 66 00 	lds	r18, 0x0066
     530:	30 91 67 00 	lds	r19, 0x0067
     534:	82 17       	cp	r24, r18
     536:	93 07       	cpc	r25, r19
     538:	39 f0       	breq	.+14     	; 0x548 <_Z16display_message1PKc+0x96>
     53a:	20 91 68 00 	lds	r18, 0x0068
     53e:	30 91 69 00 	lds	r19, 0x0069
     542:	82 17       	cp	r24, r18
     544:	93 07       	cpc	r25, r19
     546:	b1 f5       	brne	.+108    	; 0x5b4 <_Z16display_message1PKc+0x102>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	82 e0       	ldi	r24, 0x02	; 2
     54c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
					  _delay_ms(DELAY_BOUNCE);
					  in =input();
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
     550:	8f eb       	ldi	r24, 0xBF	; 191
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     558:	61 e0       	ldi	r22, 0x01	; 1
     55a:	8b e0       	ldi	r24, 0x0B	; 11
     55c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
     560:	8a e7       	ldi	r24, 0x7A	; 122
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=0;
     568:	ce 2d       	mov	r28, r14
     56a:	df 2d       	mov	r29, r15
     56c:	2a c0       	rjmp	.+84     	; 0x5c2 <_Z16display_message1PKc+0x110>
                      }
                   else if (state==0 && (in==left ||in==right))
     56e:	20 97       	sbiw	r28, 0x00	; 0
     570:	09 f5       	brne	.+66     	; 0x5b4 <_Z16display_message1PKc+0x102>
     572:	20 91 66 00 	lds	r18, 0x0066
     576:	30 91 67 00 	lds	r19, 0x0067
     57a:	82 17       	cp	r24, r18
     57c:	93 07       	cpc	r25, r19
     57e:	39 f0       	breq	.+14     	; 0x58e <_Z16display_message1PKc+0xdc>
     580:	20 91 68 00 	lds	r18, 0x0068
     584:	30 91 69 00 	lds	r19, 0x0069
     588:	82 17       	cp	r24, r18
     58a:	93 07       	cpc	r25, r19
     58c:	99 f4       	brne	.+38     	; 0x5b4 <_Z16display_message1PKc+0x102>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	8b e0       	ldi	r24, 0x0B	; 11
     592:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                         state=0;
                      }
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
     596:	8f eb       	ldi	r24, 0xBF	; 191
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
     5a6:	8a e7       	ldi	r24, 0x7A	; 122
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=1;
     5ae:	c0 2f       	mov	r28, r16
     5b0:	d1 2f       	mov	r29, r17
     5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <_Z16display_message1PKc+0x110>
                      }
                  else if (in==ok)
     5b4:	20 91 62 00 	lds	r18, 0x0062
     5b8:	30 91 63 00 	lds	r19, 0x0063
     5bc:	82 17       	cp	r24, r18
     5be:	93 07       	cpc	r25, r19
     5c0:	51 f0       	breq	.+20     	; 0x5d6 <_Z16display_message1PKc+0x124>
     5c2:	8f ef       	ldi	r24, 0xFF	; 255
     5c4:	95 ea       	ldi	r25, 0xA5	; 165
     5c6:	2e e0       	ldi	r18, 0x0E	; 14
     5c8:	81 50       	subi	r24, 0x01	; 1
     5ca:	90 40       	sbci	r25, 0x00	; 0
     5cc:	20 40       	sbci	r18, 0x00	; 0
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <_Z16display_message1PKc+0x116>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <_Z16display_message1PKc+0x120>
     5d2:	00 00       	nop
     5d4:	99 cf       	rjmp	.-206    	; 0x508 <_Z16display_message1PKc+0x56>

                   _delay_ms(DELAY_TIME_LOOP);
				  }
               }
				
       }
     5d6:	ce 01       	movw	r24, r28
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	08 95       	ret

000005e6 <_Z8get_infov>:




void get_info()
{
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
	//_delay_ms(DELAY_FLUSH);
   char a ;
   char c[30];
	int i;
	while(uart0_available()) a=uart0_getc();
     5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <_Z8get_infov+0xe>
     5f0:	0e 94 ab 08 	call	0x1156	; 0x1156 <_Z10uart0_getcv>
     5f4:	0e 94 10 09 	call	0x1220	; 0x1220 <_Z15uart0_availablev>
     5f8:	89 2b       	or	r24, r25
     5fa:	d1 f7       	brne	.-12     	; 0x5f0 <_Z8get_infov+0xa>
	//uart0_flush();
  uart0_puts("[ ");
     5fc:	8e eb       	ldi	r24, 0xBE	; 190
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	0e 94 01 09 	call	0x1202	; 0x1202 <_Z10uart0_putsPKc>
  do 
  {
	  a=uart0_getc();
     604:	0e 94 ab 08 	call	0x1156	; 0x1156 <_Z10uart0_getcv>
   char c[30];
	int i;
	while(uart0_available()) a=uart0_getc();
	//uart0_flush();
  uart0_puts("[ ");
  do 
     608:	8d 33       	cpi	r24, 0x3D	; 61
     60a:	e1 f7       	brne	.-8      	; 0x604 <_Z8get_infov+0x1e>
  {
	  a=uart0_getc();
  }
  while (a!='=');
  num_of_food=uart0_getint();
     60c:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     610:	90 93 c3 02 	sts	0x02C3, r25
     614:	80 93 c2 02 	sts	0x02C2, r24
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     618:	18 16       	cp	r1, r24
     61a:	19 06       	cpc	r1, r25
     61c:	1c f5       	brge	.+70     	; 0x664 <_Z8get_infov+0x7e>
     61e:	c0 e2       	ldi	r28, 0x20	; 32
     620:	d1 e0       	ldi	r29, 0x01	; 1
     622:	00 e0       	ldi	r16, 0x00	; 0
     624:	10 e0       	ldi	r17, 0x00	; 0
{
    //  Serial.puts("Start");
      food[i].id=uart0_getint();
     626:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     62a:	fe 01       	movw	r30, r28
     62c:	32 97       	sbiw	r30, 0x02	; 2
     62e:	91 83       	std	Z+1, r25	; 0x01
     630:	80 83       	st	Z, r24
      uart0_gets(food[i].name);
     632:	ce 01       	movw	r24, r28
     634:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
      food[i].price=uart0_getint();
     638:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     63c:	9d 8b       	std	Y+21, r25	; 0x15
     63e:	8c 8b       	std	Y+20, r24	; 0x14
      food[i].num=uart0_getint();
     640:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     644:	9f 8b       	std	Y+23, r25	; 0x17
     646:	8e 8b       	std	Y+22, r24	; 0x16
      food[i].p=uart0_getint();
     648:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     64c:	99 8f       	std	Y+25, r25	; 0x19
     64e:	88 8f       	std	Y+24, r24	; 0x18
  while (a!='=');
  num_of_food=uart0_getint();
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     650:	0f 5f       	subi	r16, 0xFF	; 255
     652:	1f 4f       	sbci	r17, 0xFF	; 255
     654:	6c 96       	adiw	r28, 0x1c	; 28
     656:	80 91 c2 02 	lds	r24, 0x02C2
     65a:	90 91 c3 02 	lds	r25, 0x02C3
     65e:	08 17       	cp	r16, r24
     660:	19 07       	cpc	r17, r25
     662:	0c f3       	brlt	.-62     	; 0x626 <_Z8get_infov+0x40>
  }

  // Serial.putsln("Done");


}
     664:	df 91       	pop	r29
     666:	cf 91       	pop	r28
     668:	1f 91       	pop	r17
     66a:	0f 91       	pop	r16
     66c:	08 95       	ret

0000066e <_Z9send_infov>:

      void send_info()
        {
     66e:	0f 93       	push	r16
     670:	1f 93       	push	r17
     672:	cf 93       	push	r28
     674:	df 93       	push	r29
          for (int i=0;i<num_of_food;i++)
     676:	80 91 c2 02 	lds	r24, 0x02C2
     67a:	90 91 c3 02 	lds	r25, 0x02C3
     67e:	18 16       	cp	r1, r24
     680:	19 06       	cpc	r1, r25
     682:	04 f5       	brge	.+64     	; 0x6c4 <_Z9send_infov+0x56>
     684:	ce e1       	ldi	r28, 0x1E	; 30
     686:	d1 e0       	ldi	r29, 0x01	; 1
     688:	00 e0       	ldi	r16, 0x00	; 0
     68a:	10 e0       	ldi	r17, 0x00	; 0
              {
                uart0_puts("] ");
     68c:	81 ec       	ldi	r24, 0xC1	; 193
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	0e 94 01 09 	call	0x1202	; 0x1202 <_Z10uart0_putsPKc>
				uart0_putint(food[i].id);
     694:	88 81       	ld	r24, Y
     696:	99 81       	ldd	r25, Y+1	; 0x01
     698:	0e 94 d7 08 	call	0x11ae	; 0x11ae <_Z12uart0_putinti>
                uart0_putc(' ');
     69c:	80 e2       	ldi	r24, 0x20	; 32
     69e:	0e 94 c6 08 	call	0x118c	; 0x118c <_Z10uart0_putch>
                uart0_putint(food[i].num);
     6a2:	88 8d       	ldd	r24, Y+24	; 0x18
     6a4:	99 8d       	ldd	r25, Y+25	; 0x19
     6a6:	0e 94 d7 08 	call	0x11ae	; 0x11ae <_Z12uart0_putinti>
                uart0_putc(' ');
     6aa:	80 e2       	ldi	r24, 0x20	; 32
     6ac:	0e 94 c6 08 	call	0x118c	; 0x118c <_Z10uart0_putch>

}

      void send_info()
        {
          for (int i=0;i<num_of_food;i++)
     6b0:	0f 5f       	subi	r16, 0xFF	; 255
     6b2:	1f 4f       	sbci	r17, 0xFF	; 255
     6b4:	6c 96       	adiw	r28, 0x1c	; 28
     6b6:	80 91 c2 02 	lds	r24, 0x02C2
     6ba:	90 91 c3 02 	lds	r25, 0x02C3
     6be:	08 17       	cp	r16, r24
     6c0:	19 07       	cpc	r17, r25
     6c2:	24 f3       	brlt	.-56     	; 0x68c <_Z9send_infov+0x1e>
                uart0_putc(' ');
              }



        }
     6c4:	df 91       	pop	r29
     6c6:	cf 91       	pop	r28
     6c8:	1f 91       	pop	r17
     6ca:	0f 91       	pop	r16
     6cc:	08 95       	ret

000006ce <_Z11select_foodv>:
//
			//}
		//}
			//}
		//
		lcd_puts("hello");
     6ce:	1f 93       	push	r17
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     6d8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <_Z8get_infov>
     6dc:	2f ef       	ldi	r18, 0xFF	; 255
     6de:	85 ea       	ldi	r24, 0xA5	; 165
     6e0:	9e e0       	ldi	r25, 0x0E	; 14
     6e2:	21 50       	subi	r18, 0x01	; 1
     6e4:	80 40       	sbci	r24, 0x00	; 0
     6e6:	90 40       	sbci	r25, 0x00	; 0
     6e8:	e1 f7       	brne	.-8      	; 0x6e2 <_Z11select_foodv+0x14>
     6ea:	00 c0       	rjmp	.+0      	; 0x6ec <_Z11select_foodv+0x1e>
     6ec:	00 00       	nop
     6ee:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     6f2:	85 e8       	ldi	r24, 0x85	; 133
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	88 e0       	ldi	r24, 0x08	; 8
     700:	90 e0       	ldi	r25, 0x00	; 0
     702:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     706:	8e ec       	ldi	r24, 0xCE	; 206
     708:	90 e0       	ldi	r25, 0x00	; 0
     70a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     70e:	60 e0       	ldi	r22, 0x00	; 0
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	8e e0       	ldi	r24, 0x0E	; 14
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     71a:	8b eb       	ldi	r24, 0xBB	; 187
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     722:	61 e0       	ldi	r22, 0x01	; 1
     724:	70 e0       	ldi	r23, 0x00	; 0
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     72e:	80 e2       	ldi	r24, 0x20	; 32
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     736:	61 e0       	ldi	r22, 0x01	; 1
     738:	70 e0       	ldi	r23, 0x00	; 0
     73a:	88 e0       	ldi	r24, 0x08	; 8
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     742:	ce e1       	ldi	r28, 0x1E	; 30
     744:	d1 e0       	ldi	r29, 0x01	; 1
     746:	8e 89       	ldd	r24, Y+22	; 0x16
     748:	9f 89       	ldd	r25, Y+23	; 0x17
     74a:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     74e:	61 e0       	ldi	r22, 0x01	; 1
     750:	70 e0       	ldi	r23, 0x00	; 0
     752:	8e e0       	ldi	r24, 0x0E	; 14
     754:	90 e0       	ldi	r25, 0x00	; 0
     756:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     75a:	88 8d       	ldd	r24, Y+24	; 0x18
     75c:	99 8d       	ldd	r25, Y+25	; 0x19
     75e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     762:	c0 e0       	ldi	r28, 0x00	; 0
     764:	d0 e0       	ldi	r29, 0x00	; 0
     766:	1c e1       	ldi	r17, 0x1C	; 28
     768:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     76c:	89 2b       	or	r24, r25
     76e:	e1 f3       	breq	.-8      	; 0x768 <_Z11select_foodv+0x9a>
     770:	2f ef       	ldi	r18, 0xFF	; 255
     772:	86 e7       	ldi	r24, 0x76	; 118
     774:	91 e0       	ldi	r25, 0x01	; 1
     776:	21 50       	subi	r18, 0x01	; 1
     778:	80 40       	sbci	r24, 0x00	; 0
     77a:	90 40       	sbci	r25, 0x00	; 0
     77c:	e1 f7       	brne	.-8      	; 0x776 <_Z11select_foodv+0xa8>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <_Z11select_foodv+0xb2>
     780:	00 00       	nop
     782:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     786:	20 91 6c 00 	lds	r18, 0x006C
     78a:	30 91 6d 00 	lds	r19, 0x006D
     78e:	82 17       	cp	r24, r18
     790:	93 07       	cpc	r25, r19
     792:	69 f4       	brne	.+26     	; 0x7ae <_Z11select_foodv+0xe0>
     794:	20 97       	sbiw	r28, 0x00	; 0
     796:	31 f4       	brne	.+12     	; 0x7a4 <_Z11select_foodv+0xd6>
     798:	c0 91 c2 02 	lds	r28, 0x02C2
     79c:	d0 91 c3 02 	lds	r29, 0x02C3
     7a0:	21 97       	sbiw	r28, 0x01	; 1
     7a2:	01 c0       	rjmp	.+2      	; 0x7a6 <_Z11select_foodv+0xd8>
     7a4:	21 97       	sbiw	r28, 0x01	; 1
     7a6:	ce 01       	movw	r24, r28
     7a8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     7ac:	dd c0       	rjmp	.+442    	; 0x968 <__stack+0x109>
     7ae:	20 91 6a 00 	lds	r18, 0x006A
     7b2:	30 91 6b 00 	lds	r19, 0x006B
     7b6:	82 17       	cp	r24, r18
     7b8:	93 07       	cpc	r25, r19
     7ba:	81 f4       	brne	.+32     	; 0x7dc <_Z11select_foodv+0x10e>
     7bc:	80 91 c2 02 	lds	r24, 0x02C2
     7c0:	90 91 c3 02 	lds	r25, 0x02C3
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	8c 17       	cp	r24, r28
     7c8:	9d 07       	cpc	r25, r29
     7ca:	11 f0       	breq	.+4      	; 0x7d0 <_Z11select_foodv+0x102>
     7cc:	21 96       	adiw	r28, 0x01	; 1
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <_Z11select_foodv+0x106>
     7d0:	c0 e0       	ldi	r28, 0x00	; 0
     7d2:	d0 e0       	ldi	r29, 0x00	; 0
     7d4:	ce 01       	movw	r24, r28
     7d6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     7da:	c6 c0       	rjmp	.+396    	; 0x968 <__stack+0x109>
     7dc:	20 91 66 00 	lds	r18, 0x0066
     7e0:	30 91 67 00 	lds	r19, 0x0067
     7e4:	82 17       	cp	r24, r18
     7e6:	93 07       	cpc	r25, r19
     7e8:	d1 f4       	brne	.+52     	; 0x81e <_Z11select_foodv+0x150>
     7ea:	1c 9f       	mul	r17, r28
     7ec:	f0 01       	movw	r30, r0
     7ee:	1d 9f       	mul	r17, r29
     7f0:	f0 0d       	add	r31, r0
     7f2:	11 24       	eor	r1, r1
     7f4:	e2 5e       	subi	r30, 0xE2	; 226
     7f6:	fe 4f       	sbci	r31, 0xFE	; 254
     7f8:	80 8d       	ldd	r24, Z+24	; 0x18
     7fa:	91 8d       	ldd	r25, Z+25	; 0x19
     7fc:	00 97       	sbiw	r24, 0x00	; 0
     7fe:	09 f4       	brne	.+2      	; 0x802 <_Z11select_foodv+0x134>
     800:	b3 c0       	rjmp	.+358    	; 0x968 <__stack+0x109>
     802:	1c 9f       	mul	r17, r28
     804:	f0 01       	movw	r30, r0
     806:	1d 9f       	mul	r17, r29
     808:	f0 0d       	add	r31, r0
     80a:	11 24       	eor	r1, r1
     80c:	e2 5e       	subi	r30, 0xE2	; 226
     80e:	fe 4f       	sbci	r31, 0xFE	; 254
     810:	01 97       	sbiw	r24, 0x01	; 1
     812:	91 8f       	std	Z+25, r25	; 0x19
     814:	80 8f       	std	Z+24, r24	; 0x18
     816:	ce 01       	movw	r24, r28
     818:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     81c:	a5 c0       	rjmp	.+330    	; 0x968 <__stack+0x109>
     81e:	20 91 68 00 	lds	r18, 0x0068
     822:	30 91 69 00 	lds	r19, 0x0069
     826:	82 17       	cp	r24, r18
     828:	93 07       	cpc	r25, r19
     82a:	81 f4       	brne	.+32     	; 0x84c <_Z11select_foodv+0x17e>
     82c:	1c 9f       	mul	r17, r28
     82e:	f0 01       	movw	r30, r0
     830:	1d 9f       	mul	r17, r29
     832:	f0 0d       	add	r31, r0
     834:	11 24       	eor	r1, r1
     836:	e2 5e       	subi	r30, 0xE2	; 226
     838:	fe 4f       	sbci	r31, 0xFE	; 254
     83a:	80 8d       	ldd	r24, Z+24	; 0x18
     83c:	91 8d       	ldd	r25, Z+25	; 0x19
     83e:	01 96       	adiw	r24, 0x01	; 1
     840:	91 8f       	std	Z+25, r25	; 0x19
     842:	80 8f       	std	Z+24, r24	; 0x18
     844:	ce 01       	movw	r24, r28
     846:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     84a:	8e c0       	rjmp	.+284    	; 0x968 <__stack+0x109>
     84c:	20 91 64 00 	lds	r18, 0x0064
     850:	30 91 65 00 	lds	r19, 0x0065
     854:	82 17       	cp	r24, r18
     856:	93 07       	cpc	r25, r19
     858:	69 f5       	brne	.+90     	; 0x8b4 <__stack+0x55>
     85a:	84 ed       	ldi	r24, 0xD4	; 212
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     862:	89 2b       	or	r24, r25
     864:	49 f0       	breq	.+18     	; 0x878 <__stack+0x19>
     866:	1c 9f       	mul	r17, r28
     868:	f0 01       	movw	r30, r0
     86a:	1d 9f       	mul	r17, r29
     86c:	f0 0d       	add	r31, r0
     86e:	11 24       	eor	r1, r1
     870:	e2 5e       	subi	r30, 0xE2	; 226
     872:	fe 4f       	sbci	r31, 0xFE	; 254
     874:	11 8e       	std	Z+25, r1	; 0x19
     876:	10 8e       	std	Z+24, r1	; 0x18
     878:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     87c:	85 e8       	ldi	r24, 0x85	; 133
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	88 e0       	ldi	r24, 0x08	; 8
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     890:	8e ec       	ldi	r24, 0xCE	; 206
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	70 e0       	ldi	r23, 0x00	; 0
     89c:	8e e0       	ldi	r24, 0x0E	; 14
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8a4:	8b eb       	ldi	r24, 0xBB	; 187
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8ac:	ce 01       	movw	r24, r28
     8ae:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     8b2:	5a c0       	rjmp	.+180    	; 0x968 <__stack+0x109>
     8b4:	20 91 62 00 	lds	r18, 0x0062
     8b8:	30 91 63 00 	lds	r19, 0x0063
     8bc:	82 17       	cp	r24, r18
     8be:	93 07       	cpc	r25, r19
     8c0:	49 f5       	brne	.+82     	; 0x914 <__stack+0xb5>
     8c2:	85 ee       	ldi	r24, 0xE5	; 229
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     8ca:	89 2b       	or	r24, r25
     8cc:	29 f0       	breq	.+10     	; 0x8d8 <__stack+0x79>
     8ce:	0e 94 37 03 	call	0x66e	; 0x66e <_Z9send_infov>
     8d2:	81 e0       	ldi	r24, 0x01	; 1
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	54 c0       	rjmp	.+168    	; 0x980 <__stack+0x121>
     8d8:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     8dc:	85 e8       	ldi	r24, 0x85	; 133
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	88 e0       	ldi	r24, 0x08	; 8
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     8f0:	8e ec       	ldi	r24, 0xCE	; 206
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	8e e0       	ldi	r24, 0x0E	; 14
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     904:	8b eb       	ldi	r24, 0xBB	; 187
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     90c:	ce 01       	movw	r24, r28
     90e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     912:	2a c0       	rjmp	.+84     	; 0x968 <__stack+0x109>
     914:	20 91 60 00 	lds	r18, 0x0060
     918:	30 91 61 00 	lds	r19, 0x0061
     91c:	82 17       	cp	r24, r18
     91e:	93 07       	cpc	r25, r19
     920:	19 f5       	brne	.+70     	; 0x968 <__stack+0x109>
     922:	86 ef       	ldi	r24, 0xF6	; 246
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     92a:	89 2b       	or	r24, r25
     92c:	39 f5       	brne	.+78     	; 0x97c <__stack+0x11d>
     92e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     932:	85 e8       	ldi	r24, 0x85	; 133
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     93a:	60 e0       	ldi	r22, 0x00	; 0
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	88 e0       	ldi	r24, 0x08	; 8
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     946:	8e ec       	ldi	r24, 0xCE	; 206
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     94e:	60 e0       	ldi	r22, 0x00	; 0
     950:	70 e0       	ldi	r23, 0x00	; 0
     952:	8e e0       	ldi	r24, 0x0E	; 14
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     95a:	8b eb       	ldi	r24, 0xBB	; 187
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     962:	ce 01       	movw	r24, r28
     964:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     968:	2f ef       	ldi	r18, 0xFF	; 255
     96a:	85 ea       	ldi	r24, 0xA5	; 165
     96c:	9e e0       	ldi	r25, 0x0E	; 14
     96e:	21 50       	subi	r18, 0x01	; 1
     970:	80 40       	sbci	r24, 0x00	; 0
     972:	90 40       	sbci	r25, 0x00	; 0
     974:	e1 f7       	brne	.-8      	; 0x96e <__stack+0x10f>
     976:	00 c0       	rjmp	.+0      	; 0x978 <__stack+0x119>
     978:	00 00       	nop
     97a:	f6 ce       	rjmp	.-532    	; 0x768 <_Z11select_foodv+0x9a>
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	df 91       	pop	r29
     982:	cf 91       	pop	r28
     984:	1f 91       	pop	r17
     986:	08 95       	ret

00000988 <_Z13selected_foodv>:
     988:	cf 92       	push	r12
     98a:	df 92       	push	r13
     98c:	ef 92       	push	r14
     98e:	ff 92       	push	r15
     990:	0f 93       	push	r16
     992:	1f 93       	push	r17
     994:	cf 93       	push	r28
     996:	df 93       	push	r29
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
     99c:	c8 5c       	subi	r28, 0xC8	; 200
     99e:	d1 09       	sbc	r29, r1
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	f8 94       	cli
     9a4:	de bf       	out	0x3e, r29	; 62
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	cd bf       	out	0x3d, r28	; 61
     9aa:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     9ae:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <_Z8get_infov>
     9b2:	2f ef       	ldi	r18, 0xFF	; 255
     9b4:	35 ea       	ldi	r19, 0xA5	; 165
     9b6:	8e e0       	ldi	r24, 0x0E	; 14
     9b8:	21 50       	subi	r18, 0x01	; 1
     9ba:	30 40       	sbci	r19, 0x00	; 0
     9bc:	80 40       	sbci	r24, 0x00	; 0
     9be:	e1 f7       	brne	.-8      	; 0x9b8 <_Z13selected_foodv+0x30>
     9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <_Z13selected_foodv+0x3a>
     9c2:	00 00       	nop
     9c4:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     9c8:	40 91 c2 02 	lds	r20, 0x02C2
     9cc:	50 91 c3 02 	lds	r21, 0x02C3
     9d0:	14 16       	cp	r1, r20
     9d2:	15 06       	cpc	r1, r21
     9d4:	04 f5       	brge	.+64     	; 0xa16 <_Z13selected_foodv+0x8e>
     9d6:	e6 e3       	ldi	r30, 0x36	; 54
     9d8:	f1 e0       	ldi	r31, 0x01	; 1
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	00 e0       	ldi	r16, 0x00	; 0
     9e0:	10 e0       	ldi	r17, 0x00	; 0
     9e2:	20 81       	ld	r18, Z
     9e4:	31 81       	ldd	r19, Z+1	; 0x01
     9e6:	12 16       	cp	r1, r18
     9e8:	13 06       	cpc	r1, r19
     9ea:	6c f4       	brge	.+26     	; 0xa06 <_Z13selected_foodv+0x7e>
     9ec:	d8 01       	movw	r26, r16
     9ee:	aa 0f       	add	r26, r26
     9f0:	bb 1f       	adc	r27, r27
     9f2:	21 e0       	ldi	r18, 0x01	; 1
     9f4:	30 e0       	ldi	r19, 0x00	; 0
     9f6:	2c 0f       	add	r18, r28
     9f8:	3d 1f       	adc	r19, r29
     9fa:	a2 0f       	add	r26, r18
     9fc:	b3 1f       	adc	r27, r19
     9fe:	8d 93       	st	X+, r24
     a00:	9c 93       	st	X, r25
     a02:	0f 5f       	subi	r16, 0xFF	; 255
     a04:	1f 4f       	sbci	r17, 0xFF	; 255
     a06:	01 96       	adiw	r24, 0x01	; 1
     a08:	7c 96       	adiw	r30, 0x1c	; 28
     a0a:	84 17       	cp	r24, r20
     a0c:	95 07       	cpc	r25, r21
     a0e:	4c f3       	brlt	.-46     	; 0x9e2 <_Z13selected_foodv+0x5a>
     a10:	01 15       	cp	r16, r1
     a12:	11 05       	cpc	r17, r1
     a14:	79 f5       	brne	.+94     	; 0xa74 <_Z13selected_foodv+0xec>
     a16:	87 e0       	ldi	r24, 0x07	; 7
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a1e:	61 e0       	ldi	r22, 0x01	; 1
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	86 e0       	ldi	r24, 0x06	; 6
     a24:	90 e0       	ldi	r25, 0x00	; 0
     a26:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a2a:	82 eb       	ldi	r24, 0xB2	; 178
     a2c:	90 e0       	ldi	r25, 0x00	; 0
     a2e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a32:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     a36:	89 2b       	or	r24, r25
     a38:	e1 f3       	breq	.-8      	; 0xa32 <_Z13selected_foodv+0xaa>
     a3a:	3f ef       	ldi	r19, 0xFF	; 255
     a3c:	86 e7       	ldi	r24, 0x76	; 118
     a3e:	91 e0       	ldi	r25, 0x01	; 1
     a40:	31 50       	subi	r19, 0x01	; 1
     a42:	80 40       	sbci	r24, 0x00	; 0
     a44:	90 40       	sbci	r25, 0x00	; 0
     a46:	e1 f7       	brne	.-8      	; 0xa40 <_Z13selected_foodv+0xb8>
     a48:	00 c0       	rjmp	.+0      	; 0xa4a <_Z13selected_foodv+0xc2>
     a4a:	00 00       	nop
     a4c:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     a50:	20 91 62 00 	lds	r18, 0x0062
     a54:	30 91 63 00 	lds	r19, 0x0063
     a58:	82 17       	cp	r24, r18
     a5a:	93 07       	cpc	r25, r19
     a5c:	09 f4       	brne	.+2      	; 0xa60 <_Z13selected_foodv+0xd8>
     a5e:	ae c0       	rjmp	.+348    	; 0xbbc <_Z13selected_foodv+0x234>
     a60:	ef ef       	ldi	r30, 0xFF	; 255
     a62:	f5 ea       	ldi	r31, 0xA5	; 165
     a64:	2e e0       	ldi	r18, 0x0E	; 14
     a66:	e1 50       	subi	r30, 0x01	; 1
     a68:	f0 40       	sbci	r31, 0x00	; 0
     a6a:	20 40       	sbci	r18, 0x00	; 0
     a6c:	e1 f7       	brne	.-8      	; 0xa66 <_Z13selected_foodv+0xde>
     a6e:	00 c0       	rjmp	.+0      	; 0xa70 <_Z13selected_foodv+0xe8>
     a70:	00 00       	nop
     a72:	df cf       	rjmp	.-66     	; 0xa32 <_Z13selected_foodv+0xaa>
     a74:	85 e8       	ldi	r24, 0x85	; 133
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a7c:	60 e0       	ldi	r22, 0x00	; 0
     a7e:	70 e0       	ldi	r23, 0x00	; 0
     a80:	88 e0       	ldi	r24, 0x08	; 8
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a88:	8e ec       	ldi	r24, 0xCE	; 206
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	8e e0       	ldi	r24, 0x0E	; 14
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a9c:	8b eb       	ldi	r24, 0xBB	; 187
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     aa4:	61 e0       	ldi	r22, 0x01	; 1
     aa6:	70 e0       	ldi	r23, 0x00	; 0
     aa8:	80 e0       	ldi	r24, 0x00	; 0
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     ab0:	89 81       	ldd	r24, Y+1	; 0x01
     ab2:	9a 81       	ldd	r25, Y+2	; 0x02
     ab4:	2c e1       	ldi	r18, 0x1C	; 28
     ab6:	28 9f       	mul	r18, r24
     ab8:	70 01       	movw	r14, r0
     aba:	29 9f       	mul	r18, r25
     abc:	f0 0c       	add	r15, r0
     abe:	11 24       	eor	r1, r1
     ac0:	c7 01       	movw	r24, r14
     ac2:	80 5e       	subi	r24, 0xE0	; 224
     ac4:	9e 4f       	sbci	r25, 0xFE	; 254
     ac6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     aca:	61 e0       	ldi	r22, 0x01	; 1
     acc:	70 e0       	ldi	r23, 0x00	; 0
     ace:	88 e0       	ldi	r24, 0x08	; 8
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     ad6:	c7 01       	movw	r24, r14
     ad8:	82 5e       	subi	r24, 0xE2	; 226
     ada:	9e 4f       	sbci	r25, 0xFE	; 254
     adc:	7c 01       	movw	r14, r24
     ade:	fc 01       	movw	r30, r24
     ae0:	86 89       	ldd	r24, Z+22	; 0x16
     ae2:	97 89       	ldd	r25, Z+23	; 0x17
     ae4:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     ae8:	61 e0       	ldi	r22, 0x01	; 1
     aea:	70 e0       	ldi	r23, 0x00	; 0
     aec:	8e e0       	ldi	r24, 0x0E	; 14
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     af4:	f7 01       	movw	r30, r14
     af6:	80 8d       	ldd	r24, Z+24	; 0x18
     af8:	91 8d       	ldd	r25, Z+25	; 0x19
     afa:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     afe:	e1 2c       	mov	r14, r1
     b00:	f1 2c       	mov	r15, r1
     b02:	01 50       	subi	r16, 0x01	; 1
     b04:	11 09       	sbc	r17, r1
     b06:	c1 2c       	mov	r12, r1
     b08:	d1 2c       	mov	r13, r1
     b0a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     b0e:	89 2b       	or	r24, r25
     b10:	e1 f3       	breq	.-8      	; 0xb0a <_Z13selected_foodv+0x182>
     b12:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     b16:	20 91 6c 00 	lds	r18, 0x006C
     b1a:	30 91 6d 00 	lds	r19, 0x006D
     b1e:	82 17       	cp	r24, r18
     b20:	93 07       	cpc	r25, r19
     b22:	b1 f4       	brne	.+44     	; 0xb50 <_Z13selected_foodv+0x1c8>
     b24:	e1 14       	cp	r14, r1
     b26:	f1 04       	cpc	r15, r1
     b28:	11 f4       	brne	.+4      	; 0xb2e <_Z13selected_foodv+0x1a6>
     b2a:	78 01       	movw	r14, r16
     b2c:	03 c0       	rjmp	.+6      	; 0xb34 <_Z13selected_foodv+0x1ac>
     b2e:	f1 e0       	ldi	r31, 0x01	; 1
     b30:	ef 1a       	sub	r14, r31
     b32:	f1 08       	sbc	r15, r1
     b34:	f7 01       	movw	r30, r14
     b36:	ee 0f       	add	r30, r30
     b38:	ff 1f       	adc	r31, r31
     b3a:	21 e0       	ldi	r18, 0x01	; 1
     b3c:	30 e0       	ldi	r19, 0x00	; 0
     b3e:	2c 0f       	add	r18, r28
     b40:	3d 1f       	adc	r19, r29
     b42:	e2 0f       	add	r30, r18
     b44:	f3 1f       	adc	r31, r19
     b46:	80 81       	ld	r24, Z
     b48:	91 81       	ldd	r25, Z+1	; 0x01
     b4a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     b4e:	2c c0       	rjmp	.+88     	; 0xba8 <_Z13selected_foodv+0x220>
     b50:	20 91 6a 00 	lds	r18, 0x006A
     b54:	30 91 6b 00 	lds	r19, 0x006B
     b58:	82 17       	cp	r24, r18
     b5a:	93 07       	cpc	r25, r19
     b5c:	b9 f4       	brne	.+46     	; 0xb8c <_Z13selected_foodv+0x204>
     b5e:	e0 16       	cp	r14, r16
     b60:	f1 06       	cpc	r15, r17
     b62:	21 f0       	breq	.+8      	; 0xb6c <_Z13selected_foodv+0x1e4>
     b64:	3f ef       	ldi	r19, 0xFF	; 255
     b66:	e3 1a       	sub	r14, r19
     b68:	f3 0a       	sbc	r15, r19
     b6a:	02 c0       	rjmp	.+4      	; 0xb70 <_Z13selected_foodv+0x1e8>
     b6c:	ec 2c       	mov	r14, r12
     b6e:	fd 2c       	mov	r15, r13
     b70:	f7 01       	movw	r30, r14
     b72:	ee 0f       	add	r30, r30
     b74:	ff 1f       	adc	r31, r31
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	8c 0f       	add	r24, r28
     b7c:	9d 1f       	adc	r25, r29
     b7e:	e8 0f       	add	r30, r24
     b80:	f9 1f       	adc	r31, r25
     b82:	80 81       	ld	r24, Z
     b84:	91 81       	ldd	r25, Z+1	; 0x01
     b86:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     b8a:	0e c0       	rjmp	.+28     	; 0xba8 <_Z13selected_foodv+0x220>
     b8c:	20 91 62 00 	lds	r18, 0x0062
     b90:	30 91 63 00 	lds	r19, 0x0063
     b94:	82 17       	cp	r24, r18
     b96:	93 07       	cpc	r25, r19
     b98:	89 f0       	breq	.+34     	; 0xbbc <_Z13selected_foodv+0x234>
     b9a:	20 91 60 00 	lds	r18, 0x0060
     b9e:	30 91 61 00 	lds	r19, 0x0061
     ba2:	82 17       	cp	r24, r18
     ba4:	93 07       	cpc	r25, r19
     ba6:	51 f0       	breq	.+20     	; 0xbbc <_Z13selected_foodv+0x234>
     ba8:	9f ef       	ldi	r25, 0xFF	; 255
     baa:	e5 ea       	ldi	r30, 0xA5	; 165
     bac:	fe e0       	ldi	r31, 0x0E	; 14
     bae:	91 50       	subi	r25, 0x01	; 1
     bb0:	e0 40       	sbci	r30, 0x00	; 0
     bb2:	f0 40       	sbci	r31, 0x00	; 0
     bb4:	e1 f7       	brne	.-8      	; 0xbae <_Z13selected_foodv+0x226>
     bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <_Z13selected_foodv+0x230>
     bb8:	00 00       	nop
     bba:	a7 cf       	rjmp	.-178    	; 0xb0a <_Z13selected_foodv+0x182>
     bbc:	c8 53       	subi	r28, 0x38	; 56
     bbe:	df 4f       	sbci	r29, 0xFF	; 255
     bc0:	0f b6       	in	r0, 0x3f	; 63
     bc2:	f8 94       	cli
     bc4:	de bf       	out	0x3e, r29	; 62
     bc6:	0f be       	out	0x3f, r0	; 63
     bc8:	cd bf       	out	0x3d, r28	; 61
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	1f 91       	pop	r17
     bd0:	0f 91       	pop	r16
     bd2:	ff 90       	pop	r15
     bd4:	ef 90       	pop	r14
     bd6:	df 90       	pop	r13
     bd8:	cf 90       	pop	r12
     bda:	08 95       	ret

00000bdc <_Z11change_foodv>:




void change_food()
{
     bdc:	1f 93       	push	r17
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
	wait_message();
     be2:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
	get_info();
     be6:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <_Z8get_infov>
     bea:	2f ef       	ldi	r18, 0xFF	; 255
     bec:	85 ea       	ldi	r24, 0xA5	; 165
     bee:	9e e0       	ldi	r25, 0x0E	; 14
     bf0:	21 50       	subi	r18, 0x01	; 1
     bf2:	80 40       	sbci	r24, 0x00	; 0
     bf4:	90 40       	sbci	r25, 0x00	; 0
     bf6:	e1 f7       	brne	.-8      	; 0xbf0 <_Z11change_foodv+0x14>
     bf8:	00 c0       	rjmp	.+0      	; 0xbfa <_Z11change_foodv+0x1e>
     bfa:	00 00       	nop
	_delay_ms(DELAY_TIME_GET_INFO);
	lcd_clear();
     bfc:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_puts("Food");
     c00:	85 e8       	ldi	r24, 0x85	; 133
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,0);
     c08:	60 e0       	ldi	r22, 0x00	; 0
     c0a:	70 e0       	ldi	r23, 0x00	; 0
     c0c:	88 e0       	ldi	r24, 0x08	; 8
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("Price");
     c14:	8e ec       	ldi	r24, 0xCE	; 206
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(14,0);
     c1c:	60 e0       	ldi	r22, 0x00	; 0
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	8e e0       	ldi	r24, 0x0E	; 14
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("No");
     c28:	8b eb       	ldi	r24, 0xBB	; 187
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	int selected_pk=0;
	lcd_setCursor(0,1);
     c30:	61 e0       	ldi	r22, 0x01	; 1
     c32:	70 e0       	ldi	r23, 0x00	; 0
     c34:	80 e0       	ldi	r24, 0x00	; 0
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>

	lcd_puts(food[selected_pk].name);
     c3c:	80 e2       	ldi	r24, 0x20	; 32
     c3e:	91 e0       	ldi	r25, 0x01	; 1
     c40:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,1);
     c44:	61 e0       	ldi	r22, 0x01	; 1
     c46:	70 e0       	ldi	r23, 0x00	; 0
     c48:	88 e0       	ldi	r24, 0x08	; 8
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].price);
     c50:	ce e1       	ldi	r28, 0x1E	; 30
     c52:	d1 e0       	ldi	r29, 0x01	; 1
     c54:	8e 89       	ldd	r24, Y+22	; 0x16
     c56:	9f 89       	ldd	r25, Y+23	; 0x17
     c58:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

	lcd_setCursor(14,1);
     c5c:	61 e0       	ldi	r22, 0x01	; 1
     c5e:	70 e0       	ldi	r23, 0x00	; 0
     c60:	8e e0       	ldi	r24, 0x0E	; 14
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].num);
     c68:	88 8d       	ldd	r24, Y+24	; 0x18
     c6a:	99 8d       	ldd	r25, Y+25	; 0x19
     c6c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
	lcd_puts("Price");

	lcd_setCursor(14,0);
	lcd_puts("No");

	int selected_pk=0;
     c70:	c0 e0       	ldi	r28, 0x00	; 0
     c72:	d0 e0       	ldi	r29, 0x00	; 0

		}

		else if (in==del)
		{
			if (food[selected_pk].p==0)
     c74:	1c e1       	ldi	r17, 0x1C	; 28
	lcd_num(food[selected_pk].num);


	while(1)
	{
		int in=input();
     c76:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		if(in !=0)
     c7a:	89 2b       	or	r24, r25
     c7c:	e1 f3       	breq	.-8      	; 0xc76 <_Z11change_foodv+0x9a>
     c7e:	2f ef       	ldi	r18, 0xFF	; 255
     c80:	86 e7       	ldi	r24, 0x76	; 118
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	21 50       	subi	r18, 0x01	; 1
     c86:	80 40       	sbci	r24, 0x00	; 0
     c88:	90 40       	sbci	r25, 0x00	; 0
     c8a:	e1 f7       	brne	.-8      	; 0xc84 <_Z11change_foodv+0xa8>
     c8c:	00 c0       	rjmp	.+0      	; 0xc8e <_Z11change_foodv+0xb2>
     c8e:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in =input();
     c90:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		if (in==up)
     c94:	20 91 6c 00 	lds	r18, 0x006C
     c98:	30 91 6d 00 	lds	r19, 0x006D
     c9c:	82 17       	cp	r24, r18
     c9e:	93 07       	cpc	r25, r19
     ca0:	69 f4       	brne	.+26     	; 0xcbc <_Z11change_foodv+0xe0>
		{
			if (selected_pk==0)  selected_pk=num_of_food-1;
     ca2:	20 97       	sbiw	r28, 0x00	; 0
     ca4:	31 f4       	brne	.+12     	; 0xcb2 <_Z11change_foodv+0xd6>
     ca6:	c0 91 c2 02 	lds	r28, 0x02C2
     caa:	d0 91 c3 02 	lds	r29, 0x02C3
     cae:	21 97       	sbiw	r28, 0x01	; 1
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <_Z11change_foodv+0xd8>
			else selected_pk--;
     cb2:	21 97       	sbiw	r28, 0x01	; 1
			select_food_print(selected_pk);
     cb4:	ce 01       	movw	r24, r28
     cb6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     cba:	15 c1       	rjmp	.+554    	; 0xee6 <_Z11change_foodv+0x30a>

		}

		else if (in==down)
     cbc:	20 91 6a 00 	lds	r18, 0x006A
     cc0:	30 91 6b 00 	lds	r19, 0x006B
     cc4:	82 17       	cp	r24, r18
     cc6:	93 07       	cpc	r25, r19
     cc8:	81 f4       	brne	.+32     	; 0xcea <_Z11change_foodv+0x10e>
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     cca:	80 91 c2 02 	lds	r24, 0x02C2
     cce:	90 91 c3 02 	lds	r25, 0x02C3
     cd2:	01 97       	sbiw	r24, 0x01	; 1
     cd4:	8c 17       	cp	r24, r28
     cd6:	9d 07       	cpc	r25, r29
     cd8:	11 f0       	breq	.+4      	; 0xcde <_Z11change_foodv+0x102>
			else selected_pk++;
     cda:	21 96       	adiw	r28, 0x01	; 1
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <_Z11change_foodv+0x106>

		}

		else if (in==down)
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     cde:	c0 e0       	ldi	r28, 0x00	; 0
     ce0:	d0 e0       	ldi	r29, 0x00	; 0
			else selected_pk++;
			select_food_print(selected_pk);
     ce2:	ce 01       	movw	r24, r28
     ce4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ce8:	fe c0       	rjmp	.+508    	; 0xee6 <_Z11change_foodv+0x30a>

		}

		else if (in==left)
     cea:	20 91 66 00 	lds	r18, 0x0066
     cee:	30 91 67 00 	lds	r19, 0x0067
     cf2:	82 17       	cp	r24, r18
     cf4:	93 07       	cpc	r25, r19
     cf6:	09 f0       	breq	.+2      	; 0xcfa <_Z11change_foodv+0x11e>
     cf8:	45 c0       	rjmp	.+138    	; 0xd84 <_Z11change_foodv+0x1a8>
		{
			if (food[selected_pk].p==0)
     cfa:	1c 9f       	mul	r17, r28
     cfc:	f0 01       	movw	r30, r0
     cfe:	1d 9f       	mul	r17, r29
     d00:	f0 0d       	add	r31, r0
     d02:	11 24       	eor	r1, r1
     d04:	e2 5e       	subi	r30, 0xE2	; 226
     d06:	fe 4f       	sbci	r31, 0xFE	; 254
     d08:	82 8d       	ldd	r24, Z+26	; 0x1a
     d0a:	93 8d       	ldd	r25, Z+27	; 0x1b
     d0c:	89 2b       	or	r24, r25
     d0e:	d1 f4       	brne	.+52     	; 0xd44 <_Z11change_foodv+0x168>
			{
				if(food[selected_pk].num != 0)
     d10:	1c 9f       	mul	r17, r28
     d12:	f0 01       	movw	r30, r0
     d14:	1d 9f       	mul	r17, r29
     d16:	f0 0d       	add	r31, r0
     d18:	11 24       	eor	r1, r1
     d1a:	e2 5e       	subi	r30, 0xE2	; 226
     d1c:	fe 4f       	sbci	r31, 0xFE	; 254
     d1e:	80 8d       	ldd	r24, Z+24	; 0x18
     d20:	91 8d       	ldd	r25, Z+25	; 0x19
     d22:	00 97       	sbiw	r24, 0x00	; 0
     d24:	09 f4       	brne	.+2      	; 0xd28 <_Z11change_foodv+0x14c>
     d26:	df c0       	rjmp	.+446    	; 0xee6 <_Z11change_foodv+0x30a>
				{
					food[selected_pk].num--;
     d28:	1c 9f       	mul	r17, r28
     d2a:	f0 01       	movw	r30, r0
     d2c:	1d 9f       	mul	r17, r29
     d2e:	f0 0d       	add	r31, r0
     d30:	11 24       	eor	r1, r1
     d32:	e2 5e       	subi	r30, 0xE2	; 226
     d34:	fe 4f       	sbci	r31, 0xFE	; 254
     d36:	01 97       	sbiw	r24, 0x01	; 1
     d38:	91 8f       	std	Z+25, r25	; 0x19
     d3a:	80 8f       	std	Z+24, r24	; 0x18
					select_food_print(selected_pk);
     d3c:	ce 01       	movw	r24, r28
     d3e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     d42:	d1 c0       	rjmp	.+418    	; 0xee6 <_Z11change_foodv+0x30a>
				}

			}
			else
			{
				cannot_cancel();
     d44:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>
				lcd_clear();
     d48:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
				lcd_puts("Food");
     d4c:	85 e8       	ldi	r24, 0x85	; 133
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(8,0);
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	88 e0       	ldi	r24, 0x08	; 8
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("Price");
     d60:	8e ec       	ldi	r24, 0xCE	; 206
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(14,0);
     d68:	60 e0       	ldi	r22, 0x00	; 0
     d6a:	70 e0       	ldi	r23, 0x00	; 0
     d6c:	8e e0       	ldi	r24, 0x0E	; 14
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("No");
     d74:	8b eb       	ldi	r24, 0xBB	; 187
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				select_food_print(selected_pk);
     d7c:	ce 01       	movw	r24, r28
     d7e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     d82:	b1 c0       	rjmp	.+354    	; 0xee6 <_Z11change_foodv+0x30a>





		else if (in==right)
     d84:	20 91 68 00 	lds	r18, 0x0068
     d88:	30 91 69 00 	lds	r19, 0x0069
     d8c:	82 17       	cp	r24, r18
     d8e:	93 07       	cpc	r25, r19
     d90:	81 f4       	brne	.+32     	; 0xdb2 <_Z11change_foodv+0x1d6>
		{
			food[selected_pk].num++;
     d92:	1c 9f       	mul	r17, r28
     d94:	f0 01       	movw	r30, r0
     d96:	1d 9f       	mul	r17, r29
     d98:	f0 0d       	add	r31, r0
     d9a:	11 24       	eor	r1, r1
     d9c:	e2 5e       	subi	r30, 0xE2	; 226
     d9e:	fe 4f       	sbci	r31, 0xFE	; 254
     da0:	80 8d       	ldd	r24, Z+24	; 0x18
     da2:	91 8d       	ldd	r25, Z+25	; 0x19
     da4:	01 96       	adiw	r24, 0x01	; 1
     da6:	91 8f       	std	Z+25, r25	; 0x19
     da8:	80 8f       	std	Z+24, r24	; 0x18
			select_food_print(selected_pk);
     daa:	ce 01       	movw	r24, r28
     dac:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     db0:	9a c0       	rjmp	.+308    	; 0xee6 <_Z11change_foodv+0x30a>

		}

		else if (in==del)
     db2:	20 91 64 00 	lds	r18, 0x0064
     db6:	30 91 65 00 	lds	r19, 0x0065
     dba:	82 17       	cp	r24, r18
     dbc:	93 07       	cpc	r25, r19
     dbe:	d9 f5       	brne	.+118    	; 0xe36 <_Z11change_foodv+0x25a>
		{
			if (food[selected_pk].p==0)
     dc0:	1c 9f       	mul	r17, r28
     dc2:	f0 01       	movw	r30, r0
     dc4:	1d 9f       	mul	r17, r29
     dc6:	f0 0d       	add	r31, r0
     dc8:	11 24       	eor	r1, r1
     dca:	e2 5e       	subi	r30, 0xE2	; 226
     dcc:	fe 4f       	sbci	r31, 0xFE	; 254
     dce:	82 8d       	ldd	r24, Z+26	; 0x1a
     dd0:	93 8d       	ldd	r25, Z+27	; 0x1b
     dd2:	89 2b       	or	r24, r25
     dd4:	81 f4       	brne	.+32     	; 0xdf6 <_Z11change_foodv+0x21a>
			{
				if (display_message1("Set the no to 0?"))
     dd6:	84 ed       	ldi	r24, 0xD4	; 212
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     dde:	89 2b       	or	r24, r25
     de0:	61 f0       	breq	.+24     	; 0xdfa <_Z11change_foodv+0x21e>
				food[selected_pk].num=0;
     de2:	1c 9f       	mul	r17, r28
     de4:	f0 01       	movw	r30, r0
     de6:	1d 9f       	mul	r17, r29
     de8:	f0 0d       	add	r31, r0
     dea:	11 24       	eor	r1, r1
     dec:	e2 5e       	subi	r30, 0xE2	; 226
     dee:	fe 4f       	sbci	r31, 0xFE	; 254
     df0:	11 8e       	std	Z+25, r1	; 0x19
     df2:	10 8e       	std	Z+24, r1	; 0x18
     df4:	02 c0       	rjmp	.+4      	; 0xdfa <_Z11change_foodv+0x21e>
			}
			else
			cannot_cancel();
     df6:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>

			lcd_clear();
     dfa:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     dfe:	85 e8       	ldi	r24, 0x85	; 133
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     e06:	60 e0       	ldi	r22, 0x00	; 0
     e08:	70 e0       	ldi	r23, 0x00	; 0
     e0a:	88 e0       	ldi	r24, 0x08	; 8
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     e12:	8e ec       	ldi	r24, 0xCE	; 206
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     e1a:	60 e0       	ldi	r22, 0x00	; 0
     e1c:	70 e0       	ldi	r23, 0x00	; 0
     e1e:	8e e0       	ldi	r24, 0x0E	; 14
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     e26:	8b eb       	ldi	r24, 0xBB	; 187
     e28:	90 e0       	ldi	r25, 0x00	; 0
     e2a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     e2e:	ce 01       	movw	r24, r28
     e30:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e34:	58 c0       	rjmp	.+176    	; 0xee6 <_Z11change_foodv+0x30a>
		}

		else if (in==ok)
     e36:	20 91 62 00 	lds	r18, 0x0062
     e3a:	30 91 63 00 	lds	r19, 0x0063
     e3e:	82 17       	cp	r24, r18
     e40:	93 07       	cpc	r25, r19
     e42:	39 f5       	brne	.+78     	; 0xe92 <_Z11change_foodv+0x2b6>
		{
			if (display_message1("Save the changes"))
     e44:	85 ee       	ldi	r24, 0xE5	; 229
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     e4c:	89 2b       	or	r24, r25
     e4e:	19 f0       	breq	.+6      	; 0xe56 <_Z11change_foodv+0x27a>
			{
				send_info();
     e50:	0e 94 37 03 	call	0x66e	; 0x66e <_Z9send_infov>
				//_delay_ms(DELAY_TIME);
				return;
     e54:	52 c0       	rjmp	.+164    	; 0xefa <_Z11change_foodv+0x31e>
			}

			lcd_clear();
     e56:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     e5a:	85 e8       	ldi	r24, 0x85	; 133
     e5c:	90 e0       	ldi	r25, 0x00	; 0
     e5e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     e62:	60 e0       	ldi	r22, 0x00	; 0
     e64:	70 e0       	ldi	r23, 0x00	; 0
     e66:	88 e0       	ldi	r24, 0x08	; 8
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     e6e:	8e ec       	ldi	r24, 0xCE	; 206
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	8e e0       	ldi	r24, 0x0E	; 14
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     e82:	8b eb       	ldi	r24, 0xBB	; 187
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     e8a:	ce 01       	movw	r24, r28
     e8c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e90:	2a c0       	rjmp	.+84     	; 0xee6 <_Z11change_foodv+0x30a>

		}


		else if (in==back)
     e92:	20 91 60 00 	lds	r18, 0x0060
     e96:	30 91 61 00 	lds	r19, 0x0061
     e9a:	82 17       	cp	r24, r18
     e9c:	93 07       	cpc	r25, r19
     e9e:	19 f5       	brne	.+70     	; 0xee6 <_Z11change_foodv+0x30a>
		{
			if (display_message1("Discard Changes?"))
     ea0:	86 ef       	ldi	r24, 0xF6	; 246
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     ea8:	89 2b       	or	r24, r25
     eaa:	39 f5       	brne	.+78     	; 0xefa <_Z11change_foodv+0x31e>
			{
				//_delay_ms(DELAY_TIME);
				return ;
			}

			lcd_clear();
     eac:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     eb0:	85 e8       	ldi	r24, 0x85	; 133
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     eb8:	60 e0       	ldi	r22, 0x00	; 0
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	88 e0       	ldi	r24, 0x08	; 8
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     ec4:	8e ec       	ldi	r24, 0xCE	; 206
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     ecc:	60 e0       	ldi	r22, 0x00	; 0
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	8e e0       	ldi	r24, 0x0E	; 14
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     ed8:	8b eb       	ldi	r24, 0xBB	; 187
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     ee0:	ce 01       	movw	r24, r28
     ee2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ee6:	2f ef       	ldi	r18, 0xFF	; 255
     ee8:	85 ea       	ldi	r24, 0xA5	; 165
     eea:	9e e0       	ldi	r25, 0x0E	; 14
     eec:	21 50       	subi	r18, 0x01	; 1
     eee:	80 40       	sbci	r24, 0x00	; 0
     ef0:	90 40       	sbci	r25, 0x00	; 0
     ef2:	e1 f7       	brne	.-8      	; 0xeec <_Z11change_foodv+0x310>
     ef4:	00 c0       	rjmp	.+0      	; 0xef6 <_Z11change_foodv+0x31a>
     ef6:	00 00       	nop
     ef8:	be ce       	rjmp	.-644    	; 0xc76 <_Z11change_foodv+0x9a>

		_delay_ms(DELAY_TIME_LOOP);
		}
	}

}
     efa:	df 91       	pop	r29
     efc:	cf 91       	pop	r28
     efe:	1f 91       	pop	r17
     f00:	08 95       	ret

00000f02 <_Z8mainmenuv>:
     f02:	2f ef       	ldi	r18, 0xFF	; 255
     f04:	85 ea       	ldi	r24, 0xA5	; 165
     f06:	9e e0       	ldi	r25, 0x0E	; 14
     f08:	21 50       	subi	r18, 0x01	; 1
     f0a:	80 40       	sbci	r24, 0x00	; 0
     f0c:	90 40       	sbci	r25, 0x00	; 0
     f0e:	e1 f7       	brne	.-8      	; 0xf08 <_Z8mainmenuv+0x6>
     f10:	00 c0       	rjmp	.+0      	; 0xf12 <_Z8mainmenuv+0x10>
     f12:	00 00       	nop


void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
     f14:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	num_of_food=0;
     f18:	10 92 c3 02 	sts	0x02C3, r1
     f1c:	10 92 c2 02 	sts	0x02C2, r1
	int state=0;
	int first_visit=0;
	main_menu_print(first_visit);
     f20:	80 e0       	ldi	r24, 0x00	; 0
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
	int first_visit=0;
     f28:	e1 2c       	mov	r14, r1
     f2a:	f1 2c       	mov	r15, r1
void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
     f2c:	c0 e0       	ldi	r28, 0x00	; 0
     f2e:	d0 e0       	ldi	r29, 0x00	; 0
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
     f30:	00 e0       	ldi	r16, 0x00	; 0
     f32:	10 e0       	ldi	r17, 0x00	; 0
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
					if (c==1)
     f34:	cc 24       	eor	r12, r12
     f36:	c3 94       	inc	r12
     f38:	d1 2c       	mov	r13, r1
	int first_visit=0;
	main_menu_print(first_visit);

	while(1)
	{
		int in=input();
     f3a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		//  lcd_puts (in);
		if (in!=000)
     f3e:	89 2b       	or	r24, r25
     f40:	e1 f3       	breq	.-8      	; 0xf3a <_Z8mainmenuv+0x38>
     f42:	2f ef       	ldi	r18, 0xFF	; 255
     f44:	86 e7       	ldi	r24, 0x76	; 118
     f46:	91 e0       	ldi	r25, 0x01	; 1
     f48:	21 50       	subi	r18, 0x01	; 1
     f4a:	80 40       	sbci	r24, 0x00	; 0
     f4c:	90 40       	sbci	r25, 0x00	; 0
     f4e:	e1 f7       	brne	.-8      	; 0xf48 <_Z8mainmenuv+0x46>
     f50:	00 c0       	rjmp	.+0      	; 0xf52 <_Z8mainmenuv+0x50>
     f52:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in=input();
     f54:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			if (state==0&& (in==up ||in==down))
     f58:	20 97       	sbiw	r28, 0x00	; 0
     f5a:	31 f5       	brne	.+76     	; 0xfa8 <_Z8mainmenuv+0xa6>
     f5c:	20 91 6c 00 	lds	r18, 0x006C
     f60:	30 91 6d 00 	lds	r19, 0x006D
     f64:	82 17       	cp	r24, r18
     f66:	93 07       	cpc	r25, r19
     f68:	41 f0       	breq	.+16     	; 0xf7a <_Z8mainmenuv+0x78>
     f6a:	20 91 6a 00 	lds	r18, 0x006A
     f6e:	30 91 6b 00 	lds	r19, 0x006B
     f72:	82 17       	cp	r24, r18
     f74:	93 07       	cpc	r25, r19
     f76:	09 f0       	breq	.+2      	; 0xf7a <_Z8mainmenuv+0x78>
     f78:	70 c0       	rjmp	.+224    	; 0x105a <_Z8mainmenuv+0x158>
			{
				lcd_setCursor(0,0);
     f7a:	60 2f       	mov	r22, r16
     f7c:	71 2f       	mov	r23, r17
     f7e:	80 2f       	mov	r24, r16
     f80:	91 2f       	mov	r25, r17
     f82:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
     f86:	8f eb       	ldi	r24, 0xBF	; 191
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,1);
     f8e:	6c 2d       	mov	r22, r12
     f90:	7d 2d       	mov	r23, r13
     f92:	80 2f       	mov	r24, r16
     f94:	91 2f       	mov	r25, r17
     f96:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
     f9a:	8a e7       	ldi	r24, 0x7A	; 122
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=1;
     fa2:	cc 2d       	mov	r28, r12
     fa4:	dd 2d       	mov	r29, r13
     fa6:	4f c0       	rjmp	.+158    	; 0x1046 <_Z8mainmenuv+0x144>
			}
			else if (state==1 && (in==up ||in==down))
     fa8:	c1 30       	cpi	r28, 0x01	; 1
     faa:	d1 05       	cpc	r29, r1
     fac:	09 f0       	breq	.+2      	; 0xfb0 <_Z8mainmenuv+0xae>
     fae:	5d c0       	rjmp	.+186    	; 0x106a <_Z8mainmenuv+0x168>
     fb0:	20 91 6c 00 	lds	r18, 0x006C
     fb4:	30 91 6d 00 	lds	r19, 0x006D
     fb8:	82 17       	cp	r24, r18
     fba:	93 07       	cpc	r25, r19
     fbc:	39 f0       	breq	.+14     	; 0xfcc <_Z8mainmenuv+0xca>
     fbe:	20 91 6a 00 	lds	r18, 0x006A
     fc2:	30 91 6b 00 	lds	r19, 0x006B
     fc6:	82 17       	cp	r24, r18
     fc8:	93 07       	cpc	r25, r19
     fca:	b9 f4       	brne	.+46     	; 0xffa <_Z8mainmenuv+0xf8>
			{
				lcd_setCursor(0,1);
     fcc:	6c 2d       	mov	r22, r12
     fce:	7d 2d       	mov	r23, r13
     fd0:	80 2f       	mov	r24, r16
     fd2:	91 2f       	mov	r25, r17
     fd4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
     fd8:	8f eb       	ldi	r24, 0xBF	; 191
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,0);
     fe0:	60 2f       	mov	r22, r16
     fe2:	71 2f       	mov	r23, r17
     fe4:	80 2f       	mov	r24, r16
     fe6:	91 2f       	mov	r25, r17
     fe8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
     fec:	8a e7       	ldi	r24, 0x7A	; 122
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=0;
     ff4:	c0 2f       	mov	r28, r16
     ff6:	d1 2f       	mov	r29, r17
     ff8:	26 c0       	rjmp	.+76     	; 0x1046 <_Z8mainmenuv+0x144>
			}
			else if (in==ok)
     ffa:	20 91 62 00 	lds	r18, 0x0062
     ffe:	30 91 63 00 	lds	r19, 0x0063
    1002:	82 17       	cp	r24, r18
    1004:	93 07       	cpc	r25, r19
    1006:	f9 f4       	brne	.+62     	; 0x1046 <_Z8mainmenuv+0x144>
			{
				//_delay_ms(DELAY_TIME);
				if (state==0)
    1008:	cd 2b       	or	r28, r29
    100a:	b1 f4       	brne	.+44     	; 0x1038 <_Z8mainmenuv+0x136>
				{
					int c=0;
					if (first_visit==0)
    100c:	e1 14       	cp	r14, r1
    100e:	f1 04       	cpc	r15, r1
    1010:	59 f4       	brne	.+22     	; 0x1028 <_Z8mainmenuv+0x126>
					c=select_food();
    1012:	0e 94 67 03 	call	0x6ce	; 0x6ce <_Z11select_foodv>
					else
					change_food();
					if (c==1)
    1016:	3c 2d       	mov	r19, r12
    1018:	2d 2d       	mov	r18, r13
    101a:	01 97       	sbiw	r24, 0x01	; 1
    101c:	11 f0       	breq	.+4      	; 0x1022 <_Z8mainmenuv+0x120>
    101e:	30 2f       	mov	r19, r16
    1020:	21 2f       	mov	r18, r17
					first_visit=1;
    1022:	e3 2e       	mov	r14, r19
    1024:	f2 2e       	mov	r15, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <_Z8mainmenuv+0x12a>
				{
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
    1028:	0e 94 ee 05 	call	0xbdc	; 0xbdc <_Z11change_foodv>
					if (c==1)
					first_visit=1;
					state=0;
					main_menu_print(first_visit);
    102c:	c7 01       	movw	r24, r14
    102e:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
    1032:	c0 2f       	mov	r28, r16
    1034:	d1 2f       	mov	r29, r17
    1036:	07 c0       	rjmp	.+14     	; 0x1046 <_Z8mainmenuv+0x144>
					main_menu_print(first_visit);
				}
				else
				//selected_food();
				{
					selected_food();
    1038:	0e 94 c4 04 	call	0x988	; 0x988 <_Z13selected_foodv>
					main_menu_print(first_visit);
    103c:	c7 01       	movw	r24, r14
    103e:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					state=0;
    1042:	c0 2f       	mov	r28, r16
    1044:	d1 2f       	mov	r29, r17
    1046:	9f ef       	ldi	r25, 0xFF	; 255
    1048:	25 ea       	ldi	r18, 0xA5	; 165
    104a:	8e e0       	ldi	r24, 0x0E	; 14
    104c:	91 50       	subi	r25, 0x01	; 1
    104e:	20 40       	sbci	r18, 0x00	; 0
    1050:	80 40       	sbci	r24, 0x00	; 0
    1052:	e1 f7       	brne	.-8      	; 0x104c <_Z8mainmenuv+0x14a>
    1054:	00 c0       	rjmp	.+0      	; 0x1056 <_Z8mainmenuv+0x154>
    1056:	00 00       	nop
    1058:	70 cf       	rjmp	.-288    	; 0xf3a <_Z8mainmenuv+0x38>
				lcd_puts(" ");
				lcd_setCursor(0,0);
				lcd_puts(">");
				state=0;
			}
			else if (in==ok)
    105a:	20 91 62 00 	lds	r18, 0x0062
    105e:	30 91 63 00 	lds	r19, 0x0063
    1062:	82 17       	cp	r24, r18
    1064:	93 07       	cpc	r25, r19
    1066:	79 f7       	brne	.-34     	; 0x1046 <_Z8mainmenuv+0x144>
    1068:	d1 cf       	rjmp	.-94     	; 0x100c <_Z8mainmenuv+0x10a>
    106a:	20 91 62 00 	lds	r18, 0x0062
    106e:	30 91 63 00 	lds	r19, 0x0063
    1072:	82 17       	cp	r24, r18
    1074:	93 07       	cpc	r25, r19
    1076:	39 f7       	brne	.-50     	; 0x1046 <_Z8mainmenuv+0x144>
    1078:	df cf       	rjmp	.-66     	; 0x1038 <_Z8mainmenuv+0x136>

0000107a <main>:
		

}
int main() {
	//database_init_test();
	sei();
    107a:	78 94       	sei
	uart0_init(UART_BAUD_SELECT(9600,F_CPU));	
    107c:	87 e6       	ldi	r24, 0x67	; 103
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 97 08 	call	0x112e	; 0x112e <_Z10uart0_initj>
	DDRD&= ~(1<<s_zero);
    1084:	88 98       	cbi	0x11, 0	; 17
	DDRD&= ~(1<<s_one);
    1086:	89 98       	cbi	0x11, 1	; 17
   DDRD&= ~(1<<s_two);
    1088:	8a 98       	cbi	0x11, 2	; 17
	lcd_init();
    108a:	0e 94 91 00 	call	0x122	; 0x122 <_Z8lcd_initv>
	mainmenu();
    108e:	0e 94 81 07 	call	0xf02	; 0xf02 <_Z8mainmenuv>

00001092 <__vector_13>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
    1092:	1f 92       	push	r1
    1094:	0f 92       	push	r0
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	0f 92       	push	r0
    109a:	11 24       	eor	r1, r1
    109c:	2f 93       	push	r18
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	ef 93       	push	r30
    10a4:	ff 93       	push	r31
    10a6:	8b b1       	in	r24, 0x0b	; 11
    10a8:	2c b1       	in	r18, 0x0c	; 12
    10aa:	88 71       	andi	r24, 0x18	; 24
    10ac:	e0 91 c6 02 	lds	r30, 0x02C6
    10b0:	ef 5f       	subi	r30, 0xFF	; 255
    10b2:	ef 71       	andi	r30, 0x1F	; 31
    10b4:	90 91 c5 02 	lds	r25, 0x02C5
    10b8:	e9 17       	cp	r30, r25
    10ba:	39 f0       	breq	.+14     	; 0x10ca <__vector_13+0x38>
    10bc:	e0 93 c6 02 	sts	0x02C6, r30
    10c0:	f0 e0       	ldi	r31, 0x00	; 0
    10c2:	e7 53       	subi	r30, 0x37	; 55
    10c4:	fd 4f       	sbci	r31, 0xFD	; 253
    10c6:	20 83       	st	Z, r18
    10c8:	01 c0       	rjmp	.+2      	; 0x10cc <__vector_13+0x3a>
    10ca:	82 e0       	ldi	r24, 0x02	; 2
    10cc:	80 93 c4 02 	sts	0x02C4, r24
    10d0:	ff 91       	pop	r31
    10d2:	ef 91       	pop	r30
    10d4:	9f 91       	pop	r25
    10d6:	8f 91       	pop	r24
    10d8:	2f 91       	pop	r18
    10da:	0f 90       	pop	r0
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	0f 90       	pop	r0
    10e0:	1f 90       	pop	r1
    10e2:	18 95       	reti

000010e4 <__vector_14>:
    10e4:	1f 92       	push	r1
    10e6:	0f 92       	push	r0
    10e8:	0f b6       	in	r0, 0x3f	; 63
    10ea:	0f 92       	push	r0
    10ec:	11 24       	eor	r1, r1
    10ee:	8f 93       	push	r24
    10f0:	9f 93       	push	r25
    10f2:	ef 93       	push	r30
    10f4:	ff 93       	push	r31
    10f6:	90 91 c8 02 	lds	r25, 0x02C8
    10fa:	80 91 c7 02 	lds	r24, 0x02C7
    10fe:	98 17       	cp	r25, r24
    1100:	61 f0       	breq	.+24     	; 0x111a <__vector_14+0x36>
    1102:	e0 91 c7 02 	lds	r30, 0x02C7
    1106:	ef 5f       	subi	r30, 0xFF	; 255
    1108:	ef 71       	andi	r30, 0x1F	; 31
    110a:	e0 93 c7 02 	sts	0x02C7, r30
    110e:	f0 e0       	ldi	r31, 0x00	; 0
    1110:	e7 51       	subi	r30, 0x17	; 23
    1112:	fd 4f       	sbci	r31, 0xFD	; 253
    1114:	80 81       	ld	r24, Z
    1116:	8c b9       	out	0x0c, r24	; 12
    1118:	01 c0       	rjmp	.+2      	; 0x111c <__vector_14+0x38>
    111a:	55 98       	cbi	0x0a, 5	; 10
    111c:	ff 91       	pop	r31
    111e:	ef 91       	pop	r30
    1120:	9f 91       	pop	r25
    1122:	8f 91       	pop	r24
    1124:	0f 90       	pop	r0
    1126:	0f be       	out	0x3f, r0	; 63
    1128:	0f 90       	pop	r0
    112a:	1f 90       	pop	r1
    112c:	18 95       	reti

0000112e <_Z10uart0_initj>:
    112e:	10 92 c8 02 	sts	0x02C8, r1
    1132:	10 92 c7 02 	sts	0x02C7, r1
    1136:	10 92 c6 02 	sts	0x02C6, r1
    113a:	10 92 c5 02 	sts	0x02C5, r1
    113e:	99 23       	and	r25, r25
    1140:	1c f4       	brge	.+6      	; 0x1148 <_Z10uart0_initj+0x1a>
    1142:	22 e0       	ldi	r18, 0x02	; 2
    1144:	2b b9       	out	0x0b, r18	; 11
    1146:	9f 77       	andi	r25, 0x7F	; 127
    1148:	90 bd       	out	0x20, r25	; 32
    114a:	89 b9       	out	0x09, r24	; 9
    114c:	88 e9       	ldi	r24, 0x98	; 152
    114e:	8a b9       	out	0x0a, r24	; 10
    1150:	86 e8       	ldi	r24, 0x86	; 134
    1152:	80 bd       	out	0x20, r24	; 32
    1154:	08 95       	ret

00001156 <_Z10uart0_getcv>:
    1156:	90 91 c6 02 	lds	r25, 0x02C6
    115a:	80 91 c5 02 	lds	r24, 0x02C5
    115e:	98 17       	cp	r25, r24
    1160:	91 f0       	breq	.+36     	; 0x1186 <_Z10uart0_getcv+0x30>
    1162:	e0 91 c5 02 	lds	r30, 0x02C5
    1166:	ef 5f       	subi	r30, 0xFF	; 255
    1168:	ef 71       	andi	r30, 0x1F	; 31
    116a:	e0 93 c5 02 	sts	0x02C5, r30
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	e7 53       	subi	r30, 0x37	; 55
    1172:	fd 4f       	sbci	r31, 0xFD	; 253
    1174:	20 81       	ld	r18, Z
    1176:	80 91 c4 02 	lds	r24, 0x02C4
    117a:	90 e0       	ldi	r25, 0x00	; 0
    117c:	98 2f       	mov	r25, r24
    117e:	88 27       	eor	r24, r24
    1180:	82 0f       	add	r24, r18
    1182:	91 1d       	adc	r25, r1
    1184:	08 95       	ret
    1186:	80 e0       	ldi	r24, 0x00	; 0
    1188:	91 e0       	ldi	r25, 0x01	; 1
    118a:	08 95       	ret

0000118c <_Z10uart0_putch>:
    118c:	20 91 c8 02 	lds	r18, 0x02C8
    1190:	2f 5f       	subi	r18, 0xFF	; 255
    1192:	2f 71       	andi	r18, 0x1F	; 31
    1194:	90 91 c7 02 	lds	r25, 0x02C7
    1198:	29 17       	cp	r18, r25
    119a:	e1 f3       	breq	.-8      	; 0x1194 <_Z10uart0_putch+0x8>
    119c:	e2 2f       	mov	r30, r18
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	e7 51       	subi	r30, 0x17	; 23
    11a2:	fd 4f       	sbci	r31, 0xFD	; 253
    11a4:	80 83       	st	Z, r24
    11a6:	20 93 c8 02 	sts	0x02C8, r18
    11aa:	55 9a       	sbi	0x0a, 5	; 10
    11ac:	08 95       	ret

000011ae <_Z12uart0_putinti>:
    11ae:	0f 93       	push	r16
    11b0:	1f 93       	push	r17
    11b2:	cf 93       	push	r28
    11b4:	df 93       	push	r29
    11b6:	cd b7       	in	r28, 0x3d	; 61
    11b8:	de b7       	in	r29, 0x3e	; 62
    11ba:	2f 97       	sbiw	r28, 0x0f	; 15
    11bc:	0f b6       	in	r0, 0x3f	; 63
    11be:	f8 94       	cli
    11c0:	de bf       	out	0x3e, r29	; 62
    11c2:	0f be       	out	0x3f, r0	; 63
    11c4:	cd bf       	out	0x3d, r28	; 61
    11c6:	4a e0       	ldi	r20, 0x0A	; 10
    11c8:	be 01       	movw	r22, r28
    11ca:	6f 5f       	subi	r22, 0xFF	; 255
    11cc:	7f 4f       	sbci	r23, 0xFF	; 255
    11ce:	0e 94 4c 09 	call	0x1298	; 0x1298 <__itoa_ncheck>
    11d2:	89 81       	ldd	r24, Y+1	; 0x01
    11d4:	88 23       	and	r24, r24
    11d6:	51 f0       	breq	.+20     	; 0x11ec <_Z12uart0_putinti+0x3e>
    11d8:	8e 01       	movw	r16, r28
    11da:	0e 5f       	subi	r16, 0xFE	; 254
    11dc:	1f 4f       	sbci	r17, 0xFF	; 255
    11de:	0e 94 c6 08 	call	0x118c	; 0x118c <_Z10uart0_putch>
    11e2:	f8 01       	movw	r30, r16
    11e4:	81 91       	ld	r24, Z+
    11e6:	8f 01       	movw	r16, r30
    11e8:	81 11       	cpse	r24, r1
    11ea:	f9 cf       	rjmp	.-14     	; 0x11de <_Z12uart0_putinti+0x30>
    11ec:	2f 96       	adiw	r28, 0x0f	; 15
    11ee:	0f b6       	in	r0, 0x3f	; 63
    11f0:	f8 94       	cli
    11f2:	de bf       	out	0x3e, r29	; 62
    11f4:	0f be       	out	0x3f, r0	; 63
    11f6:	cd bf       	out	0x3d, r28	; 61
    11f8:	df 91       	pop	r29
    11fa:	cf 91       	pop	r28
    11fc:	1f 91       	pop	r17
    11fe:	0f 91       	pop	r16
    1200:	08 95       	ret

00001202 <_Z10uart0_putsPKc>:
    1202:	cf 93       	push	r28
    1204:	df 93       	push	r29
    1206:	ec 01       	movw	r28, r24
    1208:	88 81       	ld	r24, Y
    120a:	88 23       	and	r24, r24
    120c:	31 f0       	breq	.+12     	; 0x121a <_Z10uart0_putsPKc+0x18>
    120e:	21 96       	adiw	r28, 0x01	; 1
    1210:	0e 94 c6 08 	call	0x118c	; 0x118c <_Z10uart0_putch>
    1214:	89 91       	ld	r24, Y+
    1216:	81 11       	cpse	r24, r1
    1218:	fb cf       	rjmp	.-10     	; 0x1210 <_Z10uart0_putsPKc+0xe>
    121a:	df 91       	pop	r29
    121c:	cf 91       	pop	r28
    121e:	08 95       	ret

00001220 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
    1220:	80 91 c6 02 	lds	r24, 0x02C6
    1224:	20 91 c5 02 	lds	r18, 0x02C5
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	4f 96       	adiw	r24, 0x1f	; 31
    122c:	82 1b       	sub	r24, r18
    122e:	91 09       	sbc	r25, r1
    1230:	6f e1       	ldi	r22, 0x1F	; 31
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	0e 94 1d 09 	call	0x123a	; 0x123a <__divmodhi4>
}/* uart_available */
    1238:	08 95       	ret

0000123a <__divmodhi4>:
    123a:	97 fb       	bst	r25, 7
    123c:	07 2e       	mov	r0, r23
    123e:	16 f4       	brtc	.+4      	; 0x1244 <__divmodhi4+0xa>
    1240:	00 94       	com	r0
    1242:	07 d0       	rcall	.+14     	; 0x1252 <__divmodhi4_neg1>
    1244:	77 fd       	sbrc	r23, 7
    1246:	09 d0       	rcall	.+18     	; 0x125a <__divmodhi4_neg2>
    1248:	0e 94 31 09 	call	0x1262	; 0x1262 <__udivmodhi4>
    124c:	07 fc       	sbrc	r0, 7
    124e:	05 d0       	rcall	.+10     	; 0x125a <__divmodhi4_neg2>
    1250:	3e f4       	brtc	.+14     	; 0x1260 <__divmodhi4_exit>

00001252 <__divmodhi4_neg1>:
    1252:	90 95       	com	r25
    1254:	81 95       	neg	r24
    1256:	9f 4f       	sbci	r25, 0xFF	; 255
    1258:	08 95       	ret

0000125a <__divmodhi4_neg2>:
    125a:	70 95       	com	r23
    125c:	61 95       	neg	r22
    125e:	7f 4f       	sbci	r23, 0xFF	; 255

00001260 <__divmodhi4_exit>:
    1260:	08 95       	ret

00001262 <__udivmodhi4>:
    1262:	aa 1b       	sub	r26, r26
    1264:	bb 1b       	sub	r27, r27
    1266:	51 e1       	ldi	r21, 0x11	; 17
    1268:	07 c0       	rjmp	.+14     	; 0x1278 <__udivmodhi4_ep>

0000126a <__udivmodhi4_loop>:
    126a:	aa 1f       	adc	r26, r26
    126c:	bb 1f       	adc	r27, r27
    126e:	a6 17       	cp	r26, r22
    1270:	b7 07       	cpc	r27, r23
    1272:	10 f0       	brcs	.+4      	; 0x1278 <__udivmodhi4_ep>
    1274:	a6 1b       	sub	r26, r22
    1276:	b7 0b       	sbc	r27, r23

00001278 <__udivmodhi4_ep>:
    1278:	88 1f       	adc	r24, r24
    127a:	99 1f       	adc	r25, r25
    127c:	5a 95       	dec	r21
    127e:	a9 f7       	brne	.-22     	; 0x126a <__udivmodhi4_loop>
    1280:	80 95       	com	r24
    1282:	90 95       	com	r25
    1284:	bc 01       	movw	r22, r24
    1286:	cd 01       	movw	r24, r26
    1288:	08 95       	ret

0000128a <strcpy>:
    128a:	fb 01       	movw	r30, r22
    128c:	dc 01       	movw	r26, r24
    128e:	01 90       	ld	r0, Z+
    1290:	0d 92       	st	X+, r0
    1292:	00 20       	and	r0, r0
    1294:	e1 f7       	brne	.-8      	; 0x128e <strcpy+0x4>
    1296:	08 95       	ret

00001298 <__itoa_ncheck>:
    1298:	bb 27       	eor	r27, r27
    129a:	4a 30       	cpi	r20, 0x0A	; 10
    129c:	31 f4       	brne	.+12     	; 0x12aa <__itoa_ncheck+0x12>
    129e:	99 23       	and	r25, r25
    12a0:	22 f4       	brpl	.+8      	; 0x12aa <__itoa_ncheck+0x12>
    12a2:	bd e2       	ldi	r27, 0x2D	; 45
    12a4:	90 95       	com	r25
    12a6:	81 95       	neg	r24
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	0c 94 58 09 	jmp	0x12b0	; 0x12b0 <__utoa_common>

000012ae <__utoa_ncheck>:
    12ae:	bb 27       	eor	r27, r27

000012b0 <__utoa_common>:
    12b0:	fb 01       	movw	r30, r22
    12b2:	55 27       	eor	r21, r21
    12b4:	aa 27       	eor	r26, r26
    12b6:	88 0f       	add	r24, r24
    12b8:	99 1f       	adc	r25, r25
    12ba:	aa 1f       	adc	r26, r26
    12bc:	a4 17       	cp	r26, r20
    12be:	10 f0       	brcs	.+4      	; 0x12c4 <__utoa_common+0x14>
    12c0:	a4 1b       	sub	r26, r20
    12c2:	83 95       	inc	r24
    12c4:	50 51       	subi	r21, 0x10	; 16
    12c6:	b9 f7       	brne	.-18     	; 0x12b6 <__utoa_common+0x6>
    12c8:	a0 5d       	subi	r26, 0xD0	; 208
    12ca:	aa 33       	cpi	r26, 0x3A	; 58
    12cc:	08 f0       	brcs	.+2      	; 0x12d0 <__utoa_common+0x20>
    12ce:	a9 5d       	subi	r26, 0xD9	; 217
    12d0:	a1 93       	st	Z+, r26
    12d2:	00 97       	sbiw	r24, 0x00	; 0
    12d4:	79 f7       	brne	.-34     	; 0x12b4 <__utoa_common+0x4>
    12d6:	b1 11       	cpse	r27, r1
    12d8:	b1 93       	st	Z+, r27
    12da:	11 92       	st	Z+, r1
    12dc:	cb 01       	movw	r24, r22
    12de:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <strrev>

000012e2 <strrev>:
    12e2:	dc 01       	movw	r26, r24
    12e4:	fc 01       	movw	r30, r24
    12e6:	67 2f       	mov	r22, r23
    12e8:	71 91       	ld	r23, Z+
    12ea:	77 23       	and	r23, r23
    12ec:	e1 f7       	brne	.-8      	; 0x12e6 <strrev+0x4>
    12ee:	32 97       	sbiw	r30, 0x02	; 2
    12f0:	04 c0       	rjmp	.+8      	; 0x12fa <strrev+0x18>
    12f2:	7c 91       	ld	r23, X
    12f4:	6d 93       	st	X+, r22
    12f6:	70 83       	st	Z, r23
    12f8:	62 91       	ld	r22, -Z
    12fa:	ae 17       	cp	r26, r30
    12fc:	bf 07       	cpc	r27, r31
    12fe:	c8 f3       	brcs	.-14     	; 0x12f2 <strrev+0x10>
    1300:	08 95       	ret

00001302 <_exit>:
    1302:	f8 94       	cli

00001304 <__stop_program>:
    1304:	ff cf       	rjmp	.-2      	; 0x1304 <__stop_program>
