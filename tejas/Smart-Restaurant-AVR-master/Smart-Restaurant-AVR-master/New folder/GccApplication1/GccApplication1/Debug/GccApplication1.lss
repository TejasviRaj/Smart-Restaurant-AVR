
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001420  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b6  00800060  00001420  000014b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000038f  00800116  00800116  0000156a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000156a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000159c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  000015d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d66  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9d  00000000  00000000  000044de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013ed  00000000  00000000  00004f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  00006368  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007e8  00000000  00000000  00006800  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001305  00000000  00000000  00006fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  000082ed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__vector_13>
      38:	0c 94 fa 08 	jmp	0x11f4	; 0x11f4 <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e2       	ldi	r30, 0x20	; 32
      68:	f4 e1       	ldi	r31, 0x14	; 20
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 31       	cpi	r26, 0x16	; 22
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	a6 e1       	ldi	r26, 0x16	; 22
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3a       	cpi	r26, 0xA5	; 165
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 c3 08 	call	0x1186	; 0x1186 <main>
      8a:	0c 94 0e 0a 	jmp	0x141c	; 0x141c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      92:	95 ed       	ldi	r25, 0xD5	; 213
      94:	9a 95       	dec	r25
      96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
      98:	00 00       	nop
#define	LCD_STROBE()	((CPORT |= (1 << EN)),(CPORT &= ~(1 << EN)))
static void lcd_write(uint8_t c)
{
	_delay_us(40);

	if(c & 0x80)
      9a:	88 23       	and	r24, r24
      9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
	DPORT |=  (1 << D7);
      9e:	da 9a       	sbi	0x1b, 2	; 27
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
	else
	DPORT &= ~(1 << D7);
      a2:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x40)
      a4:	86 ff       	sbrs	r24, 6
      a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
	DPORT |=  (1 << D6);
      a8:	db 9a       	sbi	0x1b, 3	; 27
      aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
	else
	DPORT &= ~(1 << D6);
      ac:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x20)
      ae:	85 ff       	sbrs	r24, 5
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
	DPORT |=  (1 << D5);
      b2:	dc 9a       	sbi	0x1b, 4	; 27
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
	else
	DPORT &= ~(1 << D5);
      b6:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x10)
      b8:	84 ff       	sbrs	r24, 4
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
	DPORT |=  (1 << D4);
      bc:	dd 9a       	sbi	0x1b, 5	; 27
      be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
	else
	DPORT &= ~(1 << D4);
      c0:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      c2:	de 9a       	sbi	0x1b, 6	; 27
      c4:	de 98       	cbi	0x1b, 6	; 27
	
	

	if(c & 0x08)
      c6:	83 ff       	sbrs	r24, 3
      c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
	
	DPORT |=  (1 << D7);
      ca:	da 9a       	sbi	0x1b, 2	; 27
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
	else
	DPORT &= ~(1 << D7);
      ce:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x04)
      d0:	82 ff       	sbrs	r24, 2
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
	DPORT |=  (1 << D6);
      d4:	db 9a       	sbi	0x1b, 3	; 27
      d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
	else
	DPORT &= ~(1 << D6);
      d8:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x02)
      da:	81 ff       	sbrs	r24, 1
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
	DPORT |=  (1 << D5);
      de:	dc 9a       	sbi	0x1b, 4	; 27
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
	else
	DPORT &= ~(1 << D5);
      e2:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x01)
      e4:	80 ff       	sbrs	r24, 0
      e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
	DPORT |=  (1 << D4);
      e8:	dd 9a       	sbi	0x1b, 5	; 27
      ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
	else
	DPORT &= ~(1 << D4);
      ec:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      ee:	de 9a       	sbi	0x1b, 6	; 27
      f0:	de 98       	cbi	0x1b, 6	; 27
      f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
#include "lcd.h"


void lcd_clear(void)
{
	CPORT &= ~(1 << RS);
      f4:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(1<<LCD_CLR);
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	8f e3       	ldi	r24, 0x3F	; 63
      fe:	9f e1       	ldi	r25, 0x1F	; 31
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
     104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
     106:	00 00       	nop
     108:	08 95       	ret

0000010a <_Z8lcd_gotoh>:
	_delay_ms(2);
}

void lcd_goto(unsigned char pos)
{
	CPORT &= ~(1 << RS);
     10a:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(0x80|pos);
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     112:	08 95       	ret

00000114 <_Z10lcd_gotoxyhh>:
}


void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     114:	90 e4       	ldi	r25, 0x40	; 64
     116:	69 9f       	mul	r22, r25
     118:	80 0d       	add	r24, r0
     11a:	11 24       	eor	r1, r1
     11c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_gotoh>
     120:	08 95       	ret

00000122 <_Z8lcd_initv>:
}

void lcd_init()
{
	DDR(CPORT) |= (1 << RS);
     122:	d7 9a       	sbi	0x1a, 7	; 26
	DDR(CPORT) |= (1 << EN);
     124:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDR(DPORT) |= (1 << D7);
     126:	d2 9a       	sbi	0x1a, 2	; 26
	DDR(DPORT) |= (1 << D6);
     128:	d3 9a       	sbi	0x1a, 3	; 26
	DDR(DPORT) |= (1 << D5);
     12a:	d4 9a       	sbi	0x1a, 4	; 26
	DDR(DPORT) |= (1 << D4);
     12c:	d5 9a       	sbi	0x1a, 5	; 26
	
	CPORT &= ~(1 << RS);
     12e:	df 98       	cbi	0x1b, 7	; 27
	CPORT &= ~(1 << EN);
     130:	de 98       	cbi	0x1b, 6	; 27
     132:	8f e5       	ldi	r24, 0x5F	; 95
     134:	9a ee       	ldi	r25, 0xEA	; 234
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <_Z8lcd_initv+0x14>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8lcd_initv+0x1a>
     13c:	00 00       	nop
	
	_delay_ms(15);

	DPORT |= (1 << D4);
     13e:	dd 9a       	sbi	0x1b, 5	; 27
	DPORT |= (1 << D5);
     140:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     142:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     144:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     146:	de 9a       	sbi	0x1b, 6	; 27
     148:	de 98       	cbi	0x1b, 6	; 27
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	9e e4       	ldi	r25, 0x4E	; 78
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <_Z8lcd_initv+0x2c>
     152:	00 c0       	rjmp	.+0      	; 0x154 <_Z8lcd_initv+0x32>
     154:	00 00       	nop
	_delay_ms(5);
	LCD_STROBE();
     156:	de 9a       	sbi	0x1b, 6	; 27
     158:	de 98       	cbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	8f e1       	ldi	r24, 0x1F	; 31
     15c:	93 e0       	ldi	r25, 0x03	; 3
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <_Z8lcd_initv+0x3c>
     162:	00 c0       	rjmp	.+0      	; 0x164 <_Z8lcd_initv+0x42>
     164:	00 00       	nop
	_delay_us(200);
	LCD_STROBE();
     166:	de 9a       	sbi	0x1b, 6	; 27
     168:	de 98       	cbi	0x1b, 6	; 27
     16a:	8f e1       	ldi	r24, 0x1F	; 31
     16c:	93 e0       	ldi	r25, 0x03	; 3
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x4c>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_Z8lcd_initv+0x52>
     174:	00 00       	nop
	_delay_us(200);
	
	
	DPORT &= ~(1 << D4);
     176:	dd 98       	cbi	0x1b, 5	; 27
	DPORT |=  (1 << D5);
     178:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     17a:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     17c:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     17e:	de 9a       	sbi	0x1b, 6	; 27
     180:	de 98       	cbi	0x1b, 6	; 27

	lcd_write(0x28);
     182:	88 e2       	ldi	r24, 0x28	; 40
     184:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_write(0b00001100);
     188:	8c e0       	ldi	r24, 0x0C	; 12
     18a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_clear();
     18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_write(0x6);
     192:	86 e0       	ldi	r24, 0x06	; 6
     194:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     198:	08 95       	ret

0000019a <_Z8lcd_putsPKc>:
}

void lcd_puts(const char * s)
{
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
	CPORT|= (1 << RS);
     1a0:	df 9a       	sbi	0x1b, 7	; 27
	while(*s)
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <_Z8lcd_putsPKc+0x1a>
     1a8:	21 96       	adiw	r28, 0x01	; 1
	lcd_write(*s++);
     1aa:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
}

void lcd_puts(const char * s)
{
	CPORT|= (1 << RS);
	while(*s)
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <_Z8lcd_putsPKc+0x10>
	lcd_write(*s++);
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <_Z8lcd_putcc>:

void lcd_putc(char x)
{
	CPORT|= (1 << RS);
     1ba:	df 9a       	sbi	0x1b, 7	; 27
	lcd_write(x);
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     1c0:	08 95       	ret

000001c2 <_Z7lcd_numi>:
}

void lcd_num(int in)
{
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	c4 56       	subi	r28, 0x64	; 100
     1d4:	d1 09       	sbc	r29, r1
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	bc 01       	movw	r22, r24
     1e2:	ce 01       	movw	r24, r28
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	7c 01       	movw	r14, r24
     1e8:	fc 01       	movw	r30, r24
	int c;
	char temp[100];
	int index=0;
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	10 e0       	ldi	r17, 0x00	; 0
	do
	{
		c=in%10;
     1ee:	2a e0       	ldi	r18, 0x0A	; 10
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_Z7lcd_numi+0x34>
		in=in/10;
		temp[index]=c+'0';
		index++;
     1f4:	8c 01       	movw	r16, r24
	char temp[100];
	int index=0;
	do
	{
		c=in%10;
		in=in/10;
     1f6:	cb 01       	movw	r24, r22
     1f8:	b9 01       	movw	r22, r18
     1fa:	0e 94 aa 09 	call	0x1354	; 0x1354 <__divmodhi4>
		temp[index]=c+'0';
     1fe:	90 e3       	ldi	r25, 0x30	; 48
     200:	98 0f       	add	r25, r24
     202:	91 93       	st	Z+, r25
		index++;
     204:	c8 01       	movw	r24, r16
     206:	01 96       	adiw	r24, 0x01	; 1
void lcd_num(int in)
{
	int c;
	char temp[100];
	int index=0;
	do
     208:	61 15       	cp	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	99 f7       	brne	.-26     	; 0x1f4 <_Z7lcd_numi+0x32>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     20e:	11 23       	and	r17, r17
     210:	64 f0       	brlt	.+24     	; 0x22a <_Z7lcd_numi+0x68>
     212:	0c 0f       	add	r16, r28
     214:	1d 1f       	adc	r17, r29
     216:	0e 5f       	subi	r16, 0xFE	; 254
     218:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_putc(temp[i]);
     21a:	f8 01       	movw	r30, r16
     21c:	82 91       	ld	r24, -Z
     21e:	8f 01       	movw	r16, r30
     220:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z8lcd_putcc>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     224:	0e 15       	cp	r16, r14
     226:	1f 05       	cpc	r17, r15
     228:	c1 f7       	brne	.-16     	; 0x21a <_Z7lcd_numi+0x58>
	{
		lcd_putc(temp[i]);
	}
}
     22a:	cc 59       	subi	r28, 0x9C	; 156
     22c:	df 4f       	sbci	r29, 0xFF	; 255
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	08 95       	ret

00000246 <_Z13lcd_setCursorii>:
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
	}
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	96 1b       	sub	r25, r22
     24a:	69 2f       	mov	r22, r25
     24c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     250:	08 95       	ret

00000252 <_Z10uart0_getsPc>:
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	0f 93       	push	r16
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	c4 56       	subi	r28, 0x64	; 100
     268:	d1 09       	sbc	r29, r1
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	6c 01       	movw	r12, r24
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	7c 01       	movw	r14, r24
     27c:	00 e0       	ldi	r16, 0x00	; 0
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <_Z10uart0_getsPc+0x32>
     282:	89 01       	movw	r16, r18
     284:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z15uart0_availablev>
     288:	89 2b       	or	r24, r25
     28a:	e1 f3       	breq	.-8      	; 0x284 <_Z10uart0_getsPc+0x32>
     28c:	0e 94 33 09 	call	0x1266	; 0x1266 <_Z10uart0_getcv>
     290:	f7 01       	movw	r30, r14
     292:	81 93       	st	Z+, r24
     294:	7f 01       	movw	r14, r30
     296:	98 01       	movw	r18, r16
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255
     29c:	80 32       	cpi	r24, 0x20	; 32
     29e:	89 f7       	brne	.-30     	; 0x282 <_Z10uart0_getsPc+0x30>
     2a0:	e1 e0       	ldi	r30, 0x01	; 1
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e0 0f       	add	r30, r16
     2aa:	f1 1f       	adc	r31, r17
     2ac:	10 82       	st	Z, r1
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	c6 01       	movw	r24, r12
     2b6:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <strcpy>
     2ba:	cc 59       	subi	r28, 0x9C	; 156
     2bc:	df 4f       	sbci	r29, 0xFF	; 255
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	ef 90       	pop	r14
     2d4:	df 90       	pop	r13
     2d6:	cf 90       	pop	r12
     2d8:	08 95       	ret

000002da <_Z12uart0_getintv>:
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	00 d0       	rcall	.+0      	; 0x2e4 <_Z12uart0_getintv+0xa>
     2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_Z12uart0_getintv+0xc>
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	8e 01       	movw	r16, r28
     2ee:	0f 5f       	subi	r16, 0xFF	; 255
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	c8 01       	movw	r24, r16
     2f4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
     2f8:	d8 01       	movw	r26, r16
     2fa:	0d 90       	ld	r0, X+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <_Z12uart0_getintv+0x20>
     300:	f8 01       	movw	r30, r16
     302:	ad 01       	movw	r20, r26
     304:	41 50       	subi	r20, 0x01	; 1
     306:	51 09       	sbc	r21, r1
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	11 c0       	rjmp	.+34     	; 0x330 <_Z12uart0_getintv+0x56>
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	21 91       	ld	r18, Z+
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	20 53       	subi	r18, 0x30	; 48
     32a:	31 09       	sbc	r19, r1
     32c:	82 0f       	add	r24, r18
     32e:	93 1f       	adc	r25, r19
     330:	e4 17       	cp	r30, r20
     332:	f5 07       	cpc	r31, r21
     334:	61 f7       	brne	.-40     	; 0x30e <_Z12uart0_getintv+0x34>
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <_Z12wait_messagev>:

    void wait_message()
    {
        lcd_clear();
     34a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
        lcd_puts("Please wait");
     34e:	8e e6       	ldi	r24, 0x6E	; 110
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     356:	08 95       	ret

00000358 <_Z5inputv>:
		return ans;
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
     358:	80 b3       	in	r24, 0x10	; 16
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
       if (digitalRead(s_zero))
     35a:	28 2f       	mov	r18, r24
     35c:	21 70       	andi	r18, 0x01	; 1
     35e:	30 e0       	ldi	r19, 0x00	; 0
        lcd_clear();
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
     360:	c9 01       	movw	r24, r18
       if (digitalRead(s_zero))
         a+=1;
       if (digitalRead(s_one))
     362:	81 99       	sbic	0x10, 1	; 16
         a+=10;
     364:	0a 96       	adiw	r24, 0x0a	; 10
       if (digitalRead(s_two))
     366:	82 9b       	sbis	0x10, 2	; 16
     368:	02 c0       	rjmp	.+4      	; 0x36e <_Z5inputv+0x16>
         a+=100;
     36a:	8c 59       	subi	r24, 0x9C	; 156
     36c:	9f 4f       	sbci	r25, 0xFF	; 255
       return(a);
   }
     36e:	08 95       	ret

00000370 <_Z15main_menu_printi>:

   void main_menu_print(int first_visit)
   {
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	ec 01       	movw	r28, r24
     lcd_clear();
     376:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     37a:	62 e0       	ldi	r22, 0x02	; 2
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

   void main_menu_print(int first_visit)
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     382:	8f eb       	ldi	r24, 0xBF	; 191
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");
     392:	8a e7       	ldi	r24, 0x7A	; 122
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");
     3a2:	8c e7       	ldi	r24, 0x7C	; 124
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3aa:	62 e0       	ldi	r22, 0x02	; 2
     3ac:	82 e0       	ldi	r24, 0x02	; 2
     3ae:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");

      lcd_setCursor(2, 0);
      if (first_visit==1)
     3b2:	21 97       	sbiw	r28, 0x01	; 1
     3b4:	29 f4       	brne	.+10     	; 0x3c0 <_Z15main_menu_printi+0x50>
      lcd_puts("Change Food");
     3b6:	8a e8       	ldi	r24, 0x8A	; 138
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <_Z15main_menu_printi+0x58>
      else
      lcd_puts("Select Food");
     3c0:	86 e9       	ldi	r24, 0x96	; 150
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
   }
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <_Z17clear_second_linev>:
                lcd_num(food[selected_pk].num);

     }

     void clear_second_line()
     {
     3ce:	cf 93       	push	r28
     3d0:	c0 e0       	ldi	r28, 0x00	; 0
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	8c 2f       	mov	r24, r28
     3d6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
     3da:	8f eb       	ldi	r24, 0xBF	; 191
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3e2:	cf 5f       	subi	r28, 0xFF	; 255

     }

     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
     3e4:	c0 31       	cpi	r28, 0x10	; 16
     3e6:	a9 f7       	brne	.-22     	; 0x3d2 <_Z17clear_second_linev+0x4>
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
       }
     }
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <_Z17select_food_printi>:
      else
      lcd_puts("Select Food");
   }

   void select_food_print(int selected_pk)
     {
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	8c 01       	movw	r16, r24
               clear_second_line();
     3f6:	0e 94 e7 01 	call	0x3ce	; 0x3ce <_Z17clear_second_linev>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
               clear_second_line();

                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);
     402:	8c e1       	ldi	r24, 0x1C	; 28
     404:	80 9f       	mul	r24, r16
     406:	e0 01       	movw	r28, r0
     408:	81 9f       	mul	r24, r17
     40a:	d0 0d       	add	r29, r0
     40c:	11 24       	eor	r1, r1
     40e:	ce 01       	movw	r24, r28
     410:	88 5e       	subi	r24, 0xE8	; 232
     412:	9e 4f       	sbci	r25, 0xFE	; 254
     414:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	88 e0       	ldi	r24, 0x08	; 8
     41c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);
     420:	ca 5e       	subi	r28, 0xEA	; 234
     422:	de 4f       	sbci	r29, 0xFE	; 254
     424:	8e 89       	ldd	r24, Y+22	; 0x16
     426:	9f 89       	ldd	r25, Y+23	; 0x17
     428:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	8e e0       	ldi	r24, 0x0E	; 14
     430:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);

                 lcd_setCursor(14,1);
                lcd_num(food[selected_pk].num);
     434:	88 8d       	ldd	r24, Y+24	; 0x18
     436:	99 8d       	ldd	r25, Y+25	; 0x19
     438:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

     }
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	08 95       	ret

00000446 <_Z13cannot_cancelv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     446:	2f ef       	ldi	r18, 0xFF	; 255
     448:	80 e7       	ldi	r24, 0x70	; 112
     44a:	92 e0       	ldi	r25, 0x02	; 2
     44c:	21 50       	subi	r18, 0x01	; 1
     44e:	80 40       	sbci	r24, 0x00	; 0
     450:	90 40       	sbci	r25, 0x00	; 0
     452:	e1 f7       	brne	.-8      	; 0x44c <_Z13cannot_cancelv+0x6>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_Z13cannot_cancelv+0x10>
     456:	00 00       	nop
     }

     void cannot_cancel()
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
     458:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
         lcd_puts(" Cannot Cancel ");
     45c:	82 ea       	ldi	r24, 0xA2	; 162
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	86 e0       	ldi	r24, 0x06	; 6
     468:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
		  _delay_ms(DELAY_TIME);
          lcd_clear();
         lcd_puts(" Cannot Cancel ");
         lcd_setCursor(6,1);
         lcd_puts(">Ok");
     46c:	82 eb       	ldi	r24, 0xB2	; 178
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
         while(1)
           {
             int in=input();
     474:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
             if (in == ok)
     478:	20 91 62 00 	lds	r18, 0x0062
     47c:	30 91 63 00 	lds	r19, 0x0063
     480:	82 17       	cp	r24, r18
     482:	93 07       	cpc	r25, r19
     484:	b9 f7       	brne	.-18     	; 0x474 <_Z13cannot_cancelv+0x2e>
				//	_delay_ms(DELAY_TIME);
                 //mainmenu();
                 return ;
                }
           }
     }
     486:	08 95       	ret

00000488 <_Z16display_message1PKc>:

     //confirmation messages
     int display_message1(char const *s)
       {
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	ec 01       	movw	r28, r24
           lcd_clear();
     496:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
           lcd_puts(s);
     49a:	ce 01       	movw	r24, r28
     49c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	82 e0       	ldi	r24, 0x02	; 2
     4a4:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     int display_message1(char const *s)
       {
           lcd_clear();
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");
     4a8:	86 eb       	ldi	r24, 0xB6	; 182
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4b0:	61 e0       	ldi	r22, 0x01	; 1
     4b2:	8c e0       	ldi	r24, 0x0C	; 12
     4b4:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");

           lcd_setCursor(12,1);
           lcd_puts("No");
     4b8:	8b eb       	ldi	r24, 0xBB	; 187
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     4c0:	2f ef       	ldi	r18, 0xFF	; 255
     4c2:	85 ea       	ldi	r24, 0xA5	; 165
     4c4:	9e e0       	ldi	r25, 0x0E	; 14
     4c6:	21 50       	subi	r18, 0x01	; 1
     4c8:	80 40       	sbci	r24, 0x00	; 0
     4ca:	90 40       	sbci	r25, 0x00	; 0
     4cc:	e1 f7       	brne	.-8      	; 0x4c6 <_Z16display_message1PKc+0x3e>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <_Z16display_message1PKc+0x48>
     4d0:	00 00       	nop
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
     4d2:	c1 e0       	ldi	r28, 0x01	; 1
     4d4:	d0 e0       	ldi	r29, 0x00	; 0
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
                         state=1;
     4d6:	01 e0       	ldi	r16, 0x01	; 1
     4d8:	10 e0       	ldi	r17, 0x00	; 0
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
                         state=0;
     4da:	e1 2c       	mov	r14, r1
     4dc:	f1 2c       	mov	r15, r1
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
           while(1)
              {
                    int in=input();
     4de:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
     4e2:	c1 30       	cpi	r28, 0x01	; 1
     4e4:	d1 05       	cpc	r29, r1
     4e6:	09 f5       	brne	.+66     	; 0x52a <_Z16display_message1PKc+0xa2>
     4e8:	20 91 66 00 	lds	r18, 0x0066
     4ec:	30 91 67 00 	lds	r19, 0x0067
     4f0:	82 17       	cp	r24, r18
     4f2:	93 07       	cpc	r25, r19
     4f4:	39 f0       	breq	.+14     	; 0x504 <_Z16display_message1PKc+0x7c>
     4f6:	20 91 68 00 	lds	r18, 0x0068
     4fa:	30 91 69 00 	lds	r19, 0x0069
     4fe:	82 17       	cp	r24, r18
     500:	93 07       	cpc	r25, r19
     502:	b1 f5       	brne	.+108    	; 0x570 <_Z16display_message1PKc+0xe8>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     504:	61 e0       	ldi	r22, 0x01	; 1
     506:	82 e0       	ldi	r24, 0x02	; 2
     508:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                    int in=input();
                  //  lcd_puts (in);
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
     50c:	8f eb       	ldi	r24, 0xBF	; 191
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	8b e0       	ldi	r24, 0x0B	; 11
     518:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
     51c:	8a e7       	ldi	r24, 0x7A	; 122
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=0;
     524:	ce 2d       	mov	r28, r14
     526:	df 2d       	mov	r29, r15
     528:	2a c0       	rjmp	.+84     	; 0x57e <_Z16display_message1PKc+0xf6>
                      }
                   else if (state==0 && (in==left ||in==right))
     52a:	20 97       	sbiw	r28, 0x00	; 0
     52c:	09 f5       	brne	.+66     	; 0x570 <_Z16display_message1PKc+0xe8>
     52e:	20 91 66 00 	lds	r18, 0x0066
     532:	30 91 67 00 	lds	r19, 0x0067
     536:	82 17       	cp	r24, r18
     538:	93 07       	cpc	r25, r19
     53a:	39 f0       	breq	.+14     	; 0x54a <_Z16display_message1PKc+0xc2>
     53c:	20 91 68 00 	lds	r18, 0x0068
     540:	30 91 69 00 	lds	r19, 0x0069
     544:	82 17       	cp	r24, r18
     546:	93 07       	cpc	r25, r19
     548:	99 f4       	brne	.+38     	; 0x570 <_Z16display_message1PKc+0xe8>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     54a:	61 e0       	ldi	r22, 0x01	; 1
     54c:	8b e0       	ldi	r24, 0x0B	; 11
     54e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                         state=0;
                      }
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
     552:	8f eb       	ldi	r24, 0xBF	; 191
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     55a:	61 e0       	ldi	r22, 0x01	; 1
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
     562:	8a e7       	ldi	r24, 0x7A	; 122
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=1;
     56a:	c0 2f       	mov	r28, r16
     56c:	d1 2f       	mov	r29, r17
     56e:	07 c0       	rjmp	.+14     	; 0x57e <_Z16display_message1PKc+0xf6>
                      }
                  else if (in==ok)
     570:	20 91 62 00 	lds	r18, 0x0062
     574:	30 91 63 00 	lds	r19, 0x0063
     578:	82 17       	cp	r24, r18
     57a:	93 07       	cpc	r25, r19
     57c:	51 f0       	breq	.+20     	; 0x592 <_Z16display_message1PKc+0x10a>
     57e:	8f ef       	ldi	r24, 0xFF	; 255
     580:	95 ea       	ldi	r25, 0xA5	; 165
     582:	2e e0       	ldi	r18, 0x0E	; 14
     584:	81 50       	subi	r24, 0x01	; 1
     586:	90 40       	sbci	r25, 0x00	; 0
     588:	20 40       	sbci	r18, 0x00	; 0
     58a:	e1 f7       	brne	.-8      	; 0x584 <_Z16display_message1PKc+0xfc>
     58c:	00 c0       	rjmp	.+0      	; 0x58e <_Z16display_message1PKc+0x106>
     58e:	00 00       	nop
     590:	a6 cf       	rjmp	.-180    	; 0x4de <_Z16display_message1PKc+0x56>
                   return state;

                   _delay_ms(DELAY_TIME_STRAIGHT_START);
               }

       }
     592:	ce 01       	movw	r24, r28
     594:	df 91       	pop	r29
     596:	cf 91       	pop	r28
     598:	1f 91       	pop	r17
     59a:	0f 91       	pop	r16
     59c:	ff 90       	pop	r15
     59e:	ef 90       	pop	r14
     5a0:	08 95       	ret

000005a2 <_Z8get_infov>:




void get_info()
{
     5a2:	0f 93       	push	r16
     5a4:	1f 93       	push	r17
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
	uart0_flush();
     5aa:	0e 94 a5 09 	call	0x134a	; 0x134a <_Z11uart0_flushv>
  uart0_putc('1');
     5ae:	81 e3       	ldi	r24, 0x31	; 49
     5b0:	0e 94 4e 09 	call	0x129c	; 0x129c <_Z10uart0_putch>
  while (!(uart0_available()) ) {}
     5b4:	0e 94 98 09 	call	0x1330	; 0x1330 <_Z15uart0_availablev>
     5b8:	89 2b       	or	r24, r25
     5ba:	e1 f3       	breq	.-8      	; 0x5b4 <_Z8get_infov+0x12>
  num_of_food=uart0_getint();
     5bc:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5c0:	90 93 5f 04 	sts	0x045F, r25
     5c4:	80 93 5e 04 	sts	0x045E, r24
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     5c8:	18 16       	cp	r1, r24
     5ca:	19 06       	cpc	r1, r25
     5cc:	1c f5       	brge	.+70     	; 0x614 <_Z8get_infov+0x72>
     5ce:	c8 e1       	ldi	r28, 0x18	; 24
     5d0:	d1 e0       	ldi	r29, 0x01	; 1
     5d2:	00 e0       	ldi	r16, 0x00	; 0
     5d4:	10 e0       	ldi	r17, 0x00	; 0
{
    //  Serial.puts("Start");
      food[i].id=uart0_getint();
     5d6:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5da:	fe 01       	movw	r30, r28
     5dc:	32 97       	sbiw	r30, 0x02	; 2
     5de:	91 83       	std	Z+1, r25	; 0x01
     5e0:	80 83       	st	Z, r24
      uart0_gets(food[i].name);
     5e2:	ce 01       	movw	r24, r28
     5e4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
      food[i].price=uart0_getint();
     5e8:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5ec:	9d 8b       	std	Y+21, r25	; 0x15
     5ee:	8c 8b       	std	Y+20, r24	; 0x14
      food[i].num=uart0_getint();
     5f0:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5f4:	9f 8b       	std	Y+23, r25	; 0x17
     5f6:	8e 8b       	std	Y+22, r24	; 0x16
      food[i].p=uart0_getint();
     5f8:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     5fc:	99 8f       	std	Y+25, r25	; 0x19
     5fe:	88 8f       	std	Y+24, r24	; 0x18
  while (!(uart0_available()) ) {}
  num_of_food=uart0_getint();
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     600:	0f 5f       	subi	r16, 0xFF	; 255
     602:	1f 4f       	sbci	r17, 0xFF	; 255
     604:	6c 96       	adiw	r28, 0x1c	; 28
     606:	80 91 5e 04 	lds	r24, 0x045E
     60a:	90 91 5f 04 	lds	r25, 0x045F
     60e:	08 17       	cp	r16, r24
     610:	19 07       	cpc	r17, r25
     612:	0c f3       	brlt	.-62     	; 0x5d6 <_Z8get_infov+0x34>
  }

  // Serial.putsln("Done");


}
     614:	df 91       	pop	r29
     616:	cf 91       	pop	r28
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	08 95       	ret

0000061e <_Z9send_infov>:

      void send_info()
        {
     61e:	0f 93       	push	r16
     620:	1f 93       	push	r17
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
          for (int i=0;i<num_of_food;i++)
     626:	80 91 5e 04 	lds	r24, 0x045E
     62a:	90 91 5f 04 	lds	r25, 0x045F
     62e:	18 16       	cp	r1, r24
     630:	19 06       	cpc	r1, r25
     632:	04 f5       	brge	.+64     	; 0x674 <_Z9send_infov+0x56>
     634:	c6 e1       	ldi	r28, 0x16	; 22
     636:	d1 e0       	ldi	r29, 0x01	; 1
     638:	00 e0       	ldi	r16, 0x00	; 0
     63a:	10 e0       	ldi	r17, 0x00	; 0
              {
                uart0_puts("2 ");
     63c:	8e eb       	ldi	r24, 0xBE	; 190
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	0e 94 89 09 	call	0x1312	; 0x1312 <_Z10uart0_putsPKc>
				uart0_putint(food[i].id);
     644:	88 81       	ld	r24, Y
     646:	99 81       	ldd	r25, Y+1	; 0x01
     648:	0e 94 5f 09 	call	0x12be	; 0x12be <_Z12uart0_putinti>
                uart0_putc(' ');
     64c:	80 e2       	ldi	r24, 0x20	; 32
     64e:	0e 94 4e 09 	call	0x129c	; 0x129c <_Z10uart0_putch>
                uart0_putint(food[i].num);
     652:	88 8d       	ldd	r24, Y+24	; 0x18
     654:	99 8d       	ldd	r25, Y+25	; 0x19
     656:	0e 94 5f 09 	call	0x12be	; 0x12be <_Z12uart0_putinti>
                uart0_putc(' ');
     65a:	80 e2       	ldi	r24, 0x20	; 32
     65c:	0e 94 4e 09 	call	0x129c	; 0x129c <_Z10uart0_putch>

}

      void send_info()
        {
          for (int i=0;i<num_of_food;i++)
     660:	0f 5f       	subi	r16, 0xFF	; 255
     662:	1f 4f       	sbci	r17, 0xFF	; 255
     664:	6c 96       	adiw	r28, 0x1c	; 28
     666:	80 91 5e 04 	lds	r24, 0x045E
     66a:	90 91 5f 04 	lds	r25, 0x045F
     66e:	08 17       	cp	r16, r24
     670:	19 07       	cpc	r17, r25
     672:	24 f3       	brlt	.-56     	; 0x63c <_Z9send_infov+0x1e>
                uart0_putc(' ');
              }



        }
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	08 95       	ret

0000067e <_Z18database_init_testv>:
     67e:	cf 93       	push	r28
     680:	df 93       	push	r29
     682:	cd b7       	in	r28, 0x3d	; 61
     684:	de b7       	in	r29, 0x3e	; 62
     686:	c4 55       	subi	r28, 0x54	; 84
     688:	d1 09       	sbc	r29, r1
     68a:	0f b6       	in	r0, 0x3f	; 63
     68c:	f8 94       	cli
     68e:	de bf       	out	0x3e, r29	; 62
     690:	0f be       	out	0x3f, r0	; 63
     692:	cd bf       	out	0x3d, r28	; 61
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	9a af       	std	Y+58, r25	; 0x3a
     69a:	89 af       	std	Y+57, r24	; 0x39
     69c:	85 e0       	ldi	r24, 0x05	; 5
     69e:	e1 ec       	ldi	r30, 0xC1	; 193
     6a0:	f0 e0       	ldi	r31, 0x00	; 0
     6a2:	de 01       	movw	r26, r28
     6a4:	db 96       	adiw	r26, 0x3b	; 59
     6a6:	01 90       	ld	r0, Z+
     6a8:	0d 92       	st	X+, r0
     6aa:	8a 95       	dec	r24
     6ac:	e1 f7       	brne	.-8      	; 0x6a6 <_Z18database_init_testv+0x28>
     6ae:	84 e6       	ldi	r24, 0x64	; 100
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	61 96       	adiw	r28, 0x11	; 17
     6b4:	9f af       	std	Y+63, r25	; 0x3f
     6b6:	8e af       	std	Y+62, r24	; 0x3e
     6b8:	61 97       	sbiw	r28, 0x11	; 17
     6ba:	63 96       	adiw	r28, 0x13	; 19
     6bc:	1f ae       	std	Y+63, r1	; 0x3f
     6be:	1e ae       	std	Y+62, r1	; 0x3e
     6c0:	63 97       	sbiw	r28, 0x13	; 19
     6c2:	65 96       	adiw	r28, 0x15	; 21
     6c4:	1f ae       	std	Y+63, r1	; 0x3f
     6c6:	1e ae       	std	Y+62, r1	; 0x3e
     6c8:	65 97       	sbiw	r28, 0x15	; 21
     6ca:	8c e1       	ldi	r24, 0x1C	; 28
     6cc:	fe 01       	movw	r30, r28
     6ce:	f9 96       	adiw	r30, 0x39	; 57
     6d0:	aa eb       	ldi	r26, 0xBA	; 186
     6d2:	b2 e0       	ldi	r27, 0x02	; 2
     6d4:	01 90       	ld	r0, Z+
     6d6:	0d 92       	st	X+, r0
     6d8:	8a 95       	dec	r24
     6da:	e1 f7       	brne	.-8      	; 0x6d4 <_Z18database_init_testv+0x56>
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	9e 8f       	std	Y+30, r25	; 0x1e
     6e2:	8d 8f       	std	Y+29, r24	; 0x1d
     6e4:	85 e0       	ldi	r24, 0x05	; 5
     6e6:	e6 ec       	ldi	r30, 0xC6	; 198
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	de 01       	movw	r26, r28
     6ec:	5f 96       	adiw	r26, 0x1f	; 31
     6ee:	01 90       	ld	r0, Z+
     6f0:	0d 92       	st	X+, r0
     6f2:	8a 95       	dec	r24
     6f4:	e1 f7       	brne	.-8      	; 0x6ee <_Z18database_init_testv+0x70>
     6f6:	88 ec       	ldi	r24, 0xC8	; 200
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	9c ab       	std	Y+52, r25	; 0x34
     6fc:	8b ab       	std	Y+51, r24	; 0x33
     6fe:	1e aa       	std	Y+54, r1	; 0x36
     700:	1d aa       	std	Y+53, r1	; 0x35
     702:	18 ae       	std	Y+56, r1	; 0x38
     704:	1f aa       	std	Y+55, r1	; 0x37
     706:	8c e1       	ldi	r24, 0x1C	; 28
     708:	fe 01       	movw	r30, r28
     70a:	7d 96       	adiw	r30, 0x1d	; 29
     70c:	a6 ed       	ldi	r26, 0xD6	; 214
     70e:	b2 e0       	ldi	r27, 0x02	; 2
     710:	01 90       	ld	r0, Z+
     712:	0d 92       	st	X+, r0
     714:	8a 95       	dec	r24
     716:	e1 f7       	brne	.-8      	; 0x710 <_Z18database_init_testv+0x92>
     718:	83 e0       	ldi	r24, 0x03	; 3
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	9a 83       	std	Y+2, r25	; 0x02
     71e:	89 83       	std	Y+1, r24	; 0x01
     720:	85 e0       	ldi	r24, 0x05	; 5
     722:	e5 e8       	ldi	r30, 0x85	; 133
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	de 01       	movw	r26, r28
     728:	13 96       	adiw	r26, 0x03	; 3
     72a:	01 90       	ld	r0, Z+
     72c:	0d 92       	st	X+, r0
     72e:	8a 95       	dec	r24
     730:	e1 f7       	brne	.-8      	; 0x72a <_Z18database_init_testv+0xac>
     732:	8c e2       	ldi	r24, 0x2C	; 44
     734:	91 e0       	ldi	r25, 0x01	; 1
     736:	98 8f       	std	Y+24, r25	; 0x18
     738:	8f 8b       	std	Y+23, r24	; 0x17
     73a:	1a 8e       	std	Y+26, r1	; 0x1a
     73c:	19 8e       	std	Y+25, r1	; 0x19
     73e:	1c 8e       	std	Y+28, r1	; 0x1c
     740:	1b 8e       	std	Y+27, r1	; 0x1b
     742:	8c e1       	ldi	r24, 0x1C	; 28
     744:	fe 01       	movw	r30, r28
     746:	31 96       	adiw	r30, 0x01	; 1
     748:	a2 ef       	ldi	r26, 0xF2	; 242
     74a:	b2 e0       	ldi	r27, 0x02	; 2
     74c:	01 90       	ld	r0, Z+
     74e:	0d 92       	st	X+, r0
     750:	8a 95       	dec	r24
     752:	e1 f7       	brne	.-8      	; 0x74c <_Z18database_init_testv+0xce>
     754:	cc 5a       	subi	r28, 0xAC	; 172
     756:	df 4f       	sbci	r29, 0xFF	; 255
     758:	0f b6       	in	r0, 0x3f	; 63
     75a:	f8 94       	cli
     75c:	de bf       	out	0x3e, r29	; 62
     75e:	0f be       	out	0x3f, r0	; 63
     760:	cd bf       	out	0x3d, r28	; 61
     762:	df 91       	pop	r29
     764:	cf 91       	pop	r28
     766:	08 95       	ret

00000768 <_Z13get_info_testv>:
     768:	8c e1       	ldi	r24, 0x1C	; 28
     76a:	ea eb       	ldi	r30, 0xBA	; 186
     76c:	f2 e0       	ldi	r31, 0x02	; 2
     76e:	a6 e1       	ldi	r26, 0x16	; 22
     770:	b1 e0       	ldi	r27, 0x01	; 1
     772:	01 90       	ld	r0, Z+
     774:	0d 92       	st	X+, r0
     776:	8a 95       	dec	r24
     778:	e1 f7       	brne	.-8      	; 0x772 <_Z13get_info_testv+0xa>
     77a:	8c e1       	ldi	r24, 0x1C	; 28
     77c:	e6 ed       	ldi	r30, 0xD6	; 214
     77e:	f2 e0       	ldi	r31, 0x02	; 2
     780:	a2 e3       	ldi	r26, 0x32	; 50
     782:	b1 e0       	ldi	r27, 0x01	; 1
     784:	01 90       	ld	r0, Z+
     786:	0d 92       	st	X+, r0
     788:	8a 95       	dec	r24
     78a:	e1 f7       	brne	.-8      	; 0x784 <_Z13get_info_testv+0x1c>
     78c:	8c e1       	ldi	r24, 0x1C	; 28
     78e:	e2 ef       	ldi	r30, 0xF2	; 242
     790:	f2 e0       	ldi	r31, 0x02	; 2
     792:	ae e4       	ldi	r26, 0x4E	; 78
     794:	b1 e0       	ldi	r27, 0x01	; 1
     796:	01 90       	ld	r0, Z+
     798:	0d 92       	st	X+, r0
     79a:	8a 95       	dec	r24
     79c:	e1 f7       	brne	.-8      	; 0x796 <_Z13get_info_testv+0x2e>
     79e:	83 e0       	ldi	r24, 0x03	; 3
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	90 93 5f 04 	sts	0x045F, r25
     7a6:	80 93 5e 04 	sts	0x045E, r24
     7aa:	08 95       	ret

000007ac <_Z14send_info_testv>:
     7ac:	8c e1       	ldi	r24, 0x1C	; 28
     7ae:	e6 e1       	ldi	r30, 0x16	; 22
     7b0:	f1 e0       	ldi	r31, 0x01	; 1
     7b2:	aa eb       	ldi	r26, 0xBA	; 186
     7b4:	b2 e0       	ldi	r27, 0x02	; 2
     7b6:	01 90       	ld	r0, Z+
     7b8:	0d 92       	st	X+, r0
     7ba:	8a 95       	dec	r24
     7bc:	e1 f7       	brne	.-8      	; 0x7b6 <_Z14send_info_testv+0xa>
     7be:	8c e1       	ldi	r24, 0x1C	; 28
     7c0:	e2 e3       	ldi	r30, 0x32	; 50
     7c2:	f1 e0       	ldi	r31, 0x01	; 1
     7c4:	a6 ed       	ldi	r26, 0xD6	; 214
     7c6:	b2 e0       	ldi	r27, 0x02	; 2
     7c8:	01 90       	ld	r0, Z+
     7ca:	0d 92       	st	X+, r0
     7cc:	8a 95       	dec	r24
     7ce:	e1 f7       	brne	.-8      	; 0x7c8 <_Z14send_info_testv+0x1c>
     7d0:	8c e1       	ldi	r24, 0x1C	; 28
     7d2:	ee e4       	ldi	r30, 0x4E	; 78
     7d4:	f1 e0       	ldi	r31, 0x01	; 1
     7d6:	a2 ef       	ldi	r26, 0xF2	; 242
     7d8:	b2 e0       	ldi	r27, 0x02	; 2
     7da:	01 90       	ld	r0, Z+
     7dc:	0d 92       	st	X+, r0
     7de:	8a 95       	dec	r24
     7e0:	e1 f7       	brne	.-8      	; 0x7da <_Z14send_info_testv+0x2e>
     7e2:	08 95       	ret

000007e4 <_Z11select_foodv>:
     7e4:	0f 93       	push	r16
     7e6:	1f 93       	push	r17
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     7f0:	0e 94 b4 03 	call	0x768	; 0x768 <_Z13get_info_testv>
     7f4:	2f ef       	ldi	r18, 0xFF	; 255
     7f6:	85 ea       	ldi	r24, 0xA5	; 165
     7f8:	9e e0       	ldi	r25, 0x0E	; 14
     7fa:	21 50       	subi	r18, 0x01	; 1
     7fc:	80 40       	sbci	r24, 0x00	; 0
     7fe:	90 40       	sbci	r25, 0x00	; 0
     800:	e1 f7       	brne	.-8      	; 0x7fa <_Z11select_foodv+0x16>
     802:	00 c0       	rjmp	.+0      	; 0x804 <_Z11select_foodv+0x20>
     804:	00 00       	nop
     806:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     80a:	85 e8       	ldi	r24, 0x85	; 133
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     812:	60 e0       	ldi	r22, 0x00	; 0
     814:	70 e0       	ldi	r23, 0x00	; 0
     816:	88 e0       	ldi	r24, 0x08	; 8
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     81e:	8b ec       	ldi	r24, 0xCB	; 203
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     826:	60 e0       	ldi	r22, 0x00	; 0
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	8e e0       	ldi	r24, 0x0E	; 14
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     832:	8b eb       	ldi	r24, 0xBB	; 187
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     83a:	61 e0       	ldi	r22, 0x01	; 1
     83c:	70 e0       	ldi	r23, 0x00	; 0
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     846:	88 e1       	ldi	r24, 0x18	; 24
     848:	91 e0       	ldi	r25, 0x01	; 1
     84a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     84e:	61 e0       	ldi	r22, 0x01	; 1
     850:	70 e0       	ldi	r23, 0x00	; 0
     852:	88 e0       	ldi	r24, 0x08	; 8
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     85a:	c6 e1       	ldi	r28, 0x16	; 22
     85c:	d1 e0       	ldi	r29, 0x01	; 1
     85e:	8e 89       	ldd	r24, Y+22	; 0x16
     860:	9f 89       	ldd	r25, Y+23	; 0x17
     862:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     866:	61 e0       	ldi	r22, 0x01	; 1
     868:	70 e0       	ldi	r23, 0x00	; 0
     86a:	8e e0       	ldi	r24, 0x0E	; 14
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     872:	88 8d       	ldd	r24, Y+24	; 0x18
     874:	99 8d       	ldd	r25, Y+25	; 0x19
     876:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     87a:	00 e0       	ldi	r16, 0x00	; 0
     87c:	10 e0       	ldi	r17, 0x00	; 0
     87e:	cc e1       	ldi	r28, 0x1C	; 28
     880:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     884:	89 2b       	or	r24, r25
     886:	e1 f3       	breq	.-8      	; 0x880 <__stack+0x21>
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	86 e7       	ldi	r24, 0x76	; 118
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	21 50       	subi	r18, 0x01	; 1
     890:	80 40       	sbci	r24, 0x00	; 0
     892:	90 40       	sbci	r25, 0x00	; 0
     894:	e1 f7       	brne	.-8      	; 0x88e <__stack+0x2f>
     896:	00 c0       	rjmp	.+0      	; 0x898 <__stack+0x39>
     898:	00 00       	nop
     89a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     89e:	ea eb       	ldi	r30, 0xBA	; 186
     8a0:	f2 e0       	ldi	r31, 0x02	; 2
     8a2:	a6 e1       	ldi	r26, 0x16	; 22
     8a4:	b1 e0       	ldi	r27, 0x01	; 1
     8a6:	8c 2f       	mov	r24, r28
     8a8:	01 90       	ld	r0, Z+
     8aa:	0d 92       	st	X+, r0
     8ac:	8a 95       	dec	r24
     8ae:	e1 f7       	brne	.-8      	; 0x8a8 <__stack+0x49>
     8b0:	e6 ed       	ldi	r30, 0xD6	; 214
     8b2:	f2 e0       	ldi	r31, 0x02	; 2
     8b4:	a2 e3       	ldi	r26, 0x32	; 50
     8b6:	b1 e0       	ldi	r27, 0x01	; 1
     8b8:	8c 2f       	mov	r24, r28
     8ba:	01 90       	ld	r0, Z+
     8bc:	0d 92       	st	X+, r0
     8be:	8a 95       	dec	r24
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <__stack+0x5b>
     8c2:	e2 ef       	ldi	r30, 0xF2	; 242
     8c4:	f2 e0       	ldi	r31, 0x02	; 2
     8c6:	ae e4       	ldi	r26, 0x4E	; 78
     8c8:	b1 e0       	ldi	r27, 0x01	; 1
     8ca:	8c 2f       	mov	r24, r28
     8cc:	01 90       	ld	r0, Z+
     8ce:	0d 92       	st	X+, r0
     8d0:	8a 95       	dec	r24
     8d2:	e1 f7       	brne	.-8      	; 0x8cc <__stack+0x6d>
     8d4:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     8d8:	20 91 6c 00 	lds	r18, 0x006C
     8dc:	30 91 6d 00 	lds	r19, 0x006D
     8e0:	82 17       	cp	r24, r18
     8e2:	93 07       	cpc	r25, r19
     8e4:	81 f4       	brne	.+32     	; 0x906 <__stack+0xa7>
     8e6:	01 15       	cp	r16, r1
     8e8:	11 05       	cpc	r17, r1
     8ea:	39 f4       	brne	.+14     	; 0x8fa <__stack+0x9b>
     8ec:	00 91 5e 04 	lds	r16, 0x045E
     8f0:	10 91 5f 04 	lds	r17, 0x045F
     8f4:	01 50       	subi	r16, 0x01	; 1
     8f6:	11 09       	sbc	r17, r1
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <__stack+0x9f>
     8fa:	01 50       	subi	r16, 0x01	; 1
     8fc:	11 09       	sbc	r17, r1
     8fe:	c8 01       	movw	r24, r16
     900:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     904:	de c0       	rjmp	.+444    	; 0xac2 <__stack+0x263>
     906:	20 91 6a 00 	lds	r18, 0x006A
     90a:	30 91 6b 00 	lds	r19, 0x006B
     90e:	82 17       	cp	r24, r18
     910:	93 07       	cpc	r25, r19
     912:	89 f4       	brne	.+34     	; 0x936 <__stack+0xd7>
     914:	80 91 5e 04 	lds	r24, 0x045E
     918:	90 91 5f 04 	lds	r25, 0x045F
     91c:	01 97       	sbiw	r24, 0x01	; 1
     91e:	08 17       	cp	r16, r24
     920:	19 07       	cpc	r17, r25
     922:	19 f0       	breq	.+6      	; 0x92a <__stack+0xcb>
     924:	0f 5f       	subi	r16, 0xFF	; 255
     926:	1f 4f       	sbci	r17, 0xFF	; 255
     928:	02 c0       	rjmp	.+4      	; 0x92e <__stack+0xcf>
     92a:	00 e0       	ldi	r16, 0x00	; 0
     92c:	10 e0       	ldi	r17, 0x00	; 0
     92e:	c8 01       	movw	r24, r16
     930:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     934:	c6 c0       	rjmp	.+396    	; 0xac2 <__stack+0x263>
     936:	20 91 66 00 	lds	r18, 0x0066
     93a:	30 91 67 00 	lds	r19, 0x0067
     93e:	82 17       	cp	r24, r18
     940:	93 07       	cpc	r25, r19
     942:	d1 f4       	brne	.+52     	; 0x978 <__stack+0x119>
     944:	c0 9f       	mul	r28, r16
     946:	f0 01       	movw	r30, r0
     948:	c1 9f       	mul	r28, r17
     94a:	f0 0d       	add	r31, r0
     94c:	11 24       	eor	r1, r1
     94e:	ea 5e       	subi	r30, 0xEA	; 234
     950:	fe 4f       	sbci	r31, 0xFE	; 254
     952:	80 8d       	ldd	r24, Z+24	; 0x18
     954:	91 8d       	ldd	r25, Z+25	; 0x19
     956:	00 97       	sbiw	r24, 0x00	; 0
     958:	09 f4       	brne	.+2      	; 0x95c <__stack+0xfd>
     95a:	b3 c0       	rjmp	.+358    	; 0xac2 <__stack+0x263>
     95c:	c0 9f       	mul	r28, r16
     95e:	f0 01       	movw	r30, r0
     960:	c1 9f       	mul	r28, r17
     962:	f0 0d       	add	r31, r0
     964:	11 24       	eor	r1, r1
     966:	ea 5e       	subi	r30, 0xEA	; 234
     968:	fe 4f       	sbci	r31, 0xFE	; 254
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	91 8f       	std	Z+25, r25	; 0x19
     96e:	80 8f       	std	Z+24, r24	; 0x18
     970:	c8 01       	movw	r24, r16
     972:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     976:	a5 c0       	rjmp	.+330    	; 0xac2 <__stack+0x263>
     978:	20 91 68 00 	lds	r18, 0x0068
     97c:	30 91 69 00 	lds	r19, 0x0069
     980:	82 17       	cp	r24, r18
     982:	93 07       	cpc	r25, r19
     984:	81 f4       	brne	.+32     	; 0x9a6 <__stack+0x147>
     986:	c0 9f       	mul	r28, r16
     988:	f0 01       	movw	r30, r0
     98a:	c1 9f       	mul	r28, r17
     98c:	f0 0d       	add	r31, r0
     98e:	11 24       	eor	r1, r1
     990:	ea 5e       	subi	r30, 0xEA	; 234
     992:	fe 4f       	sbci	r31, 0xFE	; 254
     994:	80 8d       	ldd	r24, Z+24	; 0x18
     996:	91 8d       	ldd	r25, Z+25	; 0x19
     998:	01 96       	adiw	r24, 0x01	; 1
     99a:	91 8f       	std	Z+25, r25	; 0x19
     99c:	80 8f       	std	Z+24, r24	; 0x18
     99e:	c8 01       	movw	r24, r16
     9a0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     9a4:	8e c0       	rjmp	.+284    	; 0xac2 <__stack+0x263>
     9a6:	20 91 64 00 	lds	r18, 0x0064
     9aa:	30 91 65 00 	lds	r19, 0x0065
     9ae:	82 17       	cp	r24, r18
     9b0:	93 07       	cpc	r25, r19
     9b2:	69 f5       	brne	.+90     	; 0xa0e <__stack+0x1af>
     9b4:	81 ed       	ldi	r24, 0xD1	; 209
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     9bc:	89 2b       	or	r24, r25
     9be:	49 f0       	breq	.+18     	; 0x9d2 <__stack+0x173>
     9c0:	c0 9f       	mul	r28, r16
     9c2:	f0 01       	movw	r30, r0
     9c4:	c1 9f       	mul	r28, r17
     9c6:	f0 0d       	add	r31, r0
     9c8:	11 24       	eor	r1, r1
     9ca:	ea 5e       	subi	r30, 0xEA	; 234
     9cc:	fe 4f       	sbci	r31, 0xFE	; 254
     9ce:	11 8e       	std	Z+25, r1	; 0x19
     9d0:	10 8e       	std	Z+24, r1	; 0x18
     9d2:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     9d6:	85 e8       	ldi	r24, 0x85	; 133
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	88 e0       	ldi	r24, 0x08	; 8
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9ea:	8b ec       	ldi	r24, 0xCB	; 203
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	8e e0       	ldi	r24, 0x0E	; 14
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9fe:	8b eb       	ldi	r24, 0xBB	; 187
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a06:	c8 01       	movw	r24, r16
     a08:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     a0c:	5a c0       	rjmp	.+180    	; 0xac2 <__stack+0x263>
     a0e:	20 91 62 00 	lds	r18, 0x0062
     a12:	30 91 63 00 	lds	r19, 0x0063
     a16:	82 17       	cp	r24, r18
     a18:	93 07       	cpc	r25, r19
     a1a:	49 f5       	brne	.+82     	; 0xa6e <__stack+0x20f>
     a1c:	82 ee       	ldi	r24, 0xE2	; 226
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     a24:	89 2b       	or	r24, r25
     a26:	29 f0       	breq	.+10     	; 0xa32 <__stack+0x1d3>
     a28:	0e 94 d6 03 	call	0x7ac	; 0x7ac <_Z14send_info_testv>
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	54 c0       	rjmp	.+168    	; 0xada <__stack+0x27b>
     a32:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     a36:	85 e8       	ldi	r24, 0x85	; 133
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a3e:	60 e0       	ldi	r22, 0x00	; 0
     a40:	70 e0       	ldi	r23, 0x00	; 0
     a42:	88 e0       	ldi	r24, 0x08	; 8
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a4a:	8b ec       	ldi	r24, 0xCB	; 203
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	8e e0       	ldi	r24, 0x0E	; 14
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a5e:	8b eb       	ldi	r24, 0xBB	; 187
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a66:	c8 01       	movw	r24, r16
     a68:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     a6c:	2a c0       	rjmp	.+84     	; 0xac2 <__stack+0x263>
     a6e:	20 91 60 00 	lds	r18, 0x0060
     a72:	30 91 61 00 	lds	r19, 0x0061
     a76:	82 17       	cp	r24, r18
     a78:	93 07       	cpc	r25, r19
     a7a:	19 f5       	brne	.+70     	; 0xac2 <__stack+0x263>
     a7c:	83 ef       	ldi	r24, 0xF3	; 243
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     a84:	89 2b       	or	r24, r25
     a86:	39 f5       	brne	.+78     	; 0xad6 <__stack+0x277>
     a88:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     a8c:	85 e8       	ldi	r24, 0x85	; 133
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a94:	60 e0       	ldi	r22, 0x00	; 0
     a96:	70 e0       	ldi	r23, 0x00	; 0
     a98:	88 e0       	ldi	r24, 0x08	; 8
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     aa0:	8b ec       	ldi	r24, 0xCB	; 203
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	8e e0       	ldi	r24, 0x0E	; 14
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     ab4:	8b eb       	ldi	r24, 0xBB	; 187
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     abc:	c8 01       	movw	r24, r16
     abe:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ac2:	2f ef       	ldi	r18, 0xFF	; 255
     ac4:	85 ea       	ldi	r24, 0xA5	; 165
     ac6:	9e e0       	ldi	r25, 0x0E	; 14
     ac8:	21 50       	subi	r18, 0x01	; 1
     aca:	80 40       	sbci	r24, 0x00	; 0
     acc:	90 40       	sbci	r25, 0x00	; 0
     ace:	e1 f7       	brne	.-8      	; 0xac8 <__stack+0x269>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <__stack+0x273>
     ad2:	00 00       	nop
     ad4:	d5 ce       	rjmp	.-598    	; 0x880 <__stack+0x21>
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	08 95       	ret

00000ae4 <_Z13selected_foodv>:
     ae4:	cf 92       	push	r12
     ae6:	df 92       	push	r13
     ae8:	ef 92       	push	r14
     aea:	ff 92       	push	r15
     aec:	0f 93       	push	r16
     aee:	1f 93       	push	r17
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	cd b7       	in	r28, 0x3d	; 61
     af6:	de b7       	in	r29, 0x3e	; 62
     af8:	c8 5c       	subi	r28, 0xC8	; 200
     afa:	d1 09       	sbc	r29, r1
     afc:	0f b6       	in	r0, 0x3f	; 63
     afe:	f8 94       	cli
     b00:	de bf       	out	0x3e, r29	; 62
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	cd bf       	out	0x3d, r28	; 61
     b06:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     b0a:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_Z8get_infov>
     b0e:	2f ef       	ldi	r18, 0xFF	; 255
     b10:	35 ea       	ldi	r19, 0xA5	; 165
     b12:	8e e0       	ldi	r24, 0x0E	; 14
     b14:	21 50       	subi	r18, 0x01	; 1
     b16:	30 40       	sbci	r19, 0x00	; 0
     b18:	80 40       	sbci	r24, 0x00	; 0
     b1a:	e1 f7       	brne	.-8      	; 0xb14 <_Z13selected_foodv+0x30>
     b1c:	00 c0       	rjmp	.+0      	; 0xb1e <_Z13selected_foodv+0x3a>
     b1e:	00 00       	nop
     b20:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     b24:	40 91 5e 04 	lds	r20, 0x045E
     b28:	50 91 5f 04 	lds	r21, 0x045F
     b2c:	14 16       	cp	r1, r20
     b2e:	15 06       	cpc	r1, r21
     b30:	04 f5       	brge	.+64     	; 0xb72 <_Z13selected_foodv+0x8e>
     b32:	ee e2       	ldi	r30, 0x2E	; 46
     b34:	f1 e0       	ldi	r31, 0x01	; 1
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	00 e0       	ldi	r16, 0x00	; 0
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	20 81       	ld	r18, Z
     b40:	31 81       	ldd	r19, Z+1	; 0x01
     b42:	12 16       	cp	r1, r18
     b44:	13 06       	cpc	r1, r19
     b46:	6c f4       	brge	.+26     	; 0xb62 <_Z13selected_foodv+0x7e>
     b48:	d8 01       	movw	r26, r16
     b4a:	aa 0f       	add	r26, r26
     b4c:	bb 1f       	adc	r27, r27
     b4e:	21 e0       	ldi	r18, 0x01	; 1
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	2c 0f       	add	r18, r28
     b54:	3d 1f       	adc	r19, r29
     b56:	a2 0f       	add	r26, r18
     b58:	b3 1f       	adc	r27, r19
     b5a:	8d 93       	st	X+, r24
     b5c:	9c 93       	st	X, r25
     b5e:	0f 5f       	subi	r16, 0xFF	; 255
     b60:	1f 4f       	sbci	r17, 0xFF	; 255
     b62:	01 96       	adiw	r24, 0x01	; 1
     b64:	7c 96       	adiw	r30, 0x1c	; 28
     b66:	84 17       	cp	r24, r20
     b68:	95 07       	cpc	r25, r21
     b6a:	4c f3       	brlt	.-46     	; 0xb3e <_Z13selected_foodv+0x5a>
     b6c:	01 15       	cp	r16, r1
     b6e:	11 05       	cpc	r17, r1
     b70:	c1 f4       	brne	.+48     	; 0xba2 <_Z13selected_foodv+0xbe>
     b72:	84 e0       	ldi	r24, 0x04	; 4
     b74:	91 e0       	ldi	r25, 0x01	; 1
     b76:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b7a:	61 e0       	ldi	r22, 0x01	; 1
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	86 e0       	ldi	r24, 0x06	; 6
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     b86:	82 eb       	ldi	r24, 0xB2	; 178
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b8e:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     b92:	20 91 62 00 	lds	r18, 0x0062
     b96:	30 91 63 00 	lds	r19, 0x0063
     b9a:	82 17       	cp	r24, r18
     b9c:	93 07       	cpc	r25, r19
     b9e:	b9 f7       	brne	.-18     	; 0xb8e <_Z13selected_foodv+0xaa>
     ba0:	a0 c0       	rjmp	.+320    	; 0xce2 <_Z13selected_foodv+0x1fe>
     ba2:	85 e8       	ldi	r24, 0x85	; 133
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	88 e0       	ldi	r24, 0x08	; 8
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     bb6:	8b ec       	ldi	r24, 0xCB	; 203
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     bbe:	60 e0       	ldi	r22, 0x00	; 0
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	8e e0       	ldi	r24, 0x0E	; 14
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     bca:	8b eb       	ldi	r24, 0xBB	; 187
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     bd2:	61 e0       	ldi	r22, 0x01	; 1
     bd4:	70 e0       	ldi	r23, 0x00	; 0
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     bde:	89 81       	ldd	r24, Y+1	; 0x01
     be0:	9a 81       	ldd	r25, Y+2	; 0x02
     be2:	2c e1       	ldi	r18, 0x1C	; 28
     be4:	28 9f       	mul	r18, r24
     be6:	70 01       	movw	r14, r0
     be8:	29 9f       	mul	r18, r25
     bea:	f0 0c       	add	r15, r0
     bec:	11 24       	eor	r1, r1
     bee:	c7 01       	movw	r24, r14
     bf0:	88 5e       	subi	r24, 0xE8	; 232
     bf2:	9e 4f       	sbci	r25, 0xFE	; 254
     bf4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     bf8:	61 e0       	ldi	r22, 0x01	; 1
     bfa:	70 e0       	ldi	r23, 0x00	; 0
     bfc:	88 e0       	ldi	r24, 0x08	; 8
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     c04:	c7 01       	movw	r24, r14
     c06:	8a 5e       	subi	r24, 0xEA	; 234
     c08:	9e 4f       	sbci	r25, 0xFE	; 254
     c0a:	7c 01       	movw	r14, r24
     c0c:	fc 01       	movw	r30, r24
     c0e:	86 89       	ldd	r24, Z+22	; 0x16
     c10:	97 89       	ldd	r25, Z+23	; 0x17
     c12:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     c16:	61 e0       	ldi	r22, 0x01	; 1
     c18:	70 e0       	ldi	r23, 0x00	; 0
     c1a:	8e e0       	ldi	r24, 0x0E	; 14
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     c22:	f7 01       	movw	r30, r14
     c24:	80 8d       	ldd	r24, Z+24	; 0x18
     c26:	91 8d       	ldd	r25, Z+25	; 0x19
     c28:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     c2c:	e1 2c       	mov	r14, r1
     c2e:	f1 2c       	mov	r15, r1
     c30:	01 50       	subi	r16, 0x01	; 1
     c32:	11 09       	sbc	r17, r1
     c34:	c1 2c       	mov	r12, r1
     c36:	d1 2c       	mov	r13, r1
     c38:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     c3c:	20 91 6c 00 	lds	r18, 0x006C
     c40:	30 91 6d 00 	lds	r19, 0x006D
     c44:	82 17       	cp	r24, r18
     c46:	93 07       	cpc	r25, r19
     c48:	b1 f4       	brne	.+44     	; 0xc76 <_Z13selected_foodv+0x192>
     c4a:	e1 14       	cp	r14, r1
     c4c:	f1 04       	cpc	r15, r1
     c4e:	11 f4       	brne	.+4      	; 0xc54 <_Z13selected_foodv+0x170>
     c50:	78 01       	movw	r14, r16
     c52:	03 c0       	rjmp	.+6      	; 0xc5a <_Z13selected_foodv+0x176>
     c54:	f1 e0       	ldi	r31, 0x01	; 1
     c56:	ef 1a       	sub	r14, r31
     c58:	f1 08       	sbc	r15, r1
     c5a:	f7 01       	movw	r30, r14
     c5c:	ee 0f       	add	r30, r30
     c5e:	ff 1f       	adc	r31, r31
     c60:	21 e0       	ldi	r18, 0x01	; 1
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	2c 0f       	add	r18, r28
     c66:	3d 1f       	adc	r19, r29
     c68:	e2 0f       	add	r30, r18
     c6a:	f3 1f       	adc	r31, r19
     c6c:	80 81       	ld	r24, Z
     c6e:	91 81       	ldd	r25, Z+1	; 0x01
     c70:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c74:	2c c0       	rjmp	.+88     	; 0xcce <_Z13selected_foodv+0x1ea>
     c76:	20 91 6a 00 	lds	r18, 0x006A
     c7a:	30 91 6b 00 	lds	r19, 0x006B
     c7e:	82 17       	cp	r24, r18
     c80:	93 07       	cpc	r25, r19
     c82:	b9 f4       	brne	.+46     	; 0xcb2 <_Z13selected_foodv+0x1ce>
     c84:	0e 15       	cp	r16, r14
     c86:	1f 05       	cpc	r17, r15
     c88:	21 f0       	breq	.+8      	; 0xc92 <_Z13selected_foodv+0x1ae>
     c8a:	3f ef       	ldi	r19, 0xFF	; 255
     c8c:	e3 1a       	sub	r14, r19
     c8e:	f3 0a       	sbc	r15, r19
     c90:	02 c0       	rjmp	.+4      	; 0xc96 <_Z13selected_foodv+0x1b2>
     c92:	ec 2c       	mov	r14, r12
     c94:	fd 2c       	mov	r15, r13
     c96:	f7 01       	movw	r30, r14
     c98:	ee 0f       	add	r30, r30
     c9a:	ff 1f       	adc	r31, r31
     c9c:	81 e0       	ldi	r24, 0x01	; 1
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	8c 0f       	add	r24, r28
     ca2:	9d 1f       	adc	r25, r29
     ca4:	e8 0f       	add	r30, r24
     ca6:	f9 1f       	adc	r31, r25
     ca8:	80 81       	ld	r24, Z
     caa:	91 81       	ldd	r25, Z+1	; 0x01
     cac:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     cb0:	0e c0       	rjmp	.+28     	; 0xcce <_Z13selected_foodv+0x1ea>
     cb2:	20 91 62 00 	lds	r18, 0x0062
     cb6:	30 91 63 00 	lds	r19, 0x0063
     cba:	82 17       	cp	r24, r18
     cbc:	93 07       	cpc	r25, r19
     cbe:	89 f0       	breq	.+34     	; 0xce2 <_Z13selected_foodv+0x1fe>
     cc0:	20 91 60 00 	lds	r18, 0x0060
     cc4:	30 91 61 00 	lds	r19, 0x0061
     cc8:	82 17       	cp	r24, r18
     cca:	93 07       	cpc	r25, r19
     ccc:	51 f0       	breq	.+20     	; 0xce2 <_Z13selected_foodv+0x1fe>
     cce:	9f ef       	ldi	r25, 0xFF	; 255
     cd0:	e5 ea       	ldi	r30, 0xA5	; 165
     cd2:	fe e0       	ldi	r31, 0x0E	; 14
     cd4:	91 50       	subi	r25, 0x01	; 1
     cd6:	e0 40       	sbci	r30, 0x00	; 0
     cd8:	f0 40       	sbci	r31, 0x00	; 0
     cda:	e1 f7       	brne	.-8      	; 0xcd4 <_Z13selected_foodv+0x1f0>
     cdc:	00 c0       	rjmp	.+0      	; 0xcde <_Z13selected_foodv+0x1fa>
     cde:	00 00       	nop
     ce0:	ab cf       	rjmp	.-170    	; 0xc38 <_Z13selected_foodv+0x154>
     ce2:	c8 53       	subi	r28, 0x38	; 56
     ce4:	df 4f       	sbci	r29, 0xFF	; 255
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	f8 94       	cli
     cea:	de bf       	out	0x3e, r29	; 62
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	cd bf       	out	0x3d, r28	; 61
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	1f 91       	pop	r17
     cf6:	0f 91       	pop	r16
     cf8:	ff 90       	pop	r15
     cfa:	ef 90       	pop	r14
     cfc:	df 90       	pop	r13
     cfe:	cf 90       	pop	r12
     d00:	08 95       	ret

00000d02 <_Z11change_foodv>:




void change_food()
{
     d02:	1f 93       	push	r17
     d04:	cf 93       	push	r28
     d06:	df 93       	push	r29
	wait_message();
     d08:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
	get_info();
     d0c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <_Z8get_infov>
     d10:	2f ef       	ldi	r18, 0xFF	; 255
     d12:	85 ea       	ldi	r24, 0xA5	; 165
     d14:	9e e0       	ldi	r25, 0x0E	; 14
     d16:	21 50       	subi	r18, 0x01	; 1
     d18:	80 40       	sbci	r24, 0x00	; 0
     d1a:	90 40       	sbci	r25, 0x00	; 0
     d1c:	e1 f7       	brne	.-8      	; 0xd16 <_Z11change_foodv+0x14>
     d1e:	00 c0       	rjmp	.+0      	; 0xd20 <_Z11change_foodv+0x1e>
     d20:	00 00       	nop
	_delay_ms(DELAY_TIME_GET_INFO);
	lcd_clear();
     d22:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_puts("Food");
     d26:	85 e8       	ldi	r24, 0x85	; 133
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,0);
     d2e:	60 e0       	ldi	r22, 0x00	; 0
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	88 e0       	ldi	r24, 0x08	; 8
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("Price");
     d3a:	8b ec       	ldi	r24, 0xCB	; 203
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(14,0);
     d42:	60 e0       	ldi	r22, 0x00	; 0
     d44:	70 e0       	ldi	r23, 0x00	; 0
     d46:	8e e0       	ldi	r24, 0x0E	; 14
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("No");
     d4e:	8b eb       	ldi	r24, 0xBB	; 187
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	int selected_pk=0;
	lcd_setCursor(0,1);
     d56:	61 e0       	ldi	r22, 0x01	; 1
     d58:	70 e0       	ldi	r23, 0x00	; 0
     d5a:	80 e0       	ldi	r24, 0x00	; 0
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>

	lcd_puts(food[selected_pk].name);
     d62:	88 e1       	ldi	r24, 0x18	; 24
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,1);
     d6a:	61 e0       	ldi	r22, 0x01	; 1
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	88 e0       	ldi	r24, 0x08	; 8
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].price);
     d76:	c6 e1       	ldi	r28, 0x16	; 22
     d78:	d1 e0       	ldi	r29, 0x01	; 1
     d7a:	8e 89       	ldd	r24, Y+22	; 0x16
     d7c:	9f 89       	ldd	r25, Y+23	; 0x17
     d7e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

	lcd_setCursor(14,1);
     d82:	61 e0       	ldi	r22, 0x01	; 1
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	8e e0       	ldi	r24, 0x0E	; 14
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].num);
     d8e:	88 8d       	ldd	r24, Y+24	; 0x18
     d90:	99 8d       	ldd	r25, Y+25	; 0x19
     d92:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
	lcd_puts("Price");

	lcd_setCursor(14,0);
	lcd_puts("No");

	int selected_pk=0;
     d96:	c0 e0       	ldi	r28, 0x00	; 0
     d98:	d0 e0       	ldi	r29, 0x00	; 0

		}

		else if (in==del)
		{
			if (food[selected_pk].p==0)
     d9a:	1c e1       	ldi	r17, 0x1C	; 28
	lcd_num(food[selected_pk].num);


	while(1)
	{
		int in=input();
     d9c:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>

		if (in==up)
     da0:	20 91 6c 00 	lds	r18, 0x006C
     da4:	30 91 6d 00 	lds	r19, 0x006D
     da8:	82 17       	cp	r24, r18
     daa:	93 07       	cpc	r25, r19
     dac:	69 f4       	brne	.+26     	; 0xdc8 <_Z11change_foodv+0xc6>
		{
			if (selected_pk==0)  selected_pk=num_of_food-1;
     dae:	20 97       	sbiw	r28, 0x00	; 0
     db0:	31 f4       	brne	.+12     	; 0xdbe <_Z11change_foodv+0xbc>
     db2:	c0 91 5e 04 	lds	r28, 0x045E
     db6:	d0 91 5f 04 	lds	r29, 0x045F
     dba:	21 97       	sbiw	r28, 0x01	; 1
     dbc:	01 c0       	rjmp	.+2      	; 0xdc0 <_Z11change_foodv+0xbe>
			else selected_pk--;
     dbe:	21 97       	sbiw	r28, 0x01	; 1
			select_food_print(selected_pk);
     dc0:	ce 01       	movw	r24, r28
     dc2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     dc6:	15 c1       	rjmp	.+554    	; 0xff2 <_Z11change_foodv+0x2f0>

		}

		else if (in==down)
     dc8:	20 91 6a 00 	lds	r18, 0x006A
     dcc:	30 91 6b 00 	lds	r19, 0x006B
     dd0:	82 17       	cp	r24, r18
     dd2:	93 07       	cpc	r25, r19
     dd4:	81 f4       	brne	.+32     	; 0xdf6 <_Z11change_foodv+0xf4>
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     dd6:	80 91 5e 04 	lds	r24, 0x045E
     dda:	90 91 5f 04 	lds	r25, 0x045F
     dde:	01 97       	sbiw	r24, 0x01	; 1
     de0:	8c 17       	cp	r24, r28
     de2:	9d 07       	cpc	r25, r29
     de4:	11 f0       	breq	.+4      	; 0xdea <_Z11change_foodv+0xe8>
			else selected_pk++;
     de6:	21 96       	adiw	r28, 0x01	; 1
     de8:	02 c0       	rjmp	.+4      	; 0xdee <_Z11change_foodv+0xec>

		}

		else if (in==down)
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     dea:	c0 e0       	ldi	r28, 0x00	; 0
     dec:	d0 e0       	ldi	r29, 0x00	; 0
			else selected_pk++;
			select_food_print(selected_pk);
     dee:	ce 01       	movw	r24, r28
     df0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     df4:	fe c0       	rjmp	.+508    	; 0xff2 <_Z11change_foodv+0x2f0>

		}

		else if (in==left)
     df6:	20 91 66 00 	lds	r18, 0x0066
     dfa:	30 91 67 00 	lds	r19, 0x0067
     dfe:	82 17       	cp	r24, r18
     e00:	93 07       	cpc	r25, r19
     e02:	09 f0       	breq	.+2      	; 0xe06 <_Z11change_foodv+0x104>
     e04:	45 c0       	rjmp	.+138    	; 0xe90 <_Z11change_foodv+0x18e>
		{
			if (food[selected_pk].p==0)
     e06:	1c 9f       	mul	r17, r28
     e08:	f0 01       	movw	r30, r0
     e0a:	1d 9f       	mul	r17, r29
     e0c:	f0 0d       	add	r31, r0
     e0e:	11 24       	eor	r1, r1
     e10:	ea 5e       	subi	r30, 0xEA	; 234
     e12:	fe 4f       	sbci	r31, 0xFE	; 254
     e14:	82 8d       	ldd	r24, Z+26	; 0x1a
     e16:	93 8d       	ldd	r25, Z+27	; 0x1b
     e18:	89 2b       	or	r24, r25
     e1a:	d1 f4       	brne	.+52     	; 0xe50 <_Z11change_foodv+0x14e>
			{
				if(food[selected_pk].num != 0)
     e1c:	1c 9f       	mul	r17, r28
     e1e:	f0 01       	movw	r30, r0
     e20:	1d 9f       	mul	r17, r29
     e22:	f0 0d       	add	r31, r0
     e24:	11 24       	eor	r1, r1
     e26:	ea 5e       	subi	r30, 0xEA	; 234
     e28:	fe 4f       	sbci	r31, 0xFE	; 254
     e2a:	80 8d       	ldd	r24, Z+24	; 0x18
     e2c:	91 8d       	ldd	r25, Z+25	; 0x19
     e2e:	00 97       	sbiw	r24, 0x00	; 0
     e30:	09 f4       	brne	.+2      	; 0xe34 <_Z11change_foodv+0x132>
     e32:	df c0       	rjmp	.+446    	; 0xff2 <_Z11change_foodv+0x2f0>
				{
					food[selected_pk].num--;
     e34:	1c 9f       	mul	r17, r28
     e36:	f0 01       	movw	r30, r0
     e38:	1d 9f       	mul	r17, r29
     e3a:	f0 0d       	add	r31, r0
     e3c:	11 24       	eor	r1, r1
     e3e:	ea 5e       	subi	r30, 0xEA	; 234
     e40:	fe 4f       	sbci	r31, 0xFE	; 254
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	91 8f       	std	Z+25, r25	; 0x19
     e46:	80 8f       	std	Z+24, r24	; 0x18
					select_food_print(selected_pk);
     e48:	ce 01       	movw	r24, r28
     e4a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e4e:	d1 c0       	rjmp	.+418    	; 0xff2 <_Z11change_foodv+0x2f0>
				}

			}
			else
			{
				cannot_cancel();
     e50:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>
				lcd_clear();
     e54:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
				lcd_puts("Food");
     e58:	85 e8       	ldi	r24, 0x85	; 133
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(8,0);
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	88 e0       	ldi	r24, 0x08	; 8
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("Price");
     e6c:	8b ec       	ldi	r24, 0xCB	; 203
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(14,0);
     e74:	60 e0       	ldi	r22, 0x00	; 0
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	8e e0       	ldi	r24, 0x0E	; 14
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("No");
     e80:	8b eb       	ldi	r24, 0xBB	; 187
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				select_food_print(selected_pk);
     e88:	ce 01       	movw	r24, r28
     e8a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e8e:	b1 c0       	rjmp	.+354    	; 0xff2 <_Z11change_foodv+0x2f0>





		else if (in==right)
     e90:	20 91 68 00 	lds	r18, 0x0068
     e94:	30 91 69 00 	lds	r19, 0x0069
     e98:	82 17       	cp	r24, r18
     e9a:	93 07       	cpc	r25, r19
     e9c:	81 f4       	brne	.+32     	; 0xebe <_Z11change_foodv+0x1bc>
		{
			food[selected_pk].num++;
     e9e:	1c 9f       	mul	r17, r28
     ea0:	f0 01       	movw	r30, r0
     ea2:	1d 9f       	mul	r17, r29
     ea4:	f0 0d       	add	r31, r0
     ea6:	11 24       	eor	r1, r1
     ea8:	ea 5e       	subi	r30, 0xEA	; 234
     eaa:	fe 4f       	sbci	r31, 0xFE	; 254
     eac:	80 8d       	ldd	r24, Z+24	; 0x18
     eae:	91 8d       	ldd	r25, Z+25	; 0x19
     eb0:	01 96       	adiw	r24, 0x01	; 1
     eb2:	91 8f       	std	Z+25, r25	; 0x19
     eb4:	80 8f       	std	Z+24, r24	; 0x18
			select_food_print(selected_pk);
     eb6:	ce 01       	movw	r24, r28
     eb8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ebc:	9a c0       	rjmp	.+308    	; 0xff2 <_Z11change_foodv+0x2f0>

		}

		else if (in==del)
     ebe:	20 91 64 00 	lds	r18, 0x0064
     ec2:	30 91 65 00 	lds	r19, 0x0065
     ec6:	82 17       	cp	r24, r18
     ec8:	93 07       	cpc	r25, r19
     eca:	d9 f5       	brne	.+118    	; 0xf42 <_Z11change_foodv+0x240>
		{
			if (food[selected_pk].p==0)
     ecc:	1c 9f       	mul	r17, r28
     ece:	f0 01       	movw	r30, r0
     ed0:	1d 9f       	mul	r17, r29
     ed2:	f0 0d       	add	r31, r0
     ed4:	11 24       	eor	r1, r1
     ed6:	ea 5e       	subi	r30, 0xEA	; 234
     ed8:	fe 4f       	sbci	r31, 0xFE	; 254
     eda:	82 8d       	ldd	r24, Z+26	; 0x1a
     edc:	93 8d       	ldd	r25, Z+27	; 0x1b
     ede:	89 2b       	or	r24, r25
     ee0:	81 f4       	brne	.+32     	; 0xf02 <_Z11change_foodv+0x200>
			{
				if (display_message1("Set the no to 0?"))
     ee2:	81 ed       	ldi	r24, 0xD1	; 209
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     eea:	89 2b       	or	r24, r25
     eec:	61 f0       	breq	.+24     	; 0xf06 <_Z11change_foodv+0x204>
				food[selected_pk].num=0;
     eee:	1c 9f       	mul	r17, r28
     ef0:	f0 01       	movw	r30, r0
     ef2:	1d 9f       	mul	r17, r29
     ef4:	f0 0d       	add	r31, r0
     ef6:	11 24       	eor	r1, r1
     ef8:	ea 5e       	subi	r30, 0xEA	; 234
     efa:	fe 4f       	sbci	r31, 0xFE	; 254
     efc:	11 8e       	std	Z+25, r1	; 0x19
     efe:	10 8e       	std	Z+24, r1	; 0x18
     f00:	02 c0       	rjmp	.+4      	; 0xf06 <_Z11change_foodv+0x204>
			}
			else
			cannot_cancel();
     f02:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>

			lcd_clear();
     f06:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     f0a:	85 e8       	ldi	r24, 0x85	; 133
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     f12:	60 e0       	ldi	r22, 0x00	; 0
     f14:	70 e0       	ldi	r23, 0x00	; 0
     f16:	88 e0       	ldi	r24, 0x08	; 8
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     f1e:	8b ec       	ldi	r24, 0xCB	; 203
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	8e e0       	ldi	r24, 0x0E	; 14
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     f32:	8b eb       	ldi	r24, 0xBB	; 187
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     f3a:	ce 01       	movw	r24, r28
     f3c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     f40:	58 c0       	rjmp	.+176    	; 0xff2 <_Z11change_foodv+0x2f0>
		}

		else if (in==ok)
     f42:	20 91 62 00 	lds	r18, 0x0062
     f46:	30 91 63 00 	lds	r19, 0x0063
     f4a:	82 17       	cp	r24, r18
     f4c:	93 07       	cpc	r25, r19
     f4e:	39 f5       	brne	.+78     	; 0xf9e <_Z11change_foodv+0x29c>
		{
			if (display_message1("Save the changes"))
     f50:	82 ee       	ldi	r24, 0xE2	; 226
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     f58:	89 2b       	or	r24, r25
     f5a:	19 f0       	breq	.+6      	; 0xf62 <_Z11change_foodv+0x260>
			{
				send_info();
     f5c:	0e 94 0f 03 	call	0x61e	; 0x61e <_Z9send_infov>
				//_delay_ms(DELAY_TIME);
				return;
     f60:	52 c0       	rjmp	.+164    	; 0x1006 <_Z11change_foodv+0x304>
			}

			lcd_clear();
     f62:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     f66:	85 e8       	ldi	r24, 0x85	; 133
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     f6e:	60 e0       	ldi	r22, 0x00	; 0
     f70:	70 e0       	ldi	r23, 0x00	; 0
     f72:	88 e0       	ldi	r24, 0x08	; 8
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     f7a:	8b ec       	ldi	r24, 0xCB	; 203
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     f82:	60 e0       	ldi	r22, 0x00	; 0
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	8e e0       	ldi	r24, 0x0E	; 14
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     f8e:	8b eb       	ldi	r24, 0xBB	; 187
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     f96:	ce 01       	movw	r24, r28
     f98:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     f9c:	2a c0       	rjmp	.+84     	; 0xff2 <_Z11change_foodv+0x2f0>

		}


		else if (in==back)
     f9e:	20 91 60 00 	lds	r18, 0x0060
     fa2:	30 91 61 00 	lds	r19, 0x0061
     fa6:	82 17       	cp	r24, r18
     fa8:	93 07       	cpc	r25, r19
     faa:	19 f5       	brne	.+70     	; 0xff2 <_Z11change_foodv+0x2f0>
		{
			if (display_message1("Discard Changes?"))
     fac:	83 ef       	ldi	r24, 0xF3	; 243
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 44 02 	call	0x488	; 0x488 <_Z16display_message1PKc>
     fb4:	89 2b       	or	r24, r25
     fb6:	39 f5       	brne	.+78     	; 0x1006 <_Z11change_foodv+0x304>
			{
				//_delay_ms(DELAY_TIME);
				return ;
			}

			lcd_clear();
     fb8:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     fbc:	85 e8       	ldi	r24, 0x85	; 133
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	88 e0       	ldi	r24, 0x08	; 8
     fca:	90 e0       	ldi	r25, 0x00	; 0
     fcc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     fd0:	8b ec       	ldi	r24, 0xCB	; 203
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     fd8:	60 e0       	ldi	r22, 0x00	; 0
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	8e e0       	ldi	r24, 0x0E	; 14
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     fe4:	8b eb       	ldi	r24, 0xBB	; 187
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     fec:	ce 01       	movw	r24, r28
     fee:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ff2:	2f ef       	ldi	r18, 0xFF	; 255
     ff4:	85 ea       	ldi	r24, 0xA5	; 165
     ff6:	9e e0       	ldi	r25, 0x0E	; 14
     ff8:	21 50       	subi	r18, 0x01	; 1
     ffa:	80 40       	sbci	r24, 0x00	; 0
     ffc:	90 40       	sbci	r25, 0x00	; 0
     ffe:	e1 f7       	brne	.-8      	; 0xff8 <_Z11change_foodv+0x2f6>
    1000:	00 c0       	rjmp	.+0      	; 0x1002 <_Z11change_foodv+0x300>
    1002:	00 00       	nop
    1004:	cb ce       	rjmp	.-618    	; 0xd9c <_Z11change_foodv+0x9a>


		_delay_ms(DELAY_TIME_LOOP);
	}

}
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	1f 91       	pop	r17
    100c:	08 95       	ret

0000100e <_Z8mainmenuv>:
    100e:	2f ef       	ldi	r18, 0xFF	; 255
    1010:	85 ea       	ldi	r24, 0xA5	; 165
    1012:	9e e0       	ldi	r25, 0x0E	; 14
    1014:	21 50       	subi	r18, 0x01	; 1
    1016:	80 40       	sbci	r24, 0x00	; 0
    1018:	90 40       	sbci	r25, 0x00	; 0
    101a:	e1 f7       	brne	.-8      	; 0x1014 <_Z8mainmenuv+0x6>
    101c:	00 c0       	rjmp	.+0      	; 0x101e <_Z8mainmenuv+0x10>
    101e:	00 00       	nop


void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
    1020:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	num_of_food=0;
    1024:	10 92 5f 04 	sts	0x045F, r1
    1028:	10 92 5e 04 	sts	0x045E, r1
	int state=0;
	int first_visit=0;
	main_menu_print(first_visit);
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
	int first_visit=0;
    1034:	e1 2c       	mov	r14, r1
    1036:	f1 2c       	mov	r15, r1
void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
    1038:	c0 e0       	ldi	r28, 0x00	; 0
    103a:	d0 e0       	ldi	r29, 0x00	; 0
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
    103c:	00 e0       	ldi	r16, 0x00	; 0
    103e:	10 e0       	ldi	r17, 0x00	; 0
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
					if (c==1)
    1040:	cc 24       	eor	r12, r12
    1042:	c3 94       	inc	r12
    1044:	d1 2c       	mov	r13, r1
	int first_visit=0;
	main_menu_print(first_visit);

	while(1)
	{
		int in=input();
    1046:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		//  lcd_puts (in);
		if (in!=000)
    104a:	89 2b       	or	r24, r25
    104c:	e1 f3       	breq	.-8      	; 0x1046 <_Z8mainmenuv+0x38>
    104e:	2f ef       	ldi	r18, 0xFF	; 255
    1050:	86 e7       	ldi	r24, 0x76	; 118
    1052:	91 e0       	ldi	r25, 0x01	; 1
    1054:	21 50       	subi	r18, 0x01	; 1
    1056:	80 40       	sbci	r24, 0x00	; 0
    1058:	90 40       	sbci	r25, 0x00	; 0
    105a:	e1 f7       	brne	.-8      	; 0x1054 <_Z8mainmenuv+0x46>
    105c:	00 c0       	rjmp	.+0      	; 0x105e <_Z8mainmenuv+0x50>
    105e:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in=input();
    1060:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			if (state==0&& (in==up ||in==down))
    1064:	20 97       	sbiw	r28, 0x00	; 0
    1066:	31 f5       	brne	.+76     	; 0x10b4 <_Z8mainmenuv+0xa6>
    1068:	20 91 6c 00 	lds	r18, 0x006C
    106c:	30 91 6d 00 	lds	r19, 0x006D
    1070:	82 17       	cp	r24, r18
    1072:	93 07       	cpc	r25, r19
    1074:	41 f0       	breq	.+16     	; 0x1086 <_Z8mainmenuv+0x78>
    1076:	20 91 6a 00 	lds	r18, 0x006A
    107a:	30 91 6b 00 	lds	r19, 0x006B
    107e:	82 17       	cp	r24, r18
    1080:	93 07       	cpc	r25, r19
    1082:	09 f0       	breq	.+2      	; 0x1086 <_Z8mainmenuv+0x78>
    1084:	70 c0       	rjmp	.+224    	; 0x1166 <_Z8mainmenuv+0x158>
			{
				lcd_setCursor(0,0);
    1086:	60 2f       	mov	r22, r16
    1088:	71 2f       	mov	r23, r17
    108a:	80 2f       	mov	r24, r16
    108c:	91 2f       	mov	r25, r17
    108e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
    1092:	8f eb       	ldi	r24, 0xBF	; 191
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,1);
    109a:	6c 2d       	mov	r22, r12
    109c:	7d 2d       	mov	r23, r13
    109e:	80 2f       	mov	r24, r16
    10a0:	91 2f       	mov	r25, r17
    10a2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
    10a6:	8a e7       	ldi	r24, 0x7A	; 122
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=1;
    10ae:	cc 2d       	mov	r28, r12
    10b0:	dd 2d       	mov	r29, r13
    10b2:	4f c0       	rjmp	.+158    	; 0x1152 <_Z8mainmenuv+0x144>
			}
			else if (state==1 && (in==up ||in==down))
    10b4:	c1 30       	cpi	r28, 0x01	; 1
    10b6:	d1 05       	cpc	r29, r1
    10b8:	09 f0       	breq	.+2      	; 0x10bc <_Z8mainmenuv+0xae>
    10ba:	5d c0       	rjmp	.+186    	; 0x1176 <_Z8mainmenuv+0x168>
    10bc:	20 91 6c 00 	lds	r18, 0x006C
    10c0:	30 91 6d 00 	lds	r19, 0x006D
    10c4:	82 17       	cp	r24, r18
    10c6:	93 07       	cpc	r25, r19
    10c8:	39 f0       	breq	.+14     	; 0x10d8 <_Z8mainmenuv+0xca>
    10ca:	20 91 6a 00 	lds	r18, 0x006A
    10ce:	30 91 6b 00 	lds	r19, 0x006B
    10d2:	82 17       	cp	r24, r18
    10d4:	93 07       	cpc	r25, r19
    10d6:	b9 f4       	brne	.+46     	; 0x1106 <_Z8mainmenuv+0xf8>
			{
				lcd_setCursor(0,1);
    10d8:	6c 2d       	mov	r22, r12
    10da:	7d 2d       	mov	r23, r13
    10dc:	80 2f       	mov	r24, r16
    10de:	91 2f       	mov	r25, r17
    10e0:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
    10e4:	8f eb       	ldi	r24, 0xBF	; 191
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,0);
    10ec:	60 2f       	mov	r22, r16
    10ee:	71 2f       	mov	r23, r17
    10f0:	80 2f       	mov	r24, r16
    10f2:	91 2f       	mov	r25, r17
    10f4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
    10f8:	8a e7       	ldi	r24, 0x7A	; 122
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=0;
    1100:	c0 2f       	mov	r28, r16
    1102:	d1 2f       	mov	r29, r17
    1104:	26 c0       	rjmp	.+76     	; 0x1152 <_Z8mainmenuv+0x144>
			}
			else if (in==ok)
    1106:	20 91 62 00 	lds	r18, 0x0062
    110a:	30 91 63 00 	lds	r19, 0x0063
    110e:	82 17       	cp	r24, r18
    1110:	93 07       	cpc	r25, r19
    1112:	f9 f4       	brne	.+62     	; 0x1152 <_Z8mainmenuv+0x144>
			{
				//_delay_ms(DELAY_TIME);
				if (state==0)
    1114:	cd 2b       	or	r28, r29
    1116:	b1 f4       	brne	.+44     	; 0x1144 <_Z8mainmenuv+0x136>
				{
					int c=0;
					if (first_visit==0)
    1118:	e1 14       	cp	r14, r1
    111a:	f1 04       	cpc	r15, r1
    111c:	59 f4       	brne	.+22     	; 0x1134 <_Z8mainmenuv+0x126>
					c=select_food();
    111e:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <_Z11select_foodv>
					else
					change_food();
					if (c==1)
    1122:	3c 2d       	mov	r19, r12
    1124:	2d 2d       	mov	r18, r13
    1126:	01 97       	sbiw	r24, 0x01	; 1
    1128:	11 f0       	breq	.+4      	; 0x112e <_Z8mainmenuv+0x120>
    112a:	30 2f       	mov	r19, r16
    112c:	21 2f       	mov	r18, r17
					first_visit=1;
    112e:	e3 2e       	mov	r14, r19
    1130:	f2 2e       	mov	r15, r18
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <_Z8mainmenuv+0x12a>
				{
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
    1134:	0e 94 81 06 	call	0xd02	; 0xd02 <_Z11change_foodv>
					if (c==1)
					first_visit=1;
					state=0;
					main_menu_print(first_visit);
    1138:	c7 01       	movw	r24, r14
    113a:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
    113e:	c0 2f       	mov	r28, r16
    1140:	d1 2f       	mov	r29, r17
    1142:	07 c0       	rjmp	.+14     	; 0x1152 <_Z8mainmenuv+0x144>
					main_menu_print(first_visit);
				}
				else
				//selected_food();
				{
					selected_food();
    1144:	0e 94 72 05 	call	0xae4	; 0xae4 <_Z13selected_foodv>
					main_menu_print(first_visit);
    1148:	c7 01       	movw	r24, r14
    114a:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					state=0;
    114e:	c0 2f       	mov	r28, r16
    1150:	d1 2f       	mov	r29, r17
    1152:	9f ef       	ldi	r25, 0xFF	; 255
    1154:	25 ea       	ldi	r18, 0xA5	; 165
    1156:	8e e0       	ldi	r24, 0x0E	; 14
    1158:	91 50       	subi	r25, 0x01	; 1
    115a:	20 40       	sbci	r18, 0x00	; 0
    115c:	80 40       	sbci	r24, 0x00	; 0
    115e:	e1 f7       	brne	.-8      	; 0x1158 <_Z8mainmenuv+0x14a>
    1160:	00 c0       	rjmp	.+0      	; 0x1162 <_Z8mainmenuv+0x154>
    1162:	00 00       	nop
    1164:	70 cf       	rjmp	.-288    	; 0x1046 <_Z8mainmenuv+0x38>
				lcd_puts(" ");
				lcd_setCursor(0,0);
				lcd_puts(">");
				state=0;
			}
			else if (in==ok)
    1166:	20 91 62 00 	lds	r18, 0x0062
    116a:	30 91 63 00 	lds	r19, 0x0063
    116e:	82 17       	cp	r24, r18
    1170:	93 07       	cpc	r25, r19
    1172:	79 f7       	brne	.-34     	; 0x1152 <_Z8mainmenuv+0x144>
    1174:	d1 cf       	rjmp	.-94     	; 0x1118 <_Z8mainmenuv+0x10a>
    1176:	20 91 62 00 	lds	r18, 0x0062
    117a:	30 91 63 00 	lds	r19, 0x0063
    117e:	82 17       	cp	r24, r18
    1180:	93 07       	cpc	r25, r19
    1182:	39 f7       	brne	.-50     	; 0x1152 <_Z8mainmenuv+0x144>
    1184:	df cf       	rjmp	.-66     	; 0x1144 <_Z8mainmenuv+0x136>

00001186 <main>:
	dfood[2]=food[2];
		

}
int main() {
	database_init_test();
    1186:	0e 94 3f 03 	call	0x67e	; 0x67e <_Z18database_init_testv>
	sei();
    118a:	78 94       	sei
	uart0_init(UART_BAUD_SELECT(9600,F_CPU));
    118c:	87 e6       	ldi	r24, 0x67	; 103
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	0e 94 1f 09 	call	0x123e	; 0x123e <_Z10uart0_initj>
	// set up the LCD's number of columns and rows:
	// pinMode(13,OUTPUT);
	
	DDRD&= ~(1<<s_zero);
    1194:	88 98       	cbi	0x11, 0	; 17
	DDRD&= ~(1<<s_one);
    1196:	89 98       	cbi	0x11, 1	; 17
   DDRD&= ~(1<<s_two);
    1198:	8a 98       	cbi	0x11, 2	; 17


	lcd_init();
    119a:	0e 94 91 00 	call	0x122	; 0x122 <_Z8lcd_initv>
	mainmenu();
    119e:	0e 94 07 08 	call	0x100e	; 0x100e <_Z8mainmenuv>

000011a2 <__vector_13>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
    11a2:	1f 92       	push	r1
    11a4:	0f 92       	push	r0
    11a6:	0f b6       	in	r0, 0x3f	; 63
    11a8:	0f 92       	push	r0
    11aa:	11 24       	eor	r1, r1
    11ac:	2f 93       	push	r18
    11ae:	8f 93       	push	r24
    11b0:	9f 93       	push	r25
    11b2:	ef 93       	push	r30
    11b4:	ff 93       	push	r31
    11b6:	8b b1       	in	r24, 0x0b	; 11
    11b8:	2c b1       	in	r18, 0x0c	; 12
    11ba:	88 71       	andi	r24, 0x18	; 24
    11bc:	e0 91 62 04 	lds	r30, 0x0462
    11c0:	ef 5f       	subi	r30, 0xFF	; 255
    11c2:	ef 71       	andi	r30, 0x1F	; 31
    11c4:	90 91 61 04 	lds	r25, 0x0461
    11c8:	e9 17       	cp	r30, r25
    11ca:	39 f0       	breq	.+14     	; 0x11da <__vector_13+0x38>
    11cc:	e0 93 62 04 	sts	0x0462, r30
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	eb 59       	subi	r30, 0x9B	; 155
    11d4:	fb 4f       	sbci	r31, 0xFB	; 251
    11d6:	20 83       	st	Z, r18
    11d8:	01 c0       	rjmp	.+2      	; 0x11dc <__vector_13+0x3a>
    11da:	82 e0       	ldi	r24, 0x02	; 2
    11dc:	80 93 60 04 	sts	0x0460, r24
    11e0:	ff 91       	pop	r31
    11e2:	ef 91       	pop	r30
    11e4:	9f 91       	pop	r25
    11e6:	8f 91       	pop	r24
    11e8:	2f 91       	pop	r18
    11ea:	0f 90       	pop	r0
    11ec:	0f be       	out	0x3f, r0	; 63
    11ee:	0f 90       	pop	r0
    11f0:	1f 90       	pop	r1
    11f2:	18 95       	reti

000011f4 <__vector_14>:
    11f4:	1f 92       	push	r1
    11f6:	0f 92       	push	r0
    11f8:	0f b6       	in	r0, 0x3f	; 63
    11fa:	0f 92       	push	r0
    11fc:	11 24       	eor	r1, r1
    11fe:	8f 93       	push	r24
    1200:	9f 93       	push	r25
    1202:	ef 93       	push	r30
    1204:	ff 93       	push	r31
    1206:	90 91 64 04 	lds	r25, 0x0464
    120a:	80 91 63 04 	lds	r24, 0x0463
    120e:	98 17       	cp	r25, r24
    1210:	61 f0       	breq	.+24     	; 0x122a <__vector_14+0x36>
    1212:	e0 91 63 04 	lds	r30, 0x0463
    1216:	ef 5f       	subi	r30, 0xFF	; 255
    1218:	ef 71       	andi	r30, 0x1F	; 31
    121a:	e0 93 63 04 	sts	0x0463, r30
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	eb 57       	subi	r30, 0x7B	; 123
    1222:	fb 4f       	sbci	r31, 0xFB	; 251
    1224:	80 81       	ld	r24, Z
    1226:	8c b9       	out	0x0c, r24	; 12
    1228:	01 c0       	rjmp	.+2      	; 0x122c <__vector_14+0x38>
    122a:	55 98       	cbi	0x0a, 5	; 10
    122c:	ff 91       	pop	r31
    122e:	ef 91       	pop	r30
    1230:	9f 91       	pop	r25
    1232:	8f 91       	pop	r24
    1234:	0f 90       	pop	r0
    1236:	0f be       	out	0x3f, r0	; 63
    1238:	0f 90       	pop	r0
    123a:	1f 90       	pop	r1
    123c:	18 95       	reti

0000123e <_Z10uart0_initj>:
    123e:	10 92 64 04 	sts	0x0464, r1
    1242:	10 92 63 04 	sts	0x0463, r1
    1246:	10 92 62 04 	sts	0x0462, r1
    124a:	10 92 61 04 	sts	0x0461, r1
    124e:	99 23       	and	r25, r25
    1250:	1c f4       	brge	.+6      	; 0x1258 <_Z10uart0_initj+0x1a>
    1252:	22 e0       	ldi	r18, 0x02	; 2
    1254:	2b b9       	out	0x0b, r18	; 11
    1256:	9f 77       	andi	r25, 0x7F	; 127
    1258:	90 bd       	out	0x20, r25	; 32
    125a:	89 b9       	out	0x09, r24	; 9
    125c:	88 e9       	ldi	r24, 0x98	; 152
    125e:	8a b9       	out	0x0a, r24	; 10
    1260:	86 e8       	ldi	r24, 0x86	; 134
    1262:	80 bd       	out	0x20, r24	; 32
    1264:	08 95       	ret

00001266 <_Z10uart0_getcv>:
    1266:	90 91 62 04 	lds	r25, 0x0462
    126a:	80 91 61 04 	lds	r24, 0x0461
    126e:	98 17       	cp	r25, r24
    1270:	91 f0       	breq	.+36     	; 0x1296 <_Z10uart0_getcv+0x30>
    1272:	e0 91 61 04 	lds	r30, 0x0461
    1276:	ef 5f       	subi	r30, 0xFF	; 255
    1278:	ef 71       	andi	r30, 0x1F	; 31
    127a:	e0 93 61 04 	sts	0x0461, r30
    127e:	f0 e0       	ldi	r31, 0x00	; 0
    1280:	eb 59       	subi	r30, 0x9B	; 155
    1282:	fb 4f       	sbci	r31, 0xFB	; 251
    1284:	20 81       	ld	r18, Z
    1286:	80 91 60 04 	lds	r24, 0x0460
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	98 2f       	mov	r25, r24
    128e:	88 27       	eor	r24, r24
    1290:	82 0f       	add	r24, r18
    1292:	91 1d       	adc	r25, r1
    1294:	08 95       	ret
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	91 e0       	ldi	r25, 0x01	; 1
    129a:	08 95       	ret

0000129c <_Z10uart0_putch>:
    129c:	20 91 64 04 	lds	r18, 0x0464
    12a0:	2f 5f       	subi	r18, 0xFF	; 255
    12a2:	2f 71       	andi	r18, 0x1F	; 31
    12a4:	90 91 63 04 	lds	r25, 0x0463
    12a8:	29 17       	cp	r18, r25
    12aa:	e1 f3       	breq	.-8      	; 0x12a4 <_Z10uart0_putch+0x8>
    12ac:	e2 2f       	mov	r30, r18
    12ae:	f0 e0       	ldi	r31, 0x00	; 0
    12b0:	eb 57       	subi	r30, 0x7B	; 123
    12b2:	fb 4f       	sbci	r31, 0xFB	; 251
    12b4:	80 83       	st	Z, r24
    12b6:	20 93 64 04 	sts	0x0464, r18
    12ba:	55 9a       	sbi	0x0a, 5	; 10
    12bc:	08 95       	ret

000012be <_Z12uart0_putinti>:
    12be:	0f 93       	push	r16
    12c0:	1f 93       	push	r17
    12c2:	cf 93       	push	r28
    12c4:	df 93       	push	r29
    12c6:	cd b7       	in	r28, 0x3d	; 61
    12c8:	de b7       	in	r29, 0x3e	; 62
    12ca:	2f 97       	sbiw	r28, 0x0f	; 15
    12cc:	0f b6       	in	r0, 0x3f	; 63
    12ce:	f8 94       	cli
    12d0:	de bf       	out	0x3e, r29	; 62
    12d2:	0f be       	out	0x3f, r0	; 63
    12d4:	cd bf       	out	0x3d, r28	; 61
    12d6:	4a e0       	ldi	r20, 0x0A	; 10
    12d8:	be 01       	movw	r22, r28
    12da:	6f 5f       	subi	r22, 0xFF	; 255
    12dc:	7f 4f       	sbci	r23, 0xFF	; 255
    12de:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <__itoa_ncheck>
    12e2:	89 81       	ldd	r24, Y+1	; 0x01
    12e4:	88 23       	and	r24, r24
    12e6:	51 f0       	breq	.+20     	; 0x12fc <_Z12uart0_putinti+0x3e>
    12e8:	8e 01       	movw	r16, r28
    12ea:	0e 5f       	subi	r16, 0xFE	; 254
    12ec:	1f 4f       	sbci	r17, 0xFF	; 255
    12ee:	0e 94 4e 09 	call	0x129c	; 0x129c <_Z10uart0_putch>
    12f2:	f8 01       	movw	r30, r16
    12f4:	81 91       	ld	r24, Z+
    12f6:	8f 01       	movw	r16, r30
    12f8:	81 11       	cpse	r24, r1
    12fa:	f9 cf       	rjmp	.-14     	; 0x12ee <_Z12uart0_putinti+0x30>
    12fc:	2f 96       	adiw	r28, 0x0f	; 15
    12fe:	0f b6       	in	r0, 0x3f	; 63
    1300:	f8 94       	cli
    1302:	de bf       	out	0x3e, r29	; 62
    1304:	0f be       	out	0x3f, r0	; 63
    1306:	cd bf       	out	0x3d, r28	; 61
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	0f 91       	pop	r16
    1310:	08 95       	ret

00001312 <_Z10uart0_putsPKc>:
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	ec 01       	movw	r28, r24
    1318:	88 81       	ld	r24, Y
    131a:	88 23       	and	r24, r24
    131c:	31 f0       	breq	.+12     	; 0x132a <_Z10uart0_putsPKc+0x18>
    131e:	21 96       	adiw	r28, 0x01	; 1
    1320:	0e 94 4e 09 	call	0x129c	; 0x129c <_Z10uart0_putch>
    1324:	89 91       	ld	r24, Y+
    1326:	81 11       	cpse	r24, r1
    1328:	fb cf       	rjmp	.-10     	; 0x1320 <_Z10uart0_putsPKc+0xe>
    132a:	df 91       	pop	r29
    132c:	cf 91       	pop	r28
    132e:	08 95       	ret

00001330 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
    1330:	80 91 62 04 	lds	r24, 0x0462
    1334:	20 91 61 04 	lds	r18, 0x0461
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	4f 96       	adiw	r24, 0x1f	; 31
    133c:	82 1b       	sub	r24, r18
    133e:	91 09       	sbc	r25, r1
    1340:	6f e1       	ldi	r22, 0x1F	; 31
    1342:	70 e0       	ldi	r23, 0x00	; 0
    1344:	0e 94 aa 09 	call	0x1354	; 0x1354 <__divmodhi4>
}/* uart_available */
    1348:	08 95       	ret

0000134a <_Z11uart0_flushv>:
 Input:    None
 Returns:  None
 **************************************************************************/
void uart0_flush(void)
{
	UART0_RxHead = UART0_RxTail;
    134a:	80 91 61 04 	lds	r24, 0x0461
    134e:	80 93 62 04 	sts	0x0462, r24
    1352:	08 95       	ret

00001354 <__divmodhi4>:
    1354:	97 fb       	bst	r25, 7
    1356:	07 2e       	mov	r0, r23
    1358:	16 f4       	brtc	.+4      	; 0x135e <__divmodhi4+0xa>
    135a:	00 94       	com	r0
    135c:	07 d0       	rcall	.+14     	; 0x136c <__divmodhi4_neg1>
    135e:	77 fd       	sbrc	r23, 7
    1360:	09 d0       	rcall	.+18     	; 0x1374 <__divmodhi4_neg2>
    1362:	0e 94 be 09 	call	0x137c	; 0x137c <__udivmodhi4>
    1366:	07 fc       	sbrc	r0, 7
    1368:	05 d0       	rcall	.+10     	; 0x1374 <__divmodhi4_neg2>
    136a:	3e f4       	brtc	.+14     	; 0x137a <__divmodhi4_exit>

0000136c <__divmodhi4_neg1>:
    136c:	90 95       	com	r25
    136e:	81 95       	neg	r24
    1370:	9f 4f       	sbci	r25, 0xFF	; 255
    1372:	08 95       	ret

00001374 <__divmodhi4_neg2>:
    1374:	70 95       	com	r23
    1376:	61 95       	neg	r22
    1378:	7f 4f       	sbci	r23, 0xFF	; 255

0000137a <__divmodhi4_exit>:
    137a:	08 95       	ret

0000137c <__udivmodhi4>:
    137c:	aa 1b       	sub	r26, r26
    137e:	bb 1b       	sub	r27, r27
    1380:	51 e1       	ldi	r21, 0x11	; 17
    1382:	07 c0       	rjmp	.+14     	; 0x1392 <__udivmodhi4_ep>

00001384 <__udivmodhi4_loop>:
    1384:	aa 1f       	adc	r26, r26
    1386:	bb 1f       	adc	r27, r27
    1388:	a6 17       	cp	r26, r22
    138a:	b7 07       	cpc	r27, r23
    138c:	10 f0       	brcs	.+4      	; 0x1392 <__udivmodhi4_ep>
    138e:	a6 1b       	sub	r26, r22
    1390:	b7 0b       	sbc	r27, r23

00001392 <__udivmodhi4_ep>:
    1392:	88 1f       	adc	r24, r24
    1394:	99 1f       	adc	r25, r25
    1396:	5a 95       	dec	r21
    1398:	a9 f7       	brne	.-22     	; 0x1384 <__udivmodhi4_loop>
    139a:	80 95       	com	r24
    139c:	90 95       	com	r25
    139e:	bc 01       	movw	r22, r24
    13a0:	cd 01       	movw	r24, r26
    13a2:	08 95       	ret

000013a4 <strcpy>:
    13a4:	fb 01       	movw	r30, r22
    13a6:	dc 01       	movw	r26, r24
    13a8:	01 90       	ld	r0, Z+
    13aa:	0d 92       	st	X+, r0
    13ac:	00 20       	and	r0, r0
    13ae:	e1 f7       	brne	.-8      	; 0x13a8 <strcpy+0x4>
    13b0:	08 95       	ret

000013b2 <__itoa_ncheck>:
    13b2:	bb 27       	eor	r27, r27
    13b4:	4a 30       	cpi	r20, 0x0A	; 10
    13b6:	31 f4       	brne	.+12     	; 0x13c4 <__itoa_ncheck+0x12>
    13b8:	99 23       	and	r25, r25
    13ba:	22 f4       	brpl	.+8      	; 0x13c4 <__itoa_ncheck+0x12>
    13bc:	bd e2       	ldi	r27, 0x2D	; 45
    13be:	90 95       	com	r25
    13c0:	81 95       	neg	r24
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__utoa_common>

000013c8 <__utoa_ncheck>:
    13c8:	bb 27       	eor	r27, r27

000013ca <__utoa_common>:
    13ca:	fb 01       	movw	r30, r22
    13cc:	55 27       	eor	r21, r21
    13ce:	aa 27       	eor	r26, r26
    13d0:	88 0f       	add	r24, r24
    13d2:	99 1f       	adc	r25, r25
    13d4:	aa 1f       	adc	r26, r26
    13d6:	a4 17       	cp	r26, r20
    13d8:	10 f0       	brcs	.+4      	; 0x13de <__utoa_common+0x14>
    13da:	a4 1b       	sub	r26, r20
    13dc:	83 95       	inc	r24
    13de:	50 51       	subi	r21, 0x10	; 16
    13e0:	b9 f7       	brne	.-18     	; 0x13d0 <__utoa_common+0x6>
    13e2:	a0 5d       	subi	r26, 0xD0	; 208
    13e4:	aa 33       	cpi	r26, 0x3A	; 58
    13e6:	08 f0       	brcs	.+2      	; 0x13ea <__utoa_common+0x20>
    13e8:	a9 5d       	subi	r26, 0xD9	; 217
    13ea:	a1 93       	st	Z+, r26
    13ec:	00 97       	sbiw	r24, 0x00	; 0
    13ee:	79 f7       	brne	.-34     	; 0x13ce <__utoa_common+0x4>
    13f0:	b1 11       	cpse	r27, r1
    13f2:	b1 93       	st	Z+, r27
    13f4:	11 92       	st	Z+, r1
    13f6:	cb 01       	movw	r24, r22
    13f8:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <strrev>

000013fc <strrev>:
    13fc:	dc 01       	movw	r26, r24
    13fe:	fc 01       	movw	r30, r24
    1400:	67 2f       	mov	r22, r23
    1402:	71 91       	ld	r23, Z+
    1404:	77 23       	and	r23, r23
    1406:	e1 f7       	brne	.-8      	; 0x1400 <strrev+0x4>
    1408:	32 97       	sbiw	r30, 0x02	; 2
    140a:	04 c0       	rjmp	.+8      	; 0x1414 <strrev+0x18>
    140c:	7c 91       	ld	r23, X
    140e:	6d 93       	st	X+, r22
    1410:	70 83       	st	Z, r23
    1412:	62 91       	ld	r22, -Z
    1414:	ae 17       	cp	r26, r30
    1416:	bf 07       	cpc	r27, r31
    1418:	c8 f3       	brcs	.-14     	; 0x140c <strrev+0x10>
    141a:	08 95       	ret

0000141c <_exit>:
    141c:	f8 94       	cli

0000141e <__stop_program>:
    141e:	ff cf       	rjmp	.-2      	; 0x141e <__stop_program>
