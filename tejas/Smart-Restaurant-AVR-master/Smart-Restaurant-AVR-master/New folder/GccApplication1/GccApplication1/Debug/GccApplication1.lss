
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000012fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b6  00800060  000012fc  00001390  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000038f  00800116  00800116  00001446  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001446  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001478  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  000014b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002e4a  00000000  00000000  00001654  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a9d  00000000  00000000  0000449e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001415  00000000  00000000  00004f3b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000494  00000000  00000000  00006350  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007e8  00000000  00000000  000067e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000138c  00000000  00000000  00006fcc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00008358  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__vector_13>
      38:	0c 94 d6 08 	jmp	0x11ac	; 0x11ac <__vector_14>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ef       	ldi	r30, 0xFC	; 252
      68:	f2 e1       	ldi	r31, 0x12	; 18
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 31       	cpi	r26, 0x16	; 22
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	24 e0       	ldi	r18, 0x04	; 4
      78:	a6 e1       	ldi	r26, 0x16	; 22
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 3a       	cpi	r26, 0xA5	; 165
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9f 08 	call	0x113e	; 0x113e <main>
      8a:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      92:	95 ed       	ldi	r25, 0xD5	; 213
      94:	9a 95       	dec	r25
      96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
      98:	00 00       	nop
#define	LCD_STROBE()	((CPORT |= (1 << EN)),(CPORT &= ~(1 << EN)))
static void lcd_write(uint8_t c)
{
	_delay_us(40);

	if(c & 0x80)
      9a:	88 23       	and	r24, r24
      9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
	DPORT |=  (1 << D7);
      9e:	da 9a       	sbi	0x1b, 2	; 27
      a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
	else
	DPORT &= ~(1 << D7);
      a2:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x40)
      a4:	86 ff       	sbrs	r24, 6
      a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
	DPORT |=  (1 << D6);
      a8:	db 9a       	sbi	0x1b, 3	; 27
      aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
	else
	DPORT &= ~(1 << D6);
      ac:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x20)
      ae:	85 ff       	sbrs	r24, 5
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
	DPORT |=  (1 << D5);
      b2:	dc 9a       	sbi	0x1b, 4	; 27
      b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
	else
	DPORT &= ~(1 << D5);
      b6:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x10)
      b8:	84 ff       	sbrs	r24, 4
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
	DPORT |=  (1 << D4);
      bc:	dd 9a       	sbi	0x1b, 5	; 27
      be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
	else
	DPORT &= ~(1 << D4);
      c0:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      c2:	de 9a       	sbi	0x1b, 6	; 27
      c4:	de 98       	cbi	0x1b, 6	; 27
	
	

	if(c & 0x08)
      c6:	83 ff       	sbrs	r24, 3
      c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
	
	DPORT |=  (1 << D7);
      ca:	da 9a       	sbi	0x1b, 2	; 27
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
	else
	DPORT &= ~(1 << D7);
      ce:	da 98       	cbi	0x1b, 2	; 27
	
	if(c & 0x04)
      d0:	82 ff       	sbrs	r24, 2
      d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
	DPORT |=  (1 << D6);
      d4:	db 9a       	sbi	0x1b, 3	; 27
      d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
	else
	DPORT &= ~(1 << D6);
      d8:	db 98       	cbi	0x1b, 3	; 27
	
	if(c & 0x02)
      da:	81 ff       	sbrs	r24, 1
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
	DPORT |=  (1 << D5);
      de:	dc 9a       	sbi	0x1b, 4	; 27
      e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
	else
	DPORT &= ~(1 << D5);
      e2:	dc 98       	cbi	0x1b, 4	; 27
	
	if(c & 0x01)
      e4:	80 ff       	sbrs	r24, 0
      e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
	DPORT |=  (1 << D4);
      e8:	dd 9a       	sbi	0x1b, 5	; 27
      ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
	else
	DPORT &= ~(1 << D4);
      ec:	dd 98       	cbi	0x1b, 5	; 27
	
	LCD_STROBE();
      ee:	de 9a       	sbi	0x1b, 6	; 27
      f0:	de 98       	cbi	0x1b, 6	; 27
      f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
#include "lcd.h"


void lcd_clear(void)
{
	CPORT &= ~(1 << RS);
      f4:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(1<<LCD_CLR);
      f6:	81 e0       	ldi	r24, 0x01	; 1
      f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      fc:	8f e3       	ldi	r24, 0x3F	; 63
      fe:	9f e1       	ldi	r25, 0x1F	; 31
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
     104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
     106:	00 00       	nop
     108:	08 95       	ret

0000010a <_Z8lcd_gotoh>:
	_delay_ms(2);
}

void lcd_goto(unsigned char pos)
{
	CPORT &= ~(1 << RS);
     10a:	df 98       	cbi	0x1b, 7	; 27
	lcd_write(0x80|pos);
     10c:	80 68       	ori	r24, 0x80	; 128
     10e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     112:	08 95       	ret

00000114 <_Z10lcd_gotoxyhh>:
}


void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     114:	90 e4       	ldi	r25, 0x40	; 64
     116:	69 9f       	mul	r22, r25
     118:	80 0d       	add	r24, r0
     11a:	11 24       	eor	r1, r1
     11c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_gotoh>
     120:	08 95       	ret

00000122 <_Z8lcd_initv>:
}

void lcd_init()
{
	DDR(CPORT) |= (1 << RS);
     122:	d7 9a       	sbi	0x1a, 7	; 26
	DDR(CPORT) |= (1 << EN);
     124:	d6 9a       	sbi	0x1a, 6	; 26
	
	DDR(DPORT) |= (1 << D7);
     126:	d2 9a       	sbi	0x1a, 2	; 26
	DDR(DPORT) |= (1 << D6);
     128:	d3 9a       	sbi	0x1a, 3	; 26
	DDR(DPORT) |= (1 << D5);
     12a:	d4 9a       	sbi	0x1a, 4	; 26
	DDR(DPORT) |= (1 << D4);
     12c:	d5 9a       	sbi	0x1a, 5	; 26
	
	CPORT &= ~(1 << RS);
     12e:	df 98       	cbi	0x1b, 7	; 27
	CPORT &= ~(1 << EN);
     130:	de 98       	cbi	0x1b, 6	; 27
     132:	8f e5       	ldi	r24, 0x5F	; 95
     134:	9a ee       	ldi	r25, 0xEA	; 234
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <_Z8lcd_initv+0x14>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <_Z8lcd_initv+0x1a>
     13c:	00 00       	nop
	
	_delay_ms(15);

	DPORT |= (1 << D4);
     13e:	dd 9a       	sbi	0x1b, 5	; 27
	DPORT |= (1 << D5);
     140:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     142:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     144:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     146:	de 9a       	sbi	0x1b, 6	; 27
     148:	de 98       	cbi	0x1b, 6	; 27
     14a:	8f e1       	ldi	r24, 0x1F	; 31
     14c:	9e e4       	ldi	r25, 0x4E	; 78
     14e:	01 97       	sbiw	r24, 0x01	; 1
     150:	f1 f7       	brne	.-4      	; 0x14e <_Z8lcd_initv+0x2c>
     152:	00 c0       	rjmp	.+0      	; 0x154 <_Z8lcd_initv+0x32>
     154:	00 00       	nop
	_delay_ms(5);
	LCD_STROBE();
     156:	de 9a       	sbi	0x1b, 6	; 27
     158:	de 98       	cbi	0x1b, 6	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     15a:	8f e1       	ldi	r24, 0x1F	; 31
     15c:	93 e0       	ldi	r25, 0x03	; 3
     15e:	01 97       	sbiw	r24, 0x01	; 1
     160:	f1 f7       	brne	.-4      	; 0x15e <_Z8lcd_initv+0x3c>
     162:	00 c0       	rjmp	.+0      	; 0x164 <_Z8lcd_initv+0x42>
     164:	00 00       	nop
	_delay_us(200);
	LCD_STROBE();
     166:	de 9a       	sbi	0x1b, 6	; 27
     168:	de 98       	cbi	0x1b, 6	; 27
     16a:	8f e1       	ldi	r24, 0x1F	; 31
     16c:	93 e0       	ldi	r25, 0x03	; 3
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <_Z8lcd_initv+0x4c>
     172:	00 c0       	rjmp	.+0      	; 0x174 <_Z8lcd_initv+0x52>
     174:	00 00       	nop
	_delay_us(200);
	
	
	DPORT &= ~(1 << D4);
     176:	dd 98       	cbi	0x1b, 5	; 27
	DPORT |=  (1 << D5);
     178:	dc 9a       	sbi	0x1b, 4	; 27
	DPORT &= ~(1 << D6);
     17a:	db 98       	cbi	0x1b, 3	; 27
	DPORT &= ~(1 << D7);
     17c:	da 98       	cbi	0x1b, 2	; 27
	
	LCD_STROBE();
     17e:	de 9a       	sbi	0x1b, 6	; 27
     180:	de 98       	cbi	0x1b, 6	; 27

	lcd_write(0x28);
     182:	88 e2       	ldi	r24, 0x28	; 40
     184:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_write(0b00001100);
     188:	8c e0       	ldi	r24, 0x0C	; 12
     18a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
	lcd_clear();
     18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_write(0x6);
     192:	86 e0       	ldi	r24, 0x06	; 6
     194:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     198:	08 95       	ret

0000019a <_Z8lcd_putsPKc>:
}

void lcd_puts(const char * s)
{
     19a:	cf 93       	push	r28
     19c:	df 93       	push	r29
     19e:	ec 01       	movw	r28, r24
	CPORT|= (1 << RS);
     1a0:	df 9a       	sbi	0x1b, 7	; 27
	while(*s)
     1a2:	88 81       	ld	r24, Y
     1a4:	88 23       	and	r24, r24
     1a6:	31 f0       	breq	.+12     	; 0x1b4 <_Z8lcd_putsPKc+0x1a>
     1a8:	21 96       	adiw	r28, 0x01	; 1
	lcd_write(*s++);
     1aa:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
}

void lcd_puts(const char * s)
{
	CPORT|= (1 << RS);
	while(*s)
     1ae:	89 91       	ld	r24, Y+
     1b0:	81 11       	cpse	r24, r1
     1b2:	fb cf       	rjmp	.-10     	; 0x1aa <_Z8lcd_putsPKc+0x10>
	lcd_write(*s++);
}
     1b4:	df 91       	pop	r29
     1b6:	cf 91       	pop	r28
     1b8:	08 95       	ret

000001ba <_Z8lcd_putcc>:

void lcd_putc(char x)
{
	CPORT|= (1 << RS);
     1ba:	df 9a       	sbi	0x1b, 7	; 27
	lcd_write(x);
     1bc:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
     1c0:	08 95       	ret

000001c2 <_Z7lcd_numi>:
}

void lcd_num(int in)
{
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	c4 56       	subi	r28, 0x64	; 100
     1d4:	d1 09       	sbc	r29, r1
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	f8 94       	cli
     1da:	de bf       	out	0x3e, r29	; 62
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	cd bf       	out	0x3d, r28	; 61
     1e0:	bc 01       	movw	r22, r24
     1e2:	ce 01       	movw	r24, r28
     1e4:	01 96       	adiw	r24, 0x01	; 1
     1e6:	7c 01       	movw	r14, r24
     1e8:	fc 01       	movw	r30, r24
	int c;
	char temp[100];
	int index=0;
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	10 e0       	ldi	r17, 0x00	; 0
	do
	{
		c=in%10;
     1ee:	2a e0       	ldi	r18, 0x0A	; 10
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	01 c0       	rjmp	.+2      	; 0x1f6 <_Z7lcd_numi+0x34>
		in=in/10;
		temp[index]=c+'0';
		index++;
     1f4:	8c 01       	movw	r16, r24
	char temp[100];
	int index=0;
	do
	{
		c=in%10;
		in=in/10;
     1f6:	cb 01       	movw	r24, r22
     1f8:	b9 01       	movw	r22, r18
     1fa:	0e 94 4d 09 	call	0x129a	; 0x129a <__divmodhi4>
		temp[index]=c+'0';
     1fe:	90 e3       	ldi	r25, 0x30	; 48
     200:	98 0f       	add	r25, r24
     202:	91 93       	st	Z+, r25
		index++;
     204:	c8 01       	movw	r24, r16
     206:	01 96       	adiw	r24, 0x01	; 1
void lcd_num(int in)
{
	int c;
	char temp[100];
	int index=0;
	do
     208:	61 15       	cp	r22, r1
     20a:	71 05       	cpc	r23, r1
     20c:	99 f7       	brne	.-26     	; 0x1f4 <_Z7lcd_numi+0x32>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     20e:	11 23       	and	r17, r17
     210:	64 f0       	brlt	.+24     	; 0x22a <_Z7lcd_numi+0x68>
     212:	0c 0f       	add	r16, r28
     214:	1d 1f       	adc	r17, r29
     216:	0e 5f       	subi	r16, 0xFE	; 254
     218:	1f 4f       	sbci	r17, 0xFF	; 255
	{
		lcd_putc(temp[i]);
     21a:	f8 01       	movw	r30, r16
     21c:	82 91       	ld	r24, -Z
     21e:	8f 01       	movw	r16, r30
     220:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z8lcd_putcc>
		in=in/10;
		temp[index]=c+'0';
		index++;
	}
	while (in!=0);
	for (int i=index-1;i>=0;i--)
     224:	0e 15       	cp	r16, r14
     226:	1f 05       	cpc	r17, r15
     228:	c1 f7       	brne	.-16     	; 0x21a <_Z7lcd_numi+0x58>
	{
		lcd_putc(temp[i]);
	}
}
     22a:	cc 59       	subi	r28, 0x9C	; 156
     22c:	df 4f       	sbci	r29, 0xFF	; 255
     22e:	0f b6       	in	r0, 0x3f	; 63
     230:	f8 94       	cli
     232:	de bf       	out	0x3e, r29	; 62
     234:	0f be       	out	0x3f, r0	; 63
     236:	cd bf       	out	0x3d, r28	; 61
     238:	df 91       	pop	r29
     23a:	cf 91       	pop	r28
     23c:	1f 91       	pop	r17
     23e:	0f 91       	pop	r16
     240:	ff 90       	pop	r15
     242:	ef 90       	pop	r14
     244:	08 95       	ret

00000246 <_Z13lcd_setCursorii>:
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
	}
     246:	92 e0       	ldi	r25, 0x02	; 2
     248:	96 1b       	sub	r25, r22
     24a:	69 2f       	mov	r22, r25
     24c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     250:	08 95       	ret

00000252 <_Z10uart0_getsPc>:
     252:	cf 92       	push	r12
     254:	df 92       	push	r13
     256:	ef 92       	push	r14
     258:	ff 92       	push	r15
     25a:	0f 93       	push	r16
     25c:	1f 93       	push	r17
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
     262:	cd b7       	in	r28, 0x3d	; 61
     264:	de b7       	in	r29, 0x3e	; 62
     266:	c4 56       	subi	r28, 0x64	; 100
     268:	d1 09       	sbc	r29, r1
     26a:	0f b6       	in	r0, 0x3f	; 63
     26c:	f8 94       	cli
     26e:	de bf       	out	0x3e, r29	; 62
     270:	0f be       	out	0x3f, r0	; 63
     272:	cd bf       	out	0x3d, r28	; 61
     274:	6c 01       	movw	r12, r24
     276:	ce 01       	movw	r24, r28
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	7c 01       	movw	r14, r24
     27c:	00 e0       	ldi	r16, 0x00	; 0
     27e:	10 e0       	ldi	r17, 0x00	; 0
     280:	01 c0       	rjmp	.+2      	; 0x284 <_Z10uart0_getsPc+0x32>
     282:	89 01       	movw	r16, r18
     284:	0e 94 3b 09 	call	0x1276	; 0x1276 <_Z15uart0_availablev>
     288:	89 2b       	or	r24, r25
     28a:	e1 f3       	breq	.-8      	; 0x284 <_Z10uart0_getsPc+0x32>
     28c:	0e 94 0f 09 	call	0x121e	; 0x121e <_Z10uart0_getcv>
     290:	f7 01       	movw	r30, r14
     292:	81 93       	st	Z+, r24
     294:	7f 01       	movw	r14, r30
     296:	98 01       	movw	r18, r16
     298:	2f 5f       	subi	r18, 0xFF	; 255
     29a:	3f 4f       	sbci	r19, 0xFF	; 255
     29c:	80 32       	cpi	r24, 0x20	; 32
     29e:	89 f7       	brne	.-30     	; 0x282 <_Z10uart0_getsPc+0x30>
     2a0:	e1 e0       	ldi	r30, 0x01	; 1
     2a2:	f0 e0       	ldi	r31, 0x00	; 0
     2a4:	ec 0f       	add	r30, r28
     2a6:	fd 1f       	adc	r31, r29
     2a8:	e0 0f       	add	r30, r16
     2aa:	f1 1f       	adc	r31, r17
     2ac:	10 82       	st	Z, r1
     2ae:	be 01       	movw	r22, r28
     2b0:	6f 5f       	subi	r22, 0xFF	; 255
     2b2:	7f 4f       	sbci	r23, 0xFF	; 255
     2b4:	c6 01       	movw	r24, r12
     2b6:	0e 94 75 09 	call	0x12ea	; 0x12ea <strcpy>
     2ba:	cc 59       	subi	r28, 0x9C	; 156
     2bc:	df 4f       	sbci	r29, 0xFF	; 255
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	f8 94       	cli
     2c2:	de bf       	out	0x3e, r29	; 62
     2c4:	0f be       	out	0x3f, r0	; 63
     2c6:	cd bf       	out	0x3d, r28	; 61
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	1f 91       	pop	r17
     2ce:	0f 91       	pop	r16
     2d0:	ff 90       	pop	r15
     2d2:	ef 90       	pop	r14
     2d4:	df 90       	pop	r13
     2d6:	cf 90       	pop	r12
     2d8:	08 95       	ret

000002da <_Z12uart0_getintv>:
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	00 d0       	rcall	.+0      	; 0x2e4 <_Z12uart0_getintv+0xa>
     2e4:	00 d0       	rcall	.+0      	; 0x2e6 <_Z12uart0_getintv+0xc>
     2e6:	1f 92       	push	r1
     2e8:	cd b7       	in	r28, 0x3d	; 61
     2ea:	de b7       	in	r29, 0x3e	; 62
     2ec:	8e 01       	movw	r16, r28
     2ee:	0f 5f       	subi	r16, 0xFF	; 255
     2f0:	1f 4f       	sbci	r17, 0xFF	; 255
     2f2:	c8 01       	movw	r24, r16
     2f4:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
     2f8:	d8 01       	movw	r26, r16
     2fa:	0d 90       	ld	r0, X+
     2fc:	00 20       	and	r0, r0
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <_Z12uart0_getintv+0x20>
     300:	f8 01       	movw	r30, r16
     302:	ad 01       	movw	r20, r26
     304:	41 50       	subi	r20, 0x01	; 1
     306:	51 09       	sbc	r21, r1
     308:	80 e0       	ldi	r24, 0x00	; 0
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	11 c0       	rjmp	.+34     	; 0x330 <_Z12uart0_getintv+0x56>
     30e:	9c 01       	movw	r18, r24
     310:	22 0f       	add	r18, r18
     312:	33 1f       	adc	r19, r19
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	88 0f       	add	r24, r24
     31a:	99 1f       	adc	r25, r25
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	82 0f       	add	r24, r18
     322:	93 1f       	adc	r25, r19
     324:	21 91       	ld	r18, Z+
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	20 53       	subi	r18, 0x30	; 48
     32a:	31 09       	sbc	r19, r1
     32c:	82 0f       	add	r24, r18
     32e:	93 1f       	adc	r25, r19
     330:	e4 17       	cp	r30, r20
     332:	f5 07       	cpc	r31, r21
     334:	61 f7       	brne	.-40     	; 0x30e <_Z12uart0_getintv+0x34>
     336:	0f 90       	pop	r0
     338:	0f 90       	pop	r0
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	1f 91       	pop	r17
     346:	0f 91       	pop	r16
     348:	08 95       	ret

0000034a <_Z12wait_messagev>:

    void wait_message()
    {
        lcd_clear();
     34a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
        lcd_puts("Please wait");
     34e:	8e e6       	ldi	r24, 0x6E	; 110
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     356:	08 95       	ret

00000358 <_Z5inputv>:
		return ans;
	}
	
	int digitalRead (int s)
	{
		return (PIND & (1<<s));
     358:	80 b3       	in	r24, 0x10	; 16
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
       if (digitalRead(s_zero))
     35a:	28 2f       	mov	r18, r24
     35c:	21 70       	andi	r18, 0x01	; 1
     35e:	30 e0       	ldi	r19, 0x00	; 0
        lcd_clear();
        lcd_puts("Please wait");
    }
   int input()
   {
       int a=0;
     360:	c9 01       	movw	r24, r18
       if (digitalRead(s_zero))
         a+=1;
       if (digitalRead(s_one))
     362:	81 99       	sbic	0x10, 1	; 16
         a+=10;
     364:	0a 96       	adiw	r24, 0x0a	; 10
       if (digitalRead(s_two))
     366:	82 9b       	sbis	0x10, 2	; 16
     368:	02 c0       	rjmp	.+4      	; 0x36e <_Z5inputv+0x16>
         a+=100;
     36a:	8c 59       	subi	r24, 0x9C	; 156
     36c:	9f 4f       	sbci	r25, 0xFF	; 255
       return(a);
   }
     36e:	08 95       	ret

00000370 <_Z15main_menu_printi>:

   void main_menu_print(int first_visit)
   {
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	ec 01       	movw	r28, r24
     lcd_clear();
     376:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     37a:	62 e0       	ldi	r22, 0x02	; 2
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

   void main_menu_print(int first_visit)
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     382:	8f eb       	ldi	r24, 0xBF	; 191
     384:	90 e0       	ldi	r25, 0x00	; 0
     386:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     38a:	62 e0       	ldi	r22, 0x02	; 2
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
   {
     lcd_clear();
     lcd_setCursor(0,0);
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");
     392:	8a e7       	ldi	r24, 0x7A	; 122
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     39a:	61 e0       	ldi	r22, 0x01	; 1
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     lcd_puts(" ");
     lcd_setCursor(0,0);
      lcd_puts(">");

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");
     3a2:	8c e7       	ldi	r24, 0x7C	; 124
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3aa:	62 e0       	ldi	r22, 0x02	; 2
     3ac:	82 e0       	ldi	r24, 0x02	; 2
     3ae:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

      lcd_setCursor(2, 1);
      lcd_puts("Selected Food");

      lcd_setCursor(2, 0);
      if (first_visit==1)
     3b2:	21 97       	sbiw	r28, 0x01	; 1
     3b4:	29 f4       	brne	.+10     	; 0x3c0 <_Z15main_menu_printi+0x50>
      lcd_puts("Change Food");
     3b6:	8a e8       	ldi	r24, 0x8A	; 138
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3be:	04 c0       	rjmp	.+8      	; 0x3c8 <_Z15main_menu_printi+0x58>
      else
      lcd_puts("Select Food");
     3c0:	86 e9       	ldi	r24, 0x96	; 150
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
   }
     3c8:	df 91       	pop	r29
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <_Z17clear_second_linev>:
                lcd_num(food[selected_pk].num);

     }

     void clear_second_line()
     {
     3ce:	cf 93       	push	r28
     3d0:	c0 e0       	ldi	r28, 0x00	; 0
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3d2:	61 e0       	ldi	r22, 0x01	; 1
     3d4:	8c 2f       	mov	r24, r28
     3d6:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
     3da:	8f eb       	ldi	r24, 0xBF	; 191
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     3e2:	cf 5f       	subi	r28, 0xFF	; 255

     }

     void clear_second_line()
     {
       for (int i=0;i<=15;i++)
     3e4:	c0 31       	cpi	r28, 0x10	; 16
     3e6:	a9 f7       	brne	.-22     	; 0x3d2 <_Z17clear_second_linev+0x4>
       {
         lcd_setCursor(i,1);
         lcd_puts(" ");
       }
     }
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <_Z17select_food_printi>:
      else
      lcd_puts("Select Food");
   }

   void select_food_print(int selected_pk)
     {
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	8c 01       	movw	r16, r24
               clear_second_line();
     3f6:	0e 94 e7 01 	call	0x3ce	; 0x3ce <_Z17clear_second_linev>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     3fa:	61 e0       	ldi	r22, 0x01	; 1
     3fc:	80 e0       	ldi	r24, 0x00	; 0
     3fe:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
               clear_second_line();

                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);
     402:	8c e1       	ldi	r24, 0x1C	; 28
     404:	80 9f       	mul	r24, r16
     406:	e0 01       	movw	r28, r0
     408:	81 9f       	mul	r24, r17
     40a:	d0 0d       	add	r29, r0
     40c:	11 24       	eor	r1, r1
     40e:	ce 01       	movw	r24, r28
     410:	88 5e       	subi	r24, 0xE8	; 232
     412:	9e 4f       	sbci	r25, 0xFE	; 254
     414:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	88 e0       	ldi	r24, 0x08	; 8
     41c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                lcd_setCursor(0,1);

                lcd_puts(food[selected_pk].name);

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);
     420:	ca 5e       	subi	r28, 0xEA	; 234
     422:	de 4f       	sbci	r29, 0xFE	; 254
     424:	8e 89       	ldd	r24, Y+22	; 0x16
     426:	9f 89       	ldd	r25, Y+23	; 0x17
     428:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     42c:	61 e0       	ldi	r22, 0x01	; 1
     42e:	8e e0       	ldi	r24, 0x0E	; 14
     430:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>

                lcd_setCursor(8,1);
                lcd_num(food[selected_pk].price);

                 lcd_setCursor(14,1);
                lcd_num(food[selected_pk].num);
     434:	88 8d       	ldd	r24, Y+24	; 0x18
     436:	99 8d       	ldd	r25, Y+25	; 0x19
     438:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

     }
     43c:	df 91       	pop	r29
     43e:	cf 91       	pop	r28
     440:	1f 91       	pop	r17
     442:	0f 91       	pop	r16
     444:	08 95       	ret

00000446 <_Z13cannot_cancelv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     446:	2f ef       	ldi	r18, 0xFF	; 255
     448:	35 ea       	ldi	r19, 0xA5	; 165
     44a:	4e e0       	ldi	r20, 0x0E	; 14
     44c:	21 50       	subi	r18, 0x01	; 1
     44e:	30 40       	sbci	r19, 0x00	; 0
     450:	40 40       	sbci	r20, 0x00	; 0
     452:	e1 f7       	brne	.-8      	; 0x44c <_Z13cannot_cancelv+0x6>
     454:	00 c0       	rjmp	.+0      	; 0x456 <_Z13cannot_cancelv+0x10>
     456:	00 00       	nop
     }

     void cannot_cancel()
     {
		  _delay_ms(DELAY_TIME_STRAIGHT_START);
          lcd_clear();
     458:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
         lcd_puts(" Cannot Cancel ");
     45c:	82 ea       	ldi	r24, 0xA2	; 162
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     464:	61 e0       	ldi	r22, 0x01	; 1
     466:	86 e0       	ldi	r24, 0x06	; 6
     468:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     {
		  _delay_ms(DELAY_TIME_STRAIGHT_START);
          lcd_clear();
         lcd_puts(" Cannot Cancel ");
         lcd_setCursor(6,1);
         lcd_puts(">Ok");
     46c:	82 eb       	ldi	r24, 0xB2	; 178
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
         while(1)
           {
             int in=input();
     474:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			 if (in !=0)
     478:	00 97       	sbiw	r24, 0x00	; 0
     47a:	e1 f3       	breq	.-8      	; 0x474 <_Z13cannot_cancelv+0x2e>
     47c:	2f ef       	ldi	r18, 0xFF	; 255
     47e:	36 e7       	ldi	r19, 0x76	; 118
     480:	41 e0       	ldi	r20, 0x01	; 1
     482:	21 50       	subi	r18, 0x01	; 1
     484:	30 40       	sbci	r19, 0x00	; 0
     486:	40 40       	sbci	r20, 0x00	; 0
     488:	e1 f7       	brne	.-8      	; 0x482 <_Z13cannot_cancelv+0x3c>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <_Z13cannot_cancelv+0x46>
     48c:	00 00       	nop
			 {
				 _delay_ms(DELAY_BOUNCE);
             if (in == ok)
     48e:	20 91 62 00 	lds	r18, 0x0062
     492:	30 91 63 00 	lds	r19, 0x0063
     496:	82 17       	cp	r24, r18
     498:	93 07       	cpc	r25, r19
     49a:	51 f0       	breq	.+20     	; 0x4b0 <_Z13cannot_cancelv+0x6a>
     49c:	8f ef       	ldi	r24, 0xFF	; 255
     49e:	95 ea       	ldi	r25, 0xA5	; 165
     4a0:	2e e0       	ldi	r18, 0x0E	; 14
     4a2:	81 50       	subi	r24, 0x01	; 1
     4a4:	90 40       	sbci	r25, 0x00	; 0
     4a6:	20 40       	sbci	r18, 0x00	; 0
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <_Z13cannot_cancelv+0x5c>
     4aa:	00 c0       	rjmp	.+0      	; 0x4ac <_Z13cannot_cancelv+0x66>
     4ac:	00 00       	nop
     4ae:	e2 cf       	rjmp	.-60     	; 0x474 <_Z13cannot_cancelv+0x2e>
     4b0:	08 95       	ret

000004b2 <_Z16display_message1PKc>:
		 }
     }

     //confirmation messages
     int display_message1(char const *s)
       {
     4b2:	ef 92       	push	r14
     4b4:	ff 92       	push	r15
     4b6:	0f 93       	push	r16
     4b8:	1f 93       	push	r17
     4ba:	cf 93       	push	r28
     4bc:	df 93       	push	r29
     4be:	ec 01       	movw	r28, r24
           lcd_clear();
     4c0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
           lcd_puts(s);
     4c4:	ce 01       	movw	r24, r28
     4c6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4ca:	61 e0       	ldi	r22, 0x01	; 1
     4cc:	82 e0       	ldi	r24, 0x02	; 2
     4ce:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
     int display_message1(char const *s)
       {
           lcd_clear();
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");
     4d2:	86 eb       	ldi	r24, 0xB6	; 182
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     4da:	61 e0       	ldi	r22, 0x01	; 1
     4dc:	8c e0       	ldi	r24, 0x0C	; 12
     4de:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
           lcd_puts(s);
           lcd_setCursor(2,1);
           lcd_puts(">Yes");

           lcd_setCursor(12,1);
           lcd_puts("No");
     4e2:	8b eb       	ldi	r24, 0xBB	; 187
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     4ea:	2f ef       	ldi	r18, 0xFF	; 255
     4ec:	85 ea       	ldi	r24, 0xA5	; 165
     4ee:	9e e0       	ldi	r25, 0x0E	; 14
     4f0:	21 50       	subi	r18, 0x01	; 1
     4f2:	80 40       	sbci	r24, 0x00	; 0
     4f4:	90 40       	sbci	r25, 0x00	; 0
     4f6:	e1 f7       	brne	.-8      	; 0x4f0 <_Z16display_message1PKc+0x3e>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <_Z16display_message1PKc+0x48>
     4fa:	00 00       	nop
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
     4fc:	c1 e0       	ldi	r28, 0x01	; 1
     4fe:	d0 e0       	ldi	r29, 0x00	; 0
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
                         state=1;
     500:	01 e0       	ldi	r16, 0x01	; 1
     502:	10 e0       	ldi	r17, 0x00	; 0
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
                         state=0;
     504:	e1 2c       	mov	r14, r1
     506:	f1 2c       	mov	r15, r1
           _delay_ms(DELAY_TIME_STRAIGHT_START);

           int state=1;
           while(1)
              {
                    int in=input();
     508:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                  //  lcd_puts (in);
				  if (in !=0)
     50c:	89 2b       	or	r24, r25
     50e:	e1 f3       	breq	.-8      	; 0x508 <_Z16display_message1PKc+0x56>
     510:	2f ef       	ldi	r18, 0xFF	; 255
     512:	86 e7       	ldi	r24, 0x76	; 118
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	21 50       	subi	r18, 0x01	; 1
     518:	80 40       	sbci	r24, 0x00	; 0
     51a:	90 40       	sbci	r25, 0x00	; 0
     51c:	e1 f7       	brne	.-8      	; 0x516 <_Z16display_message1PKc+0x64>
     51e:	00 c0       	rjmp	.+0      	; 0x520 <_Z16display_message1PKc+0x6e>
     520:	00 00       	nop
				  {
					  _delay_ms(DELAY_BOUNCE);
					  in =input();
     522:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
                   if (state==1&& (in==left ||in==right))
     526:	c1 30       	cpi	r28, 0x01	; 1
     528:	d1 05       	cpc	r29, r1
     52a:	09 f5       	brne	.+66     	; 0x56e <_Z16display_message1PKc+0xbc>
     52c:	20 91 66 00 	lds	r18, 0x0066
     530:	30 91 67 00 	lds	r19, 0x0067
     534:	82 17       	cp	r24, r18
     536:	93 07       	cpc	r25, r19
     538:	39 f0       	breq	.+14     	; 0x548 <_Z16display_message1PKc+0x96>
     53a:	20 91 68 00 	lds	r18, 0x0068
     53e:	30 91 69 00 	lds	r19, 0x0069
     542:	82 17       	cp	r24, r18
     544:	93 07       	cpc	r25, r19
     546:	b1 f5       	brne	.+108    	; 0x5b4 <_Z16display_message1PKc+0x102>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     548:	61 e0       	ldi	r22, 0x01	; 1
     54a:	82 e0       	ldi	r24, 0x02	; 2
     54c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
					  _delay_ms(DELAY_BOUNCE);
					  in =input();
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
     550:	8f eb       	ldi	r24, 0xBF	; 191
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     558:	61 e0       	ldi	r22, 0x01	; 1
     55a:	8b e0       	ldi	r24, 0x0B	; 11
     55c:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   if (state==1&& (in==left ||in==right))
                     {
                        lcd_setCursor(2,1);
                        lcd_puts(" ");
                        lcd_setCursor(11,1);
                         lcd_puts(">");
     560:	8a e7       	ldi	r24, 0x7A	; 122
     562:	90 e0       	ldi	r25, 0x00	; 0
     564:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=0;
     568:	ce 2d       	mov	r28, r14
     56a:	df 2d       	mov	r29, r15
     56c:	2a c0       	rjmp	.+84     	; 0x5c2 <_Z16display_message1PKc+0x110>
                      }
                   else if (state==0 && (in==left ||in==right))
     56e:	20 97       	sbiw	r28, 0x00	; 0
     570:	09 f5       	brne	.+66     	; 0x5b4 <_Z16display_message1PKc+0x102>
     572:	20 91 66 00 	lds	r18, 0x0066
     576:	30 91 67 00 	lds	r19, 0x0067
     57a:	82 17       	cp	r24, r18
     57c:	93 07       	cpc	r25, r19
     57e:	39 f0       	breq	.+14     	; 0x58e <_Z16display_message1PKc+0xdc>
     580:	20 91 68 00 	lds	r18, 0x0068
     584:	30 91 69 00 	lds	r19, 0x0069
     588:	82 17       	cp	r24, r18
     58a:	93 07       	cpc	r25, r19
     58c:	99 f4       	brne	.+38     	; 0x5b4 <_Z16display_message1PKc+0x102>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	8b e0       	ldi	r24, 0x0B	; 11
     592:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                         state=0;
                      }
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
     596:	8f eb       	ldi	r24, 0xBF	; 191
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
foods dfood[15];

void lcd_setCursor(int x,int y)
{
	
	lcd_gotoxy(x,(1-y)+1);
     59e:	61 e0       	ldi	r22, 0x01	; 1
     5a0:	82 e0       	ldi	r24, 0x02	; 2
     5a2:	0e 94 8a 00 	call	0x114	; 0x114 <_Z10lcd_gotoxyhh>
                   else if (state==0 && (in==left ||in==right))
                  {
                        lcd_setCursor(11,1);
                        lcd_puts(" ");
                        lcd_setCursor(2,1);
                         lcd_puts(">");
     5a6:	8a e7       	ldi	r24, 0x7A	; 122
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
                         state=1;
     5ae:	c0 2f       	mov	r28, r16
     5b0:	d1 2f       	mov	r29, r17
     5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <_Z16display_message1PKc+0x110>
                      }
                  else if (in==ok)
     5b4:	20 91 62 00 	lds	r18, 0x0062
     5b8:	30 91 63 00 	lds	r19, 0x0063
     5bc:	82 17       	cp	r24, r18
     5be:	93 07       	cpc	r25, r19
     5c0:	51 f0       	breq	.+20     	; 0x5d6 <_Z16display_message1PKc+0x124>
     5c2:	8f ef       	ldi	r24, 0xFF	; 255
     5c4:	95 ea       	ldi	r25, 0xA5	; 165
     5c6:	2e e0       	ldi	r18, 0x0E	; 14
     5c8:	81 50       	subi	r24, 0x01	; 1
     5ca:	90 40       	sbci	r25, 0x00	; 0
     5cc:	20 40       	sbci	r18, 0x00	; 0
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <_Z16display_message1PKc+0x116>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <_Z16display_message1PKc+0x120>
     5d2:	00 00       	nop
     5d4:	99 cf       	rjmp	.-206    	; 0x508 <_Z16display_message1PKc+0x56>

                   _delay_ms(DELAY_TIME_LOOP);
				  }
               }
				
       }
     5d6:	ce 01       	movw	r24, r28
     5d8:	df 91       	pop	r29
     5da:	cf 91       	pop	r28
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	08 95       	ret

000005e6 <_Z8get_infov>:




void get_info()
{
     5e6:	0f 93       	push	r16
     5e8:	1f 93       	push	r17
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
	uart0_flush();
     5ee:	0e 94 48 09 	call	0x1290	; 0x1290 <_Z11uart0_flushv>
  uart0_putc('1');
     5f2:	81 e3       	ldi	r24, 0x31	; 49
     5f4:	0e 94 2a 09 	call	0x1254	; 0x1254 <_Z10uart0_putch>
  while (!(uart0_available()) ) {}
     5f8:	0e 94 3b 09 	call	0x1276	; 0x1276 <_Z15uart0_availablev>
     5fc:	89 2b       	or	r24, r25
     5fe:	e1 f3       	breq	.-8      	; 0x5f8 <_Z8get_infov+0x12>
  num_of_food=uart0_getint();
     600:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     604:	90 93 5f 04 	sts	0x045F, r25
     608:	80 93 5e 04 	sts	0x045E, r24
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     60c:	18 16       	cp	r1, r24
     60e:	19 06       	cpc	r1, r25
     610:	1c f5       	brge	.+70     	; 0x658 <_Z8get_infov+0x72>
     612:	c8 e1       	ldi	r28, 0x18	; 24
     614:	d1 e0       	ldi	r29, 0x01	; 1
     616:	00 e0       	ldi	r16, 0x00	; 0
     618:	10 e0       	ldi	r17, 0x00	; 0
{
    //  Serial.puts("Start");
      food[i].id=uart0_getint();
     61a:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     61e:	fe 01       	movw	r30, r28
     620:	32 97       	sbiw	r30, 0x02	; 2
     622:	91 83       	std	Z+1, r25	; 0x01
     624:	80 83       	st	Z, r24
      uart0_gets(food[i].name);
     626:	ce 01       	movw	r24, r28
     628:	0e 94 29 01 	call	0x252	; 0x252 <_Z10uart0_getsPc>
      food[i].price=uart0_getint();
     62c:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     630:	9d 8b       	std	Y+21, r25	; 0x15
     632:	8c 8b       	std	Y+20, r24	; 0x14
      food[i].num=uart0_getint();
     634:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     638:	9f 8b       	std	Y+23, r25	; 0x17
     63a:	8e 8b       	std	Y+22, r24	; 0x16
      food[i].p=uart0_getint();
     63c:	0e 94 6d 01 	call	0x2da	; 0x2da <_Z12uart0_getintv>
     640:	99 8f       	std	Y+25, r25	; 0x19
     642:	88 8f       	std	Y+24, r24	; 0x18
  while (!(uart0_available()) ) {}
  num_of_food=uart0_getint();
//  Serial.puts (num+1);

  //Serial.puts(a);
for (int i=0;i<num_of_food;i++)
     644:	0f 5f       	subi	r16, 0xFF	; 255
     646:	1f 4f       	sbci	r17, 0xFF	; 255
     648:	6c 96       	adiw	r28, 0x1c	; 28
     64a:	80 91 5e 04 	lds	r24, 0x045E
     64e:	90 91 5f 04 	lds	r25, 0x045F
     652:	08 17       	cp	r16, r24
     654:	19 07       	cpc	r17, r25
     656:	0c f3       	brlt	.-62     	; 0x61a <_Z8get_infov+0x34>
  }

  // Serial.putsln("Done");


}
     658:	df 91       	pop	r29
     65a:	cf 91       	pop	r28
     65c:	1f 91       	pop	r17
     65e:	0f 91       	pop	r16
     660:	08 95       	ret

00000662 <_Z18database_init_testv>:
     662:	cf 93       	push	r28
     664:	df 93       	push	r29
     666:	cd b7       	in	r28, 0x3d	; 61
     668:	de b7       	in	r29, 0x3e	; 62
     66a:	c4 55       	subi	r28, 0x54	; 84
     66c:	d1 09       	sbc	r29, r1
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	f8 94       	cli
     672:	de bf       	out	0x3e, r29	; 62
     674:	0f be       	out	0x3f, r0	; 63
     676:	cd bf       	out	0x3d, r28	; 61
     678:	81 e0       	ldi	r24, 0x01	; 1
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	9a af       	std	Y+58, r25	; 0x3a
     67e:	89 af       	std	Y+57, r24	; 0x39
     680:	25 e0       	ldi	r18, 0x05	; 5
     682:	e1 ec       	ldi	r30, 0xC1	; 193
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	de 01       	movw	r26, r28
     688:	db 96       	adiw	r26, 0x3b	; 59
     68a:	01 90       	ld	r0, Z+
     68c:	0d 92       	st	X+, r0
     68e:	2a 95       	dec	r18
     690:	e1 f7       	brne	.-8      	; 0x68a <_Z18database_init_testv+0x28>
     692:	24 e6       	ldi	r18, 0x64	; 100
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	61 96       	adiw	r28, 0x11	; 17
     698:	3f af       	std	Y+63, r19	; 0x3f
     69a:	2e af       	std	Y+62, r18	; 0x3e
     69c:	61 97       	sbiw	r28, 0x11	; 17
     69e:	63 96       	adiw	r28, 0x13	; 19
     6a0:	1f ae       	std	Y+63, r1	; 0x3f
     6a2:	1e ae       	std	Y+62, r1	; 0x3e
     6a4:	63 97       	sbiw	r28, 0x13	; 19
     6a6:	65 96       	adiw	r28, 0x15	; 21
     6a8:	1f ae       	std	Y+63, r1	; 0x3f
     6aa:	1e ae       	std	Y+62, r1	; 0x3e
     6ac:	65 97       	sbiw	r28, 0x15	; 21
     6ae:	2c e1       	ldi	r18, 0x1C	; 28
     6b0:	fe 01       	movw	r30, r28
     6b2:	f9 96       	adiw	r30, 0x39	; 57
     6b4:	aa eb       	ldi	r26, 0xBA	; 186
     6b6:	b2 e0       	ldi	r27, 0x02	; 2
     6b8:	01 90       	ld	r0, Z+
     6ba:	0d 92       	st	X+, r0
     6bc:	2a 95       	dec	r18
     6be:	e1 f7       	brne	.-8      	; 0x6b8 <_Z18database_init_testv+0x56>
     6c0:	22 e0       	ldi	r18, 0x02	; 2
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	3e 8f       	std	Y+30, r19	; 0x1e
     6c6:	2d 8f       	std	Y+29, r18	; 0x1d
     6c8:	25 e0       	ldi	r18, 0x05	; 5
     6ca:	e6 ec       	ldi	r30, 0xC6	; 198
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	de 01       	movw	r26, r28
     6d0:	5f 96       	adiw	r26, 0x1f	; 31
     6d2:	01 90       	ld	r0, Z+
     6d4:	0d 92       	st	X+, r0
     6d6:	2a 95       	dec	r18
     6d8:	e1 f7       	brne	.-8      	; 0x6d2 <_Z18database_init_testv+0x70>
     6da:	28 ec       	ldi	r18, 0xC8	; 200
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	3c ab       	std	Y+52, r19	; 0x34
     6e0:	2b ab       	std	Y+51, r18	; 0x33
     6e2:	1e aa       	std	Y+54, r1	; 0x36
     6e4:	1d aa       	std	Y+53, r1	; 0x35
     6e6:	98 af       	std	Y+56, r25	; 0x38
     6e8:	8f ab       	std	Y+55, r24	; 0x37
     6ea:	8c e1       	ldi	r24, 0x1C	; 28
     6ec:	fe 01       	movw	r30, r28
     6ee:	7d 96       	adiw	r30, 0x1d	; 29
     6f0:	a6 ed       	ldi	r26, 0xD6	; 214
     6f2:	b2 e0       	ldi	r27, 0x02	; 2
     6f4:	01 90       	ld	r0, Z+
     6f6:	0d 92       	st	X+, r0
     6f8:	8a 95       	dec	r24
     6fa:	e1 f7       	brne	.-8      	; 0x6f4 <_Z18database_init_testv+0x92>
     6fc:	83 e0       	ldi	r24, 0x03	; 3
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	9a 83       	std	Y+2, r25	; 0x02
     702:	89 83       	std	Y+1, r24	; 0x01
     704:	85 e0       	ldi	r24, 0x05	; 5
     706:	e5 e8       	ldi	r30, 0x85	; 133
     708:	f0 e0       	ldi	r31, 0x00	; 0
     70a:	de 01       	movw	r26, r28
     70c:	13 96       	adiw	r26, 0x03	; 3
     70e:	01 90       	ld	r0, Z+
     710:	0d 92       	st	X+, r0
     712:	8a 95       	dec	r24
     714:	e1 f7       	brne	.-8      	; 0x70e <_Z18database_init_testv+0xac>
     716:	8c e2       	ldi	r24, 0x2C	; 44
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	98 8f       	std	Y+24, r25	; 0x18
     71c:	8f 8b       	std	Y+23, r24	; 0x17
     71e:	1a 8e       	std	Y+26, r1	; 0x1a
     720:	19 8e       	std	Y+25, r1	; 0x19
     722:	1c 8e       	std	Y+28, r1	; 0x1c
     724:	1b 8e       	std	Y+27, r1	; 0x1b
     726:	8c e1       	ldi	r24, 0x1C	; 28
     728:	fe 01       	movw	r30, r28
     72a:	31 96       	adiw	r30, 0x01	; 1
     72c:	a2 ef       	ldi	r26, 0xF2	; 242
     72e:	b2 e0       	ldi	r27, 0x02	; 2
     730:	01 90       	ld	r0, Z+
     732:	0d 92       	st	X+, r0
     734:	8a 95       	dec	r24
     736:	e1 f7       	brne	.-8      	; 0x730 <_Z18database_init_testv+0xce>
     738:	cc 5a       	subi	r28, 0xAC	; 172
     73a:	df 4f       	sbci	r29, 0xFF	; 255
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	f8 94       	cli
     740:	de bf       	out	0x3e, r29	; 62
     742:	0f be       	out	0x3f, r0	; 63
     744:	cd bf       	out	0x3d, r28	; 61
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <_Z13get_info_testv>:
     74c:	8c e1       	ldi	r24, 0x1C	; 28
     74e:	ea eb       	ldi	r30, 0xBA	; 186
     750:	f2 e0       	ldi	r31, 0x02	; 2
     752:	a6 e1       	ldi	r26, 0x16	; 22
     754:	b1 e0       	ldi	r27, 0x01	; 1
     756:	01 90       	ld	r0, Z+
     758:	0d 92       	st	X+, r0
     75a:	8a 95       	dec	r24
     75c:	e1 f7       	brne	.-8      	; 0x756 <_Z13get_info_testv+0xa>
     75e:	8c e1       	ldi	r24, 0x1C	; 28
     760:	e6 ed       	ldi	r30, 0xD6	; 214
     762:	f2 e0       	ldi	r31, 0x02	; 2
     764:	a2 e3       	ldi	r26, 0x32	; 50
     766:	b1 e0       	ldi	r27, 0x01	; 1
     768:	01 90       	ld	r0, Z+
     76a:	0d 92       	st	X+, r0
     76c:	8a 95       	dec	r24
     76e:	e1 f7       	brne	.-8      	; 0x768 <_Z13get_info_testv+0x1c>
     770:	8c e1       	ldi	r24, 0x1C	; 28
     772:	e2 ef       	ldi	r30, 0xF2	; 242
     774:	f2 e0       	ldi	r31, 0x02	; 2
     776:	ae e4       	ldi	r26, 0x4E	; 78
     778:	b1 e0       	ldi	r27, 0x01	; 1
     77a:	01 90       	ld	r0, Z+
     77c:	0d 92       	st	X+, r0
     77e:	8a 95       	dec	r24
     780:	e1 f7       	brne	.-8      	; 0x77a <_Z13get_info_testv+0x2e>
     782:	83 e0       	ldi	r24, 0x03	; 3
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	90 93 5f 04 	sts	0x045F, r25
     78a:	80 93 5e 04 	sts	0x045E, r24
     78e:	08 95       	ret

00000790 <_Z14send_info_testv>:
     790:	8c e1       	ldi	r24, 0x1C	; 28
     792:	e6 e1       	ldi	r30, 0x16	; 22
     794:	f1 e0       	ldi	r31, 0x01	; 1
     796:	aa eb       	ldi	r26, 0xBA	; 186
     798:	b2 e0       	ldi	r27, 0x02	; 2
     79a:	01 90       	ld	r0, Z+
     79c:	0d 92       	st	X+, r0
     79e:	8a 95       	dec	r24
     7a0:	e1 f7       	brne	.-8      	; 0x79a <_Z14send_info_testv+0xa>
     7a2:	8c e1       	ldi	r24, 0x1C	; 28
     7a4:	e2 e3       	ldi	r30, 0x32	; 50
     7a6:	f1 e0       	ldi	r31, 0x01	; 1
     7a8:	a6 ed       	ldi	r26, 0xD6	; 214
     7aa:	b2 e0       	ldi	r27, 0x02	; 2
     7ac:	01 90       	ld	r0, Z+
     7ae:	0d 92       	st	X+, r0
     7b0:	8a 95       	dec	r24
     7b2:	e1 f7       	brne	.-8      	; 0x7ac <_Z14send_info_testv+0x1c>
     7b4:	8c e1       	ldi	r24, 0x1C	; 28
     7b6:	ee e4       	ldi	r30, 0x4E	; 78
     7b8:	f1 e0       	ldi	r31, 0x01	; 1
     7ba:	a2 ef       	ldi	r26, 0xF2	; 242
     7bc:	b2 e0       	ldi	r27, 0x02	; 2
     7be:	01 90       	ld	r0, Z+
     7c0:	0d 92       	st	X+, r0
     7c2:	8a 95       	dec	r24
     7c4:	e1 f7       	brne	.-8      	; 0x7be <_Z14send_info_testv+0x2e>
     7c6:	08 95       	ret

000007c8 <_Z11select_foodv>:
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     7d2:	0e 94 a6 03 	call	0x74c	; 0x74c <_Z13get_info_testv>
     7d6:	2f ef       	ldi	r18, 0xFF	; 255
     7d8:	85 ea       	ldi	r24, 0xA5	; 165
     7da:	9e e0       	ldi	r25, 0x0E	; 14
     7dc:	21 50       	subi	r18, 0x01	; 1
     7de:	80 40       	sbci	r24, 0x00	; 0
     7e0:	90 40       	sbci	r25, 0x00	; 0
     7e2:	e1 f7       	brne	.-8      	; 0x7dc <_Z11select_foodv+0x14>
     7e4:	00 c0       	rjmp	.+0      	; 0x7e6 <_Z11select_foodv+0x1e>
     7e6:	00 00       	nop
     7e8:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     7ec:	85 e8       	ldi	r24, 0x85	; 133
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     7f4:	60 e0       	ldi	r22, 0x00	; 0
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	88 e0       	ldi	r24, 0x08	; 8
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     800:	8b ec       	ldi	r24, 0xCB	; 203
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     808:	60 e0       	ldi	r22, 0x00	; 0
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	8e e0       	ldi	r24, 0x0E	; 14
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     814:	8b eb       	ldi	r24, 0xBB	; 187
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     81c:	61 e0       	ldi	r22, 0x01	; 1
     81e:	70 e0       	ldi	r23, 0x00	; 0
     820:	80 e0       	ldi	r24, 0x00	; 0
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     828:	88 e1       	ldi	r24, 0x18	; 24
     82a:	91 e0       	ldi	r25, 0x01	; 1
     82c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     830:	61 e0       	ldi	r22, 0x01	; 1
     832:	70 e0       	ldi	r23, 0x00	; 0
     834:	88 e0       	ldi	r24, 0x08	; 8
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     83c:	c6 e1       	ldi	r28, 0x16	; 22
     83e:	d1 e0       	ldi	r29, 0x01	; 1
     840:	8e 89       	ldd	r24, Y+22	; 0x16
     842:	9f 89       	ldd	r25, Y+23	; 0x17
     844:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     848:	61 e0       	ldi	r22, 0x01	; 1
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	8e e0       	ldi	r24, 0x0E	; 14
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     854:	88 8d       	ldd	r24, Y+24	; 0x18
     856:	99 8d       	ldd	r25, Y+25	; 0x19
     858:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     85c:	c0 e0       	ldi	r28, 0x00	; 0
     85e:	d0 e0       	ldi	r29, 0x00	; 0
     860:	1c e1       	ldi	r17, 0x1C	; 28
     862:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     866:	89 2b       	or	r24, r25
     868:	e1 f3       	breq	.-8      	; 0x862 <__stack+0x3>
     86a:	2f ef       	ldi	r18, 0xFF	; 255
     86c:	86 e7       	ldi	r24, 0x76	; 118
     86e:	91 e0       	ldi	r25, 0x01	; 1
     870:	21 50       	subi	r18, 0x01	; 1
     872:	80 40       	sbci	r24, 0x00	; 0
     874:	90 40       	sbci	r25, 0x00	; 0
     876:	e1 f7       	brne	.-8      	; 0x870 <__stack+0x11>
     878:	00 c0       	rjmp	.+0      	; 0x87a <__stack+0x1b>
     87a:	00 00       	nop
     87c:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     880:	20 91 6c 00 	lds	r18, 0x006C
     884:	30 91 6d 00 	lds	r19, 0x006D
     888:	82 17       	cp	r24, r18
     88a:	93 07       	cpc	r25, r19
     88c:	69 f4       	brne	.+26     	; 0x8a8 <__stack+0x49>
     88e:	20 97       	sbiw	r28, 0x00	; 0
     890:	31 f4       	brne	.+12     	; 0x89e <__stack+0x3f>
     892:	c0 91 5e 04 	lds	r28, 0x045E
     896:	d0 91 5f 04 	lds	r29, 0x045F
     89a:	21 97       	sbiw	r28, 0x01	; 1
     89c:	01 c0       	rjmp	.+2      	; 0x8a0 <__stack+0x41>
     89e:	21 97       	sbiw	r28, 0x01	; 1
     8a0:	ce 01       	movw	r24, r28
     8a2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     8a6:	dd c0       	rjmp	.+442    	; 0xa62 <__stack+0x203>
     8a8:	20 91 6a 00 	lds	r18, 0x006A
     8ac:	30 91 6b 00 	lds	r19, 0x006B
     8b0:	82 17       	cp	r24, r18
     8b2:	93 07       	cpc	r25, r19
     8b4:	81 f4       	brne	.+32     	; 0x8d6 <__stack+0x77>
     8b6:	80 91 5e 04 	lds	r24, 0x045E
     8ba:	90 91 5f 04 	lds	r25, 0x045F
     8be:	01 97       	sbiw	r24, 0x01	; 1
     8c0:	8c 17       	cp	r24, r28
     8c2:	9d 07       	cpc	r25, r29
     8c4:	11 f0       	breq	.+4      	; 0x8ca <__stack+0x6b>
     8c6:	21 96       	adiw	r28, 0x01	; 1
     8c8:	02 c0       	rjmp	.+4      	; 0x8ce <__stack+0x6f>
     8ca:	c0 e0       	ldi	r28, 0x00	; 0
     8cc:	d0 e0       	ldi	r29, 0x00	; 0
     8ce:	ce 01       	movw	r24, r28
     8d0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     8d4:	c6 c0       	rjmp	.+396    	; 0xa62 <__stack+0x203>
     8d6:	20 91 66 00 	lds	r18, 0x0066
     8da:	30 91 67 00 	lds	r19, 0x0067
     8de:	82 17       	cp	r24, r18
     8e0:	93 07       	cpc	r25, r19
     8e2:	d1 f4       	brne	.+52     	; 0x918 <__stack+0xb9>
     8e4:	1c 9f       	mul	r17, r28
     8e6:	f0 01       	movw	r30, r0
     8e8:	1d 9f       	mul	r17, r29
     8ea:	f0 0d       	add	r31, r0
     8ec:	11 24       	eor	r1, r1
     8ee:	ea 5e       	subi	r30, 0xEA	; 234
     8f0:	fe 4f       	sbci	r31, 0xFE	; 254
     8f2:	80 8d       	ldd	r24, Z+24	; 0x18
     8f4:	91 8d       	ldd	r25, Z+25	; 0x19
     8f6:	00 97       	sbiw	r24, 0x00	; 0
     8f8:	09 f4       	brne	.+2      	; 0x8fc <__stack+0x9d>
     8fa:	b3 c0       	rjmp	.+358    	; 0xa62 <__stack+0x203>
     8fc:	1c 9f       	mul	r17, r28
     8fe:	f0 01       	movw	r30, r0
     900:	1d 9f       	mul	r17, r29
     902:	f0 0d       	add	r31, r0
     904:	11 24       	eor	r1, r1
     906:	ea 5e       	subi	r30, 0xEA	; 234
     908:	fe 4f       	sbci	r31, 0xFE	; 254
     90a:	01 97       	sbiw	r24, 0x01	; 1
     90c:	91 8f       	std	Z+25, r25	; 0x19
     90e:	80 8f       	std	Z+24, r24	; 0x18
     910:	ce 01       	movw	r24, r28
     912:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     916:	a5 c0       	rjmp	.+330    	; 0xa62 <__stack+0x203>
     918:	20 91 68 00 	lds	r18, 0x0068
     91c:	30 91 69 00 	lds	r19, 0x0069
     920:	82 17       	cp	r24, r18
     922:	93 07       	cpc	r25, r19
     924:	81 f4       	brne	.+32     	; 0x946 <__stack+0xe7>
     926:	1c 9f       	mul	r17, r28
     928:	f0 01       	movw	r30, r0
     92a:	1d 9f       	mul	r17, r29
     92c:	f0 0d       	add	r31, r0
     92e:	11 24       	eor	r1, r1
     930:	ea 5e       	subi	r30, 0xEA	; 234
     932:	fe 4f       	sbci	r31, 0xFE	; 254
     934:	80 8d       	ldd	r24, Z+24	; 0x18
     936:	91 8d       	ldd	r25, Z+25	; 0x19
     938:	01 96       	adiw	r24, 0x01	; 1
     93a:	91 8f       	std	Z+25, r25	; 0x19
     93c:	80 8f       	std	Z+24, r24	; 0x18
     93e:	ce 01       	movw	r24, r28
     940:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     944:	8e c0       	rjmp	.+284    	; 0xa62 <__stack+0x203>
     946:	20 91 64 00 	lds	r18, 0x0064
     94a:	30 91 65 00 	lds	r19, 0x0065
     94e:	82 17       	cp	r24, r18
     950:	93 07       	cpc	r25, r19
     952:	69 f5       	brne	.+90     	; 0x9ae <__stack+0x14f>
     954:	81 ed       	ldi	r24, 0xD1	; 209
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     95c:	89 2b       	or	r24, r25
     95e:	49 f0       	breq	.+18     	; 0x972 <__stack+0x113>
     960:	1c 9f       	mul	r17, r28
     962:	f0 01       	movw	r30, r0
     964:	1d 9f       	mul	r17, r29
     966:	f0 0d       	add	r31, r0
     968:	11 24       	eor	r1, r1
     96a:	ea 5e       	subi	r30, 0xEA	; 234
     96c:	fe 4f       	sbci	r31, 0xFE	; 254
     96e:	11 8e       	std	Z+25, r1	; 0x19
     970:	10 8e       	std	Z+24, r1	; 0x18
     972:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     976:	85 e8       	ldi	r24, 0x85	; 133
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	70 e0       	ldi	r23, 0x00	; 0
     982:	88 e0       	ldi	r24, 0x08	; 8
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     98a:	8b ec       	ldi	r24, 0xCB	; 203
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	8e e0       	ldi	r24, 0x0E	; 14
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     99e:	8b eb       	ldi	r24, 0xBB	; 187
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9a6:	ce 01       	movw	r24, r28
     9a8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     9ac:	5a c0       	rjmp	.+180    	; 0xa62 <__stack+0x203>
     9ae:	20 91 62 00 	lds	r18, 0x0062
     9b2:	30 91 63 00 	lds	r19, 0x0063
     9b6:	82 17       	cp	r24, r18
     9b8:	93 07       	cpc	r25, r19
     9ba:	49 f5       	brne	.+82     	; 0xa0e <__stack+0x1af>
     9bc:	82 ee       	ldi	r24, 0xE2	; 226
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     9c4:	89 2b       	or	r24, r25
     9c6:	29 f0       	breq	.+10     	; 0x9d2 <__stack+0x173>
     9c8:	0e 94 c8 03 	call	0x790	; 0x790 <_Z14send_info_testv>
     9cc:	81 e0       	ldi	r24, 0x01	; 1
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	54 c0       	rjmp	.+168    	; 0xa7a <__stack+0x21b>
     9d2:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     9d6:	85 e8       	ldi	r24, 0x85	; 133
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9de:	60 e0       	ldi	r22, 0x00	; 0
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	88 e0       	ldi	r24, 0x08	; 8
     9e4:	90 e0       	ldi	r25, 0x00	; 0
     9e6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9ea:	8b ec       	ldi	r24, 0xCB	; 203
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	8e e0       	ldi	r24, 0x0E	; 14
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     9fe:	8b eb       	ldi	r24, 0xBB	; 187
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a06:	ce 01       	movw	r24, r28
     a08:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     a0c:	2a c0       	rjmp	.+84     	; 0xa62 <__stack+0x203>
     a0e:	20 91 60 00 	lds	r18, 0x0060
     a12:	30 91 61 00 	lds	r19, 0x0061
     a16:	82 17       	cp	r24, r18
     a18:	93 07       	cpc	r25, r19
     a1a:	19 f5       	brne	.+70     	; 0xa62 <__stack+0x203>
     a1c:	83 ef       	ldi	r24, 0xF3	; 243
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     a24:	89 2b       	or	r24, r25
     a26:	39 f5       	brne	.+78     	; 0xa76 <__stack+0x217>
     a28:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     a2c:	85 e8       	ldi	r24, 0x85	; 133
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a34:	60 e0       	ldi	r22, 0x00	; 0
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	88 e0       	ldi	r24, 0x08	; 8
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a40:	8b ec       	ldi	r24, 0xCB	; 203
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a48:	60 e0       	ldi	r22, 0x00	; 0
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	8e e0       	ldi	r24, 0x0E	; 14
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     a54:	8b eb       	ldi	r24, 0xBB	; 187
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     a5c:	ce 01       	movw	r24, r28
     a5e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     a62:	2f ef       	ldi	r18, 0xFF	; 255
     a64:	85 ea       	ldi	r24, 0xA5	; 165
     a66:	9e e0       	ldi	r25, 0x0E	; 14
     a68:	21 50       	subi	r18, 0x01	; 1
     a6a:	80 40       	sbci	r24, 0x00	; 0
     a6c:	90 40       	sbci	r25, 0x00	; 0
     a6e:	e1 f7       	brne	.-8      	; 0xa68 <__stack+0x209>
     a70:	00 c0       	rjmp	.+0      	; 0xa72 <__stack+0x213>
     a72:	00 00       	nop
     a74:	f6 ce       	rjmp	.-532    	; 0x862 <__stack+0x3>
     a76:	80 e0       	ldi	r24, 0x00	; 0
     a78:	90 e0       	ldi	r25, 0x00	; 0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	1f 91       	pop	r17
     a80:	08 95       	ret

00000a82 <_Z13selected_foodv>:
     a82:	cf 92       	push	r12
     a84:	df 92       	push	r13
     a86:	ef 92       	push	r14
     a88:	ff 92       	push	r15
     a8a:	0f 93       	push	r16
     a8c:	1f 93       	push	r17
     a8e:	cf 93       	push	r28
     a90:	df 93       	push	r29
     a92:	cd b7       	in	r28, 0x3d	; 61
     a94:	de b7       	in	r29, 0x3e	; 62
     a96:	c8 5c       	subi	r28, 0xC8	; 200
     a98:	d1 09       	sbc	r29, r1
     a9a:	0f b6       	in	r0, 0x3f	; 63
     a9c:	f8 94       	cli
     a9e:	de bf       	out	0x3e, r29	; 62
     aa0:	0f be       	out	0x3f, r0	; 63
     aa2:	cd bf       	out	0x3d, r28	; 61
     aa4:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
     aa8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <_Z8get_infov>
     aac:	2f ef       	ldi	r18, 0xFF	; 255
     aae:	35 ea       	ldi	r19, 0xA5	; 165
     ab0:	8e e0       	ldi	r24, 0x0E	; 14
     ab2:	21 50       	subi	r18, 0x01	; 1
     ab4:	30 40       	sbci	r19, 0x00	; 0
     ab6:	80 40       	sbci	r24, 0x00	; 0
     ab8:	e1 f7       	brne	.-8      	; 0xab2 <_Z13selected_foodv+0x30>
     aba:	00 c0       	rjmp	.+0      	; 0xabc <_Z13selected_foodv+0x3a>
     abc:	00 00       	nop
     abe:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
     ac2:	40 91 5e 04 	lds	r20, 0x045E
     ac6:	50 91 5f 04 	lds	r21, 0x045F
     aca:	14 16       	cp	r1, r20
     acc:	15 06       	cpc	r1, r21
     ace:	04 f5       	brge	.+64     	; 0xb10 <_Z13selected_foodv+0x8e>
     ad0:	ee e2       	ldi	r30, 0x2E	; 46
     ad2:	f1 e0       	ldi	r31, 0x01	; 1
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	00 e0       	ldi	r16, 0x00	; 0
     ada:	10 e0       	ldi	r17, 0x00	; 0
     adc:	20 81       	ld	r18, Z
     ade:	31 81       	ldd	r19, Z+1	; 0x01
     ae0:	12 16       	cp	r1, r18
     ae2:	13 06       	cpc	r1, r19
     ae4:	6c f4       	brge	.+26     	; 0xb00 <_Z13selected_foodv+0x7e>
     ae6:	d8 01       	movw	r26, r16
     ae8:	aa 0f       	add	r26, r26
     aea:	bb 1f       	adc	r27, r27
     aec:	21 e0       	ldi	r18, 0x01	; 1
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	2c 0f       	add	r18, r28
     af2:	3d 1f       	adc	r19, r29
     af4:	a2 0f       	add	r26, r18
     af6:	b3 1f       	adc	r27, r19
     af8:	8d 93       	st	X+, r24
     afa:	9c 93       	st	X, r25
     afc:	0f 5f       	subi	r16, 0xFF	; 255
     afe:	1f 4f       	sbci	r17, 0xFF	; 255
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	7c 96       	adiw	r30, 0x1c	; 28
     b04:	84 17       	cp	r24, r20
     b06:	95 07       	cpc	r25, r21
     b08:	4c f3       	brlt	.-46     	; 0xadc <_Z13selected_foodv+0x5a>
     b0a:	01 15       	cp	r16, r1
     b0c:	11 05       	cpc	r17, r1
     b0e:	c1 f4       	brne	.+48     	; 0xb40 <_Z13selected_foodv+0xbe>
     b10:	84 e0       	ldi	r24, 0x04	; 4
     b12:	91 e0       	ldi	r25, 0x01	; 1
     b14:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b18:	61 e0       	ldi	r22, 0x01	; 1
     b1a:	70 e0       	ldi	r23, 0x00	; 0
     b1c:	86 e0       	ldi	r24, 0x06	; 6
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     b24:	82 eb       	ldi	r24, 0xB2	; 178
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b2c:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     b30:	20 91 62 00 	lds	r18, 0x0062
     b34:	30 91 63 00 	lds	r19, 0x0063
     b38:	82 17       	cp	r24, r18
     b3a:	93 07       	cpc	r25, r19
     b3c:	b9 f7       	brne	.-18     	; 0xb2c <_Z13selected_foodv+0xaa>
     b3e:	a0 c0       	rjmp	.+320    	; 0xc80 <_Z13selected_foodv+0x1fe>
     b40:	85 e8       	ldi	r24, 0x85	; 133
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	88 e0       	ldi	r24, 0x08	; 8
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     b54:	8b ec       	ldi	r24, 0xCB	; 203
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	8e e0       	ldi	r24, 0x0E	; 14
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     b68:	8b eb       	ldi	r24, 0xBB	; 187
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b70:	61 e0       	ldi	r22, 0x01	; 1
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     b7c:	89 81       	ldd	r24, Y+1	; 0x01
     b7e:	9a 81       	ldd	r25, Y+2	; 0x02
     b80:	2c e1       	ldi	r18, 0x1C	; 28
     b82:	28 9f       	mul	r18, r24
     b84:	70 01       	movw	r14, r0
     b86:	29 9f       	mul	r18, r25
     b88:	f0 0c       	add	r15, r0
     b8a:	11 24       	eor	r1, r1
     b8c:	c7 01       	movw	r24, r14
     b8e:	88 5e       	subi	r24, 0xE8	; 232
     b90:	9e 4f       	sbci	r25, 0xFE	; 254
     b92:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
     b96:	61 e0       	ldi	r22, 0x01	; 1
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	88 e0       	ldi	r24, 0x08	; 8
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     ba2:	c7 01       	movw	r24, r14
     ba4:	8a 5e       	subi	r24, 0xEA	; 234
     ba6:	9e 4f       	sbci	r25, 0xFE	; 254
     ba8:	7c 01       	movw	r14, r24
     baa:	fc 01       	movw	r30, r24
     bac:	86 89       	ldd	r24, Z+22	; 0x16
     bae:	97 89       	ldd	r25, Z+23	; 0x17
     bb0:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     bb4:	61 e0       	ldi	r22, 0x01	; 1
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	8e e0       	ldi	r24, 0x0E	; 14
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
     bc0:	f7 01       	movw	r30, r14
     bc2:	80 8d       	ldd	r24, Z+24	; 0x18
     bc4:	91 8d       	ldd	r25, Z+25	; 0x19
     bc6:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
     bca:	e1 2c       	mov	r14, r1
     bcc:	f1 2c       	mov	r15, r1
     bce:	01 50       	subi	r16, 0x01	; 1
     bd0:	11 09       	sbc	r17, r1
     bd2:	c1 2c       	mov	r12, r1
     bd4:	d1 2c       	mov	r13, r1
     bd6:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
     bda:	20 91 6c 00 	lds	r18, 0x006C
     bde:	30 91 6d 00 	lds	r19, 0x006D
     be2:	82 17       	cp	r24, r18
     be4:	93 07       	cpc	r25, r19
     be6:	b1 f4       	brne	.+44     	; 0xc14 <_Z13selected_foodv+0x192>
     be8:	e1 14       	cp	r14, r1
     bea:	f1 04       	cpc	r15, r1
     bec:	11 f4       	brne	.+4      	; 0xbf2 <_Z13selected_foodv+0x170>
     bee:	78 01       	movw	r14, r16
     bf0:	03 c0       	rjmp	.+6      	; 0xbf8 <_Z13selected_foodv+0x176>
     bf2:	f1 e0       	ldi	r31, 0x01	; 1
     bf4:	ef 1a       	sub	r14, r31
     bf6:	f1 08       	sbc	r15, r1
     bf8:	f7 01       	movw	r30, r14
     bfa:	ee 0f       	add	r30, r30
     bfc:	ff 1f       	adc	r31, r31
     bfe:	21 e0       	ldi	r18, 0x01	; 1
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	2c 0f       	add	r18, r28
     c04:	3d 1f       	adc	r19, r29
     c06:	e2 0f       	add	r30, r18
     c08:	f3 1f       	adc	r31, r19
     c0a:	80 81       	ld	r24, Z
     c0c:	91 81       	ldd	r25, Z+1	; 0x01
     c0e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c12:	2c c0       	rjmp	.+88     	; 0xc6c <_Z13selected_foodv+0x1ea>
     c14:	20 91 6a 00 	lds	r18, 0x006A
     c18:	30 91 6b 00 	lds	r19, 0x006B
     c1c:	82 17       	cp	r24, r18
     c1e:	93 07       	cpc	r25, r19
     c20:	b9 f4       	brne	.+46     	; 0xc50 <_Z13selected_foodv+0x1ce>
     c22:	0e 15       	cp	r16, r14
     c24:	1f 05       	cpc	r17, r15
     c26:	21 f0       	breq	.+8      	; 0xc30 <_Z13selected_foodv+0x1ae>
     c28:	3f ef       	ldi	r19, 0xFF	; 255
     c2a:	e3 1a       	sub	r14, r19
     c2c:	f3 0a       	sbc	r15, r19
     c2e:	02 c0       	rjmp	.+4      	; 0xc34 <_Z13selected_foodv+0x1b2>
     c30:	ec 2c       	mov	r14, r12
     c32:	fd 2c       	mov	r15, r13
     c34:	f7 01       	movw	r30, r14
     c36:	ee 0f       	add	r30, r30
     c38:	ff 1f       	adc	r31, r31
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	8c 0f       	add	r24, r28
     c40:	9d 1f       	adc	r25, r29
     c42:	e8 0f       	add	r30, r24
     c44:	f9 1f       	adc	r31, r25
     c46:	80 81       	ld	r24, Z
     c48:	91 81       	ldd	r25, Z+1	; 0x01
     c4a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     c4e:	0e c0       	rjmp	.+28     	; 0xc6c <_Z13selected_foodv+0x1ea>
     c50:	20 91 62 00 	lds	r18, 0x0062
     c54:	30 91 63 00 	lds	r19, 0x0063
     c58:	82 17       	cp	r24, r18
     c5a:	93 07       	cpc	r25, r19
     c5c:	89 f0       	breq	.+34     	; 0xc80 <_Z13selected_foodv+0x1fe>
     c5e:	20 91 60 00 	lds	r18, 0x0060
     c62:	30 91 61 00 	lds	r19, 0x0061
     c66:	82 17       	cp	r24, r18
     c68:	93 07       	cpc	r25, r19
     c6a:	51 f0       	breq	.+20     	; 0xc80 <_Z13selected_foodv+0x1fe>
     c6c:	9f ef       	ldi	r25, 0xFF	; 255
     c6e:	e5 ea       	ldi	r30, 0xA5	; 165
     c70:	fe e0       	ldi	r31, 0x0E	; 14
     c72:	91 50       	subi	r25, 0x01	; 1
     c74:	e0 40       	sbci	r30, 0x00	; 0
     c76:	f0 40       	sbci	r31, 0x00	; 0
     c78:	e1 f7       	brne	.-8      	; 0xc72 <_Z13selected_foodv+0x1f0>
     c7a:	00 c0       	rjmp	.+0      	; 0xc7c <_Z13selected_foodv+0x1fa>
     c7c:	00 00       	nop
     c7e:	ab cf       	rjmp	.-170    	; 0xbd6 <_Z13selected_foodv+0x154>
     c80:	c8 53       	subi	r28, 0x38	; 56
     c82:	df 4f       	sbci	r29, 0xFF	; 255
     c84:	0f b6       	in	r0, 0x3f	; 63
     c86:	f8 94       	cli
     c88:	de bf       	out	0x3e, r29	; 62
     c8a:	0f be       	out	0x3f, r0	; 63
     c8c:	cd bf       	out	0x3d, r28	; 61
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	1f 91       	pop	r17
     c94:	0f 91       	pop	r16
     c96:	ff 90       	pop	r15
     c98:	ef 90       	pop	r14
     c9a:	df 90       	pop	r13
     c9c:	cf 90       	pop	r12
     c9e:	08 95       	ret

00000ca0 <_Z11change_foodv>:




void change_food()
{
     ca0:	1f 93       	push	r17
     ca2:	cf 93       	push	r28
     ca4:	df 93       	push	r29
	wait_message();
     ca6:	0e 94 a5 01 	call	0x34a	; 0x34a <_Z12wait_messagev>
	get_info_test();
     caa:	0e 94 a6 03 	call	0x74c	; 0x74c <_Z13get_info_testv>
     cae:	2f ef       	ldi	r18, 0xFF	; 255
     cb0:	85 ea       	ldi	r24, 0xA5	; 165
     cb2:	9e e0       	ldi	r25, 0x0E	; 14
     cb4:	21 50       	subi	r18, 0x01	; 1
     cb6:	80 40       	sbci	r24, 0x00	; 0
     cb8:	90 40       	sbci	r25, 0x00	; 0
     cba:	e1 f7       	brne	.-8      	; 0xcb4 <_Z11change_foodv+0x14>
     cbc:	00 c0       	rjmp	.+0      	; 0xcbe <_Z11change_foodv+0x1e>
     cbe:	00 00       	nop
	_delay_ms(DELAY_TIME_GET_INFO);
	lcd_clear();
     cc0:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	lcd_puts("Food");
     cc4:	85 e8       	ldi	r24, 0x85	; 133
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,0);
     ccc:	60 e0       	ldi	r22, 0x00	; 0
     cce:	70 e0       	ldi	r23, 0x00	; 0
     cd0:	88 e0       	ldi	r24, 0x08	; 8
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("Price");
     cd8:	8b ec       	ldi	r24, 0xCB	; 203
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(14,0);
     ce0:	60 e0       	ldi	r22, 0x00	; 0
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	8e e0       	ldi	r24, 0x0E	; 14
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_puts("No");
     cec:	8b eb       	ldi	r24, 0xBB	; 187
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	int selected_pk=0;
	lcd_setCursor(0,1);
     cf4:	61 e0       	ldi	r22, 0x01	; 1
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	80 e0       	ldi	r24, 0x00	; 0
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>

	lcd_puts(food[selected_pk].name);
     d00:	88 e1       	ldi	r24, 0x18	; 24
     d02:	91 e0       	ldi	r25, 0x01	; 1
     d04:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

	lcd_setCursor(8,1);
     d08:	61 e0       	ldi	r22, 0x01	; 1
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	88 e0       	ldi	r24, 0x08	; 8
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].price);
     d14:	c6 e1       	ldi	r28, 0x16	; 22
     d16:	d1 e0       	ldi	r29, 0x01	; 1
     d18:	8e 89       	ldd	r24, Y+22	; 0x16
     d1a:	9f 89       	ldd	r25, Y+23	; 0x17
     d1c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>

	lcd_setCursor(14,1);
     d20:	61 e0       	ldi	r22, 0x01	; 1
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	8e e0       	ldi	r24, 0x0E	; 14
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
	lcd_num(food[selected_pk].num);
     d2c:	88 8d       	ldd	r24, Y+24	; 0x18
     d2e:	99 8d       	ldd	r25, Y+25	; 0x19
     d30:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <_Z7lcd_numi>
	lcd_puts("Price");

	lcd_setCursor(14,0);
	lcd_puts("No");

	int selected_pk=0;
     d34:	c0 e0       	ldi	r28, 0x00	; 0
     d36:	d0 e0       	ldi	r29, 0x00	; 0

		}

		else if (in==del)
		{
			if (food[selected_pk].p==0)
     d38:	1c e1       	ldi	r17, 0x1C	; 28
	lcd_num(food[selected_pk].num);


	while(1)
	{
		int in=input();
     d3a:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		if(in !=0)
     d3e:	89 2b       	or	r24, r25
     d40:	e1 f3       	breq	.-8      	; 0xd3a <_Z11change_foodv+0x9a>
     d42:	2f ef       	ldi	r18, 0xFF	; 255
     d44:	86 e7       	ldi	r24, 0x76	; 118
     d46:	91 e0       	ldi	r25, 0x01	; 1
     d48:	21 50       	subi	r18, 0x01	; 1
     d4a:	80 40       	sbci	r24, 0x00	; 0
     d4c:	90 40       	sbci	r25, 0x00	; 0
     d4e:	e1 f7       	brne	.-8      	; 0xd48 <_Z11change_foodv+0xa8>
     d50:	00 c0       	rjmp	.+0      	; 0xd52 <_Z11change_foodv+0xb2>
     d52:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in =input();
     d54:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		if (in==up)
     d58:	20 91 6c 00 	lds	r18, 0x006C
     d5c:	30 91 6d 00 	lds	r19, 0x006D
     d60:	82 17       	cp	r24, r18
     d62:	93 07       	cpc	r25, r19
     d64:	69 f4       	brne	.+26     	; 0xd80 <_Z11change_foodv+0xe0>
		{
			if (selected_pk==0)  selected_pk=num_of_food-1;
     d66:	20 97       	sbiw	r28, 0x00	; 0
     d68:	31 f4       	brne	.+12     	; 0xd76 <_Z11change_foodv+0xd6>
     d6a:	c0 91 5e 04 	lds	r28, 0x045E
     d6e:	d0 91 5f 04 	lds	r29, 0x045F
     d72:	21 97       	sbiw	r28, 0x01	; 1
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <_Z11change_foodv+0xd8>
			else selected_pk--;
     d76:	21 97       	sbiw	r28, 0x01	; 1
			select_food_print(selected_pk);
     d78:	ce 01       	movw	r24, r28
     d7a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     d7e:	15 c1       	rjmp	.+554    	; 0xfaa <_Z11change_foodv+0x30a>

		}

		else if (in==down)
     d80:	20 91 6a 00 	lds	r18, 0x006A
     d84:	30 91 6b 00 	lds	r19, 0x006B
     d88:	82 17       	cp	r24, r18
     d8a:	93 07       	cpc	r25, r19
     d8c:	81 f4       	brne	.+32     	; 0xdae <_Z11change_foodv+0x10e>
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     d8e:	80 91 5e 04 	lds	r24, 0x045E
     d92:	90 91 5f 04 	lds	r25, 0x045F
     d96:	01 97       	sbiw	r24, 0x01	; 1
     d98:	8c 17       	cp	r24, r28
     d9a:	9d 07       	cpc	r25, r29
     d9c:	11 f0       	breq	.+4      	; 0xda2 <_Z11change_foodv+0x102>
			else selected_pk++;
     d9e:	21 96       	adiw	r28, 0x01	; 1
     da0:	02 c0       	rjmp	.+4      	; 0xda6 <_Z11change_foodv+0x106>

		}

		else if (in==down)
		{
			if (selected_pk==num_of_food-1) selected_pk=0;
     da2:	c0 e0       	ldi	r28, 0x00	; 0
     da4:	d0 e0       	ldi	r29, 0x00	; 0
			else selected_pk++;
			select_food_print(selected_pk);
     da6:	ce 01       	movw	r24, r28
     da8:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     dac:	fe c0       	rjmp	.+508    	; 0xfaa <_Z11change_foodv+0x30a>

		}

		else if (in==left)
     dae:	20 91 66 00 	lds	r18, 0x0066
     db2:	30 91 67 00 	lds	r19, 0x0067
     db6:	82 17       	cp	r24, r18
     db8:	93 07       	cpc	r25, r19
     dba:	09 f0       	breq	.+2      	; 0xdbe <_Z11change_foodv+0x11e>
     dbc:	45 c0       	rjmp	.+138    	; 0xe48 <_Z11change_foodv+0x1a8>
		{
			if (food[selected_pk].p==0)
     dbe:	1c 9f       	mul	r17, r28
     dc0:	f0 01       	movw	r30, r0
     dc2:	1d 9f       	mul	r17, r29
     dc4:	f0 0d       	add	r31, r0
     dc6:	11 24       	eor	r1, r1
     dc8:	ea 5e       	subi	r30, 0xEA	; 234
     dca:	fe 4f       	sbci	r31, 0xFE	; 254
     dcc:	82 8d       	ldd	r24, Z+26	; 0x1a
     dce:	93 8d       	ldd	r25, Z+27	; 0x1b
     dd0:	89 2b       	or	r24, r25
     dd2:	d1 f4       	brne	.+52     	; 0xe08 <_Z11change_foodv+0x168>
			{
				if(food[selected_pk].num != 0)
     dd4:	1c 9f       	mul	r17, r28
     dd6:	f0 01       	movw	r30, r0
     dd8:	1d 9f       	mul	r17, r29
     dda:	f0 0d       	add	r31, r0
     ddc:	11 24       	eor	r1, r1
     dde:	ea 5e       	subi	r30, 0xEA	; 234
     de0:	fe 4f       	sbci	r31, 0xFE	; 254
     de2:	80 8d       	ldd	r24, Z+24	; 0x18
     de4:	91 8d       	ldd	r25, Z+25	; 0x19
     de6:	00 97       	sbiw	r24, 0x00	; 0
     de8:	09 f4       	brne	.+2      	; 0xdec <_Z11change_foodv+0x14c>
     dea:	df c0       	rjmp	.+446    	; 0xfaa <_Z11change_foodv+0x30a>
				{
					food[selected_pk].num--;
     dec:	1c 9f       	mul	r17, r28
     dee:	f0 01       	movw	r30, r0
     df0:	1d 9f       	mul	r17, r29
     df2:	f0 0d       	add	r31, r0
     df4:	11 24       	eor	r1, r1
     df6:	ea 5e       	subi	r30, 0xEA	; 234
     df8:	fe 4f       	sbci	r31, 0xFE	; 254
     dfa:	01 97       	sbiw	r24, 0x01	; 1
     dfc:	91 8f       	std	Z+25, r25	; 0x19
     dfe:	80 8f       	std	Z+24, r24	; 0x18
					select_food_print(selected_pk);
     e00:	ce 01       	movw	r24, r28
     e02:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e06:	d1 c0       	rjmp	.+418    	; 0xfaa <_Z11change_foodv+0x30a>
				}

			}
			else
			{
				cannot_cancel();
     e08:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>
				lcd_clear();
     e0c:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
				lcd_puts("Food");
     e10:	85 e8       	ldi	r24, 0x85	; 133
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(8,0);
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	88 e0       	ldi	r24, 0x08	; 8
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("Price");
     e24:	8b ec       	ldi	r24, 0xCB	; 203
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				lcd_setCursor(14,0);
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	8e e0       	ldi	r24, 0x0E	; 14
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts("No");
     e38:	8b eb       	ldi	r24, 0xBB	; 187
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

				select_food_print(selected_pk);
     e40:	ce 01       	movw	r24, r28
     e42:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e46:	b1 c0       	rjmp	.+354    	; 0xfaa <_Z11change_foodv+0x30a>





		else if (in==right)
     e48:	20 91 68 00 	lds	r18, 0x0068
     e4c:	30 91 69 00 	lds	r19, 0x0069
     e50:	82 17       	cp	r24, r18
     e52:	93 07       	cpc	r25, r19
     e54:	81 f4       	brne	.+32     	; 0xe76 <_Z11change_foodv+0x1d6>
		{
			food[selected_pk].num++;
     e56:	1c 9f       	mul	r17, r28
     e58:	f0 01       	movw	r30, r0
     e5a:	1d 9f       	mul	r17, r29
     e5c:	f0 0d       	add	r31, r0
     e5e:	11 24       	eor	r1, r1
     e60:	ea 5e       	subi	r30, 0xEA	; 234
     e62:	fe 4f       	sbci	r31, 0xFE	; 254
     e64:	80 8d       	ldd	r24, Z+24	; 0x18
     e66:	91 8d       	ldd	r25, Z+25	; 0x19
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	91 8f       	std	Z+25, r25	; 0x19
     e6c:	80 8f       	std	Z+24, r24	; 0x18
			select_food_print(selected_pk);
     e6e:	ce 01       	movw	r24, r28
     e70:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     e74:	9a c0       	rjmp	.+308    	; 0xfaa <_Z11change_foodv+0x30a>

		}

		else if (in==del)
     e76:	20 91 64 00 	lds	r18, 0x0064
     e7a:	30 91 65 00 	lds	r19, 0x0065
     e7e:	82 17       	cp	r24, r18
     e80:	93 07       	cpc	r25, r19
     e82:	d9 f5       	brne	.+118    	; 0xefa <_Z11change_foodv+0x25a>
		{
			if (food[selected_pk].p==0)
     e84:	1c 9f       	mul	r17, r28
     e86:	f0 01       	movw	r30, r0
     e88:	1d 9f       	mul	r17, r29
     e8a:	f0 0d       	add	r31, r0
     e8c:	11 24       	eor	r1, r1
     e8e:	ea 5e       	subi	r30, 0xEA	; 234
     e90:	fe 4f       	sbci	r31, 0xFE	; 254
     e92:	82 8d       	ldd	r24, Z+26	; 0x1a
     e94:	93 8d       	ldd	r25, Z+27	; 0x1b
     e96:	89 2b       	or	r24, r25
     e98:	81 f4       	brne	.+32     	; 0xeba <_Z11change_foodv+0x21a>
			{
				if (display_message1("Set the no to 0?"))
     e9a:	81 ed       	ldi	r24, 0xD1	; 209
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     ea2:	89 2b       	or	r24, r25
     ea4:	61 f0       	breq	.+24     	; 0xebe <_Z11change_foodv+0x21e>
				food[selected_pk].num=0;
     ea6:	1c 9f       	mul	r17, r28
     ea8:	f0 01       	movw	r30, r0
     eaa:	1d 9f       	mul	r17, r29
     eac:	f0 0d       	add	r31, r0
     eae:	11 24       	eor	r1, r1
     eb0:	ea 5e       	subi	r30, 0xEA	; 234
     eb2:	fe 4f       	sbci	r31, 0xFE	; 254
     eb4:	11 8e       	std	Z+25, r1	; 0x19
     eb6:	10 8e       	std	Z+24, r1	; 0x18
     eb8:	02 c0       	rjmp	.+4      	; 0xebe <_Z11change_foodv+0x21e>
			}
			else
			cannot_cancel();
     eba:	0e 94 23 02 	call	0x446	; 0x446 <_Z13cannot_cancelv>

			lcd_clear();
     ebe:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     ec2:	85 e8       	ldi	r24, 0x85	; 133
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     eca:	60 e0       	ldi	r22, 0x00	; 0
     ecc:	70 e0       	ldi	r23, 0x00	; 0
     ece:	88 e0       	ldi	r24, 0x08	; 8
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     ed6:	8b ec       	ldi	r24, 0xCB	; 203
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     ede:	60 e0       	ldi	r22, 0x00	; 0
     ee0:	70 e0       	ldi	r23, 0x00	; 0
     ee2:	8e e0       	ldi	r24, 0x0E	; 14
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     eea:	8b eb       	ldi	r24, 0xBB	; 187
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     ef2:	ce 01       	movw	r24, r28
     ef4:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     ef8:	58 c0       	rjmp	.+176    	; 0xfaa <_Z11change_foodv+0x30a>
		}

		else if (in==ok)
     efa:	20 91 62 00 	lds	r18, 0x0062
     efe:	30 91 63 00 	lds	r19, 0x0063
     f02:	82 17       	cp	r24, r18
     f04:	93 07       	cpc	r25, r19
     f06:	39 f5       	brne	.+78     	; 0xf56 <_Z11change_foodv+0x2b6>
		{
			if (display_message1("Save the changes"))
     f08:	82 ee       	ldi	r24, 0xE2	; 226
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     f10:	89 2b       	or	r24, r25
     f12:	19 f0       	breq	.+6      	; 0xf1a <_Z11change_foodv+0x27a>
			{
				send_info_test();
     f14:	0e 94 c8 03 	call	0x790	; 0x790 <_Z14send_info_testv>
				//_delay_ms(DELAY_TIME);
				return;
     f18:	52 c0       	rjmp	.+164    	; 0xfbe <_Z11change_foodv+0x31e>
			}

			lcd_clear();
     f1a:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     f1e:	85 e8       	ldi	r24, 0x85	; 133
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     f26:	60 e0       	ldi	r22, 0x00	; 0
     f28:	70 e0       	ldi	r23, 0x00	; 0
     f2a:	88 e0       	ldi	r24, 0x08	; 8
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     f32:	8b ec       	ldi	r24, 0xCB	; 203
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	70 e0       	ldi	r23, 0x00	; 0
     f3e:	8e e0       	ldi	r24, 0x0E	; 14
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     f46:	8b eb       	ldi	r24, 0xBB	; 187
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     f4e:	ce 01       	movw	r24, r28
     f50:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     f54:	2a c0       	rjmp	.+84     	; 0xfaa <_Z11change_foodv+0x30a>

		}


		else if (in==back)
     f56:	20 91 60 00 	lds	r18, 0x0060
     f5a:	30 91 61 00 	lds	r19, 0x0061
     f5e:	82 17       	cp	r24, r18
     f60:	93 07       	cpc	r25, r19
     f62:	19 f5       	brne	.+70     	; 0xfaa <_Z11change_foodv+0x30a>
		{
			if (display_message1("Discard Changes?"))
     f64:	83 ef       	ldi	r24, 0xF3	; 243
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 59 02 	call	0x4b2	; 0x4b2 <_Z16display_message1PKc>
     f6c:	89 2b       	or	r24, r25
     f6e:	39 f5       	brne	.+78     	; 0xfbe <_Z11change_foodv+0x31e>
			{
				//_delay_ms(DELAY_TIME);
				return ;
			}

			lcd_clear();
     f70:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
			lcd_puts("Food");
     f74:	85 e8       	ldi	r24, 0x85	; 133
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(8,0);
     f7c:	60 e0       	ldi	r22, 0x00	; 0
     f7e:	70 e0       	ldi	r23, 0x00	; 0
     f80:	88 e0       	ldi	r24, 0x08	; 8
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("Price");
     f88:	8b ec       	ldi	r24, 0xCB	; 203
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			lcd_setCursor(14,0);
     f90:	60 e0       	ldi	r22, 0x00	; 0
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	8e e0       	ldi	r24, 0x0E	; 14
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
			lcd_puts("No");
     f9c:	8b eb       	ldi	r24, 0xBB	; 187
     f9e:	90 e0       	ldi	r25, 0x00	; 0
     fa0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>

			select_food_print(selected_pk);
     fa4:	ce 01       	movw	r24, r28
     fa6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <_Z17select_food_printi>
     faa:	2f ef       	ldi	r18, 0xFF	; 255
     fac:	85 ea       	ldi	r24, 0xA5	; 165
     fae:	9e e0       	ldi	r25, 0x0E	; 14
     fb0:	21 50       	subi	r18, 0x01	; 1
     fb2:	80 40       	sbci	r24, 0x00	; 0
     fb4:	90 40       	sbci	r25, 0x00	; 0
     fb6:	e1 f7       	brne	.-8      	; 0xfb0 <_Z11change_foodv+0x310>
     fb8:	00 c0       	rjmp	.+0      	; 0xfba <_Z11change_foodv+0x31a>
     fba:	00 00       	nop
     fbc:	be ce       	rjmp	.-644    	; 0xd3a <_Z11change_foodv+0x9a>

		_delay_ms(DELAY_TIME_LOOP);
		}
	}

}
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	1f 91       	pop	r17
     fc4:	08 95       	ret

00000fc6 <_Z8mainmenuv>:
     fc6:	2f ef       	ldi	r18, 0xFF	; 255
     fc8:	85 ea       	ldi	r24, 0xA5	; 165
     fca:	9e e0       	ldi	r25, 0x0E	; 14
     fcc:	21 50       	subi	r18, 0x01	; 1
     fce:	80 40       	sbci	r24, 0x00	; 0
     fd0:	90 40       	sbci	r25, 0x00	; 0
     fd2:	e1 f7       	brne	.-8      	; 0xfcc <_Z8mainmenuv+0x6>
     fd4:	00 c0       	rjmp	.+0      	; 0xfd6 <_Z8mainmenuv+0x10>
     fd6:	00 00       	nop


void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
     fd8:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
	num_of_food=0;
     fdc:	10 92 5f 04 	sts	0x045F, r1
     fe0:	10 92 5e 04 	sts	0x045E, r1
	int state=0;
	int first_visit=0;
	main_menu_print(first_visit);
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
	int first_visit=0;
     fec:	e1 2c       	mov	r14, r1
     fee:	f1 2c       	mov	r15, r1
void mainmenu()
{
	_delay_ms(DELAY_TIME_STRAIGHT_START);
	lcd_clear();
	num_of_food=0;
	int state=0;
     ff0:	c0 e0       	ldi	r28, 0x00	; 0
     ff2:	d0 e0       	ldi	r29, 0x00	; 0
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
     ff4:	00 e0       	ldi	r16, 0x00	; 0
     ff6:	10 e0       	ldi	r17, 0x00	; 0
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
					if (c==1)
     ff8:	cc 24       	eor	r12, r12
     ffa:	c3 94       	inc	r12
     ffc:	d1 2c       	mov	r13, r1
	int first_visit=0;
	main_menu_print(first_visit);

	while(1)
	{
		int in=input();
     ffe:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
		//  lcd_puts (in);
		if (in!=000)
    1002:	89 2b       	or	r24, r25
    1004:	e1 f3       	breq	.-8      	; 0xffe <_Z8mainmenuv+0x38>
    1006:	2f ef       	ldi	r18, 0xFF	; 255
    1008:	86 e7       	ldi	r24, 0x76	; 118
    100a:	91 e0       	ldi	r25, 0x01	; 1
    100c:	21 50       	subi	r18, 0x01	; 1
    100e:	80 40       	sbci	r24, 0x00	; 0
    1010:	90 40       	sbci	r25, 0x00	; 0
    1012:	e1 f7       	brne	.-8      	; 0x100c <_Z8mainmenuv+0x46>
    1014:	00 c0       	rjmp	.+0      	; 0x1016 <_Z8mainmenuv+0x50>
    1016:	00 00       	nop
		{
			_delay_ms(DELAY_BOUNCE);
			in=input();
    1018:	0e 94 ac 01 	call	0x358	; 0x358 <_Z5inputv>
			if (state==0&& (in==up ||in==down))
    101c:	20 97       	sbiw	r28, 0x00	; 0
    101e:	31 f5       	brne	.+76     	; 0x106c <_Z8mainmenuv+0xa6>
    1020:	20 91 6c 00 	lds	r18, 0x006C
    1024:	30 91 6d 00 	lds	r19, 0x006D
    1028:	82 17       	cp	r24, r18
    102a:	93 07       	cpc	r25, r19
    102c:	41 f0       	breq	.+16     	; 0x103e <_Z8mainmenuv+0x78>
    102e:	20 91 6a 00 	lds	r18, 0x006A
    1032:	30 91 6b 00 	lds	r19, 0x006B
    1036:	82 17       	cp	r24, r18
    1038:	93 07       	cpc	r25, r19
    103a:	09 f0       	breq	.+2      	; 0x103e <_Z8mainmenuv+0x78>
    103c:	70 c0       	rjmp	.+224    	; 0x111e <_Z8mainmenuv+0x158>
			{
				lcd_setCursor(0,0);
    103e:	60 2f       	mov	r22, r16
    1040:	71 2f       	mov	r23, r17
    1042:	80 2f       	mov	r24, r16
    1044:	91 2f       	mov	r25, r17
    1046:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
    104a:	8f eb       	ldi	r24, 0xBF	; 191
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,1);
    1052:	6c 2d       	mov	r22, r12
    1054:	7d 2d       	mov	r23, r13
    1056:	80 2f       	mov	r24, r16
    1058:	91 2f       	mov	r25, r17
    105a:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
    105e:	8a e7       	ldi	r24, 0x7A	; 122
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=1;
    1066:	cc 2d       	mov	r28, r12
    1068:	dd 2d       	mov	r29, r13
    106a:	4f c0       	rjmp	.+158    	; 0x110a <_Z8mainmenuv+0x144>
			}
			else if (state==1 && (in==up ||in==down))
    106c:	c1 30       	cpi	r28, 0x01	; 1
    106e:	d1 05       	cpc	r29, r1
    1070:	09 f0       	breq	.+2      	; 0x1074 <_Z8mainmenuv+0xae>
    1072:	5d c0       	rjmp	.+186    	; 0x112e <_Z8mainmenuv+0x168>
    1074:	20 91 6c 00 	lds	r18, 0x006C
    1078:	30 91 6d 00 	lds	r19, 0x006D
    107c:	82 17       	cp	r24, r18
    107e:	93 07       	cpc	r25, r19
    1080:	39 f0       	breq	.+14     	; 0x1090 <_Z8mainmenuv+0xca>
    1082:	20 91 6a 00 	lds	r18, 0x006A
    1086:	30 91 6b 00 	lds	r19, 0x006B
    108a:	82 17       	cp	r24, r18
    108c:	93 07       	cpc	r25, r19
    108e:	b9 f4       	brne	.+46     	; 0x10be <_Z8mainmenuv+0xf8>
			{
				lcd_setCursor(0,1);
    1090:	6c 2d       	mov	r22, r12
    1092:	7d 2d       	mov	r23, r13
    1094:	80 2f       	mov	r24, r16
    1096:	91 2f       	mov	r25, r17
    1098:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(" ");
    109c:	8f eb       	ldi	r24, 0xBF	; 191
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				lcd_setCursor(0,0);
    10a4:	60 2f       	mov	r22, r16
    10a6:	71 2f       	mov	r23, r17
    10a8:	80 2f       	mov	r24, r16
    10aa:	91 2f       	mov	r25, r17
    10ac:	0e 94 23 01 	call	0x246	; 0x246 <_Z13lcd_setCursorii>
				lcd_puts(">");
    10b0:	8a e7       	ldi	r24, 0x7A	; 122
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	0e 94 cd 00 	call	0x19a	; 0x19a <_Z8lcd_putsPKc>
				state=0;
    10b8:	c0 2f       	mov	r28, r16
    10ba:	d1 2f       	mov	r29, r17
    10bc:	26 c0       	rjmp	.+76     	; 0x110a <_Z8mainmenuv+0x144>
			}
			else if (in==ok)
    10be:	20 91 62 00 	lds	r18, 0x0062
    10c2:	30 91 63 00 	lds	r19, 0x0063
    10c6:	82 17       	cp	r24, r18
    10c8:	93 07       	cpc	r25, r19
    10ca:	f9 f4       	brne	.+62     	; 0x110a <_Z8mainmenuv+0x144>
			{
				//_delay_ms(DELAY_TIME);
				if (state==0)
    10cc:	cd 2b       	or	r28, r29
    10ce:	b1 f4       	brne	.+44     	; 0x10fc <_Z8mainmenuv+0x136>
				{
					int c=0;
					if (first_visit==0)
    10d0:	e1 14       	cp	r14, r1
    10d2:	f1 04       	cpc	r15, r1
    10d4:	59 f4       	brne	.+22     	; 0x10ec <_Z8mainmenuv+0x126>
					c=select_food();
    10d6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <_Z11select_foodv>
					else
					change_food();
					if (c==1)
    10da:	3c 2d       	mov	r19, r12
    10dc:	2d 2d       	mov	r18, r13
    10de:	01 97       	sbiw	r24, 0x01	; 1
    10e0:	11 f0       	breq	.+4      	; 0x10e6 <_Z8mainmenuv+0x120>
    10e2:	30 2f       	mov	r19, r16
    10e4:	21 2f       	mov	r18, r17
					first_visit=1;
    10e6:	e3 2e       	mov	r14, r19
    10e8:	f2 2e       	mov	r15, r18
    10ea:	02 c0       	rjmp	.+4      	; 0x10f0 <_Z8mainmenuv+0x12a>
				{
					int c=0;
					if (first_visit==0)
					c=select_food();
					else
					change_food();
    10ec:	0e 94 50 06 	call	0xca0	; 0xca0 <_Z11change_foodv>
					if (c==1)
					first_visit=1;
					state=0;
					main_menu_print(first_visit);
    10f0:	c7 01       	movw	r24, r14
    10f2:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					c=select_food();
					else
					change_food();
					if (c==1)
					first_visit=1;
					state=0;
    10f6:	c0 2f       	mov	r28, r16
    10f8:	d1 2f       	mov	r29, r17
    10fa:	07 c0       	rjmp	.+14     	; 0x110a <_Z8mainmenuv+0x144>
					main_menu_print(first_visit);
				}
				else
				//selected_food();
				{
					selected_food();
    10fc:	0e 94 41 05 	call	0xa82	; 0xa82 <_Z13selected_foodv>
					main_menu_print(first_visit);
    1100:	c7 01       	movw	r24, r14
    1102:	0e 94 b8 01 	call	0x370	; 0x370 <_Z15main_menu_printi>
					state=0;
    1106:	c0 2f       	mov	r28, r16
    1108:	d1 2f       	mov	r29, r17
    110a:	9f ef       	ldi	r25, 0xFF	; 255
    110c:	25 ea       	ldi	r18, 0xA5	; 165
    110e:	8e e0       	ldi	r24, 0x0E	; 14
    1110:	91 50       	subi	r25, 0x01	; 1
    1112:	20 40       	sbci	r18, 0x00	; 0
    1114:	80 40       	sbci	r24, 0x00	; 0
    1116:	e1 f7       	brne	.-8      	; 0x1110 <_Z8mainmenuv+0x14a>
    1118:	00 c0       	rjmp	.+0      	; 0x111a <_Z8mainmenuv+0x154>
    111a:	00 00       	nop
    111c:	70 cf       	rjmp	.-288    	; 0xffe <_Z8mainmenuv+0x38>
				lcd_puts(" ");
				lcd_setCursor(0,0);
				lcd_puts(">");
				state=0;
			}
			else if (in==ok)
    111e:	20 91 62 00 	lds	r18, 0x0062
    1122:	30 91 63 00 	lds	r19, 0x0063
    1126:	82 17       	cp	r24, r18
    1128:	93 07       	cpc	r25, r19
    112a:	79 f7       	brne	.-34     	; 0x110a <_Z8mainmenuv+0x144>
    112c:	d1 cf       	rjmp	.-94     	; 0x10d0 <_Z8mainmenuv+0x10a>
    112e:	20 91 62 00 	lds	r18, 0x0062
    1132:	30 91 63 00 	lds	r19, 0x0063
    1136:	82 17       	cp	r24, r18
    1138:	93 07       	cpc	r25, r19
    113a:	39 f7       	brne	.-50     	; 0x110a <_Z8mainmenuv+0x144>
    113c:	df cf       	rjmp	.-66     	; 0x10fc <_Z8mainmenuv+0x136>

0000113e <main>:
	dfood[2]=food[2];
		

}
int main() {
	database_init_test();
    113e:	0e 94 31 03 	call	0x662	; 0x662 <_Z18database_init_testv>
	sei();
    1142:	78 94       	sei
	uart0_init(UART_BAUD_SELECT(9600,F_CPU));
    1144:	87 e6       	ldi	r24, 0x67	; 103
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <_Z10uart0_initj>
	// set up the LCD's number of columns and rows:
	// pinMode(13,OUTPUT);
	
	DDRD&= ~(1<<s_zero);
    114c:	88 98       	cbi	0x11, 0	; 17
	DDRD&= ~(1<<s_one);
    114e:	89 98       	cbi	0x11, 1	; 17
   DDRD&= ~(1<<s_two);
    1150:	8a 98       	cbi	0x11, 2	; 17


	lcd_init();
    1152:	0e 94 91 00 	call	0x122	; 0x122 <_Z8lcd_initv>
	mainmenu();
    1156:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <_Z8mainmenuv>

0000115a <__vector_13>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart0_putc(c);

}/* uart_puts_p */
    115a:	1f 92       	push	r1
    115c:	0f 92       	push	r0
    115e:	0f b6       	in	r0, 0x3f	; 63
    1160:	0f 92       	push	r0
    1162:	11 24       	eor	r1, r1
    1164:	2f 93       	push	r18
    1166:	8f 93       	push	r24
    1168:	9f 93       	push	r25
    116a:	ef 93       	push	r30
    116c:	ff 93       	push	r31
    116e:	8b b1       	in	r24, 0x0b	; 11
    1170:	2c b1       	in	r18, 0x0c	; 12
    1172:	88 71       	andi	r24, 0x18	; 24
    1174:	e0 91 62 04 	lds	r30, 0x0462
    1178:	ef 5f       	subi	r30, 0xFF	; 255
    117a:	ef 71       	andi	r30, 0x1F	; 31
    117c:	90 91 61 04 	lds	r25, 0x0461
    1180:	e9 17       	cp	r30, r25
    1182:	39 f0       	breq	.+14     	; 0x1192 <__vector_13+0x38>
    1184:	e0 93 62 04 	sts	0x0462, r30
    1188:	f0 e0       	ldi	r31, 0x00	; 0
    118a:	eb 59       	subi	r30, 0x9B	; 155
    118c:	fb 4f       	sbci	r31, 0xFB	; 251
    118e:	20 83       	st	Z, r18
    1190:	01 c0       	rjmp	.+2      	; 0x1194 <__vector_13+0x3a>
    1192:	82 e0       	ldi	r24, 0x02	; 2
    1194:	80 93 60 04 	sts	0x0460, r24
    1198:	ff 91       	pop	r31
    119a:	ef 91       	pop	r30
    119c:	9f 91       	pop	r25
    119e:	8f 91       	pop	r24
    11a0:	2f 91       	pop	r18
    11a2:	0f 90       	pop	r0
    11a4:	0f be       	out	0x3f, r0	; 63
    11a6:	0f 90       	pop	r0
    11a8:	1f 90       	pop	r1
    11aa:	18 95       	reti

000011ac <__vector_14>:
    11ac:	1f 92       	push	r1
    11ae:	0f 92       	push	r0
    11b0:	0f b6       	in	r0, 0x3f	; 63
    11b2:	0f 92       	push	r0
    11b4:	11 24       	eor	r1, r1
    11b6:	8f 93       	push	r24
    11b8:	9f 93       	push	r25
    11ba:	ef 93       	push	r30
    11bc:	ff 93       	push	r31
    11be:	90 91 64 04 	lds	r25, 0x0464
    11c2:	80 91 63 04 	lds	r24, 0x0463
    11c6:	98 17       	cp	r25, r24
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <__vector_14+0x36>
    11ca:	e0 91 63 04 	lds	r30, 0x0463
    11ce:	ef 5f       	subi	r30, 0xFF	; 255
    11d0:	ef 71       	andi	r30, 0x1F	; 31
    11d2:	e0 93 63 04 	sts	0x0463, r30
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	eb 57       	subi	r30, 0x7B	; 123
    11da:	fb 4f       	sbci	r31, 0xFB	; 251
    11dc:	80 81       	ld	r24, Z
    11de:	8c b9       	out	0x0c, r24	; 12
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <__vector_14+0x38>
    11e2:	55 98       	cbi	0x0a, 5	; 10
    11e4:	ff 91       	pop	r31
    11e6:	ef 91       	pop	r30
    11e8:	9f 91       	pop	r25
    11ea:	8f 91       	pop	r24
    11ec:	0f 90       	pop	r0
    11ee:	0f be       	out	0x3f, r0	; 63
    11f0:	0f 90       	pop	r0
    11f2:	1f 90       	pop	r1
    11f4:	18 95       	reti

000011f6 <_Z10uart0_initj>:
    11f6:	10 92 64 04 	sts	0x0464, r1
    11fa:	10 92 63 04 	sts	0x0463, r1
    11fe:	10 92 62 04 	sts	0x0462, r1
    1202:	10 92 61 04 	sts	0x0461, r1
    1206:	99 23       	and	r25, r25
    1208:	1c f4       	brge	.+6      	; 0x1210 <_Z10uart0_initj+0x1a>
    120a:	22 e0       	ldi	r18, 0x02	; 2
    120c:	2b b9       	out	0x0b, r18	; 11
    120e:	9f 77       	andi	r25, 0x7F	; 127
    1210:	90 bd       	out	0x20, r25	; 32
    1212:	89 b9       	out	0x09, r24	; 9
    1214:	88 e9       	ldi	r24, 0x98	; 152
    1216:	8a b9       	out	0x0a, r24	; 10
    1218:	86 e8       	ldi	r24, 0x86	; 134
    121a:	80 bd       	out	0x20, r24	; 32
    121c:	08 95       	ret

0000121e <_Z10uart0_getcv>:
    121e:	90 91 62 04 	lds	r25, 0x0462
    1222:	80 91 61 04 	lds	r24, 0x0461
    1226:	98 17       	cp	r25, r24
    1228:	91 f0       	breq	.+36     	; 0x124e <_Z10uart0_getcv+0x30>
    122a:	e0 91 61 04 	lds	r30, 0x0461
    122e:	ef 5f       	subi	r30, 0xFF	; 255
    1230:	ef 71       	andi	r30, 0x1F	; 31
    1232:	e0 93 61 04 	sts	0x0461, r30
    1236:	f0 e0       	ldi	r31, 0x00	; 0
    1238:	eb 59       	subi	r30, 0x9B	; 155
    123a:	fb 4f       	sbci	r31, 0xFB	; 251
    123c:	20 81       	ld	r18, Z
    123e:	80 91 60 04 	lds	r24, 0x0460
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	98 2f       	mov	r25, r24
    1246:	88 27       	eor	r24, r24
    1248:	82 0f       	add	r24, r18
    124a:	91 1d       	adc	r25, r1
    124c:	08 95       	ret
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	08 95       	ret

00001254 <_Z10uart0_putch>:
    1254:	20 91 64 04 	lds	r18, 0x0464
    1258:	2f 5f       	subi	r18, 0xFF	; 255
    125a:	2f 71       	andi	r18, 0x1F	; 31
    125c:	90 91 63 04 	lds	r25, 0x0463
    1260:	29 17       	cp	r18, r25
    1262:	e1 f3       	breq	.-8      	; 0x125c <_Z10uart0_putch+0x8>
    1264:	e2 2f       	mov	r30, r18
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	eb 57       	subi	r30, 0x7B	; 123
    126a:	fb 4f       	sbci	r31, 0xFB	; 251
    126c:	80 83       	st	Z, r24
    126e:	20 93 64 04 	sts	0x0464, r18
    1272:	55 9a       	sbi	0x0a, 5	; 10
    1274:	08 95       	ret

00001276 <_Z15uart0_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart0_available(void)
{
	return (UART_RX_BUFFER_MASK + UART0_RxHead - UART0_RxTail) % UART_RX_BUFFER_MASK;
    1276:	80 91 62 04 	lds	r24, 0x0462
    127a:	20 91 61 04 	lds	r18, 0x0461
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	4f 96       	adiw	r24, 0x1f	; 31
    1282:	82 1b       	sub	r24, r18
    1284:	91 09       	sbc	r25, r1
    1286:	6f e1       	ldi	r22, 0x1F	; 31
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	0e 94 4d 09 	call	0x129a	; 0x129a <__divmodhi4>
}/* uart_available */
    128e:	08 95       	ret

00001290 <_Z11uart0_flushv>:
 Input:    None
 Returns:  None
 **************************************************************************/
void uart0_flush(void)
{
	UART0_RxHead = UART0_RxTail;
    1290:	80 91 61 04 	lds	r24, 0x0461
    1294:	80 93 62 04 	sts	0x0462, r24
    1298:	08 95       	ret

0000129a <__divmodhi4>:
    129a:	97 fb       	bst	r25, 7
    129c:	07 2e       	mov	r0, r23
    129e:	16 f4       	brtc	.+4      	; 0x12a4 <__divmodhi4+0xa>
    12a0:	00 94       	com	r0
    12a2:	07 d0       	rcall	.+14     	; 0x12b2 <__divmodhi4_neg1>
    12a4:	77 fd       	sbrc	r23, 7
    12a6:	09 d0       	rcall	.+18     	; 0x12ba <__divmodhi4_neg2>
    12a8:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__udivmodhi4>
    12ac:	07 fc       	sbrc	r0, 7
    12ae:	05 d0       	rcall	.+10     	; 0x12ba <__divmodhi4_neg2>
    12b0:	3e f4       	brtc	.+14     	; 0x12c0 <__divmodhi4_exit>

000012b2 <__divmodhi4_neg1>:
    12b2:	90 95       	com	r25
    12b4:	81 95       	neg	r24
    12b6:	9f 4f       	sbci	r25, 0xFF	; 255
    12b8:	08 95       	ret

000012ba <__divmodhi4_neg2>:
    12ba:	70 95       	com	r23
    12bc:	61 95       	neg	r22
    12be:	7f 4f       	sbci	r23, 0xFF	; 255

000012c0 <__divmodhi4_exit>:
    12c0:	08 95       	ret

000012c2 <__udivmodhi4>:
    12c2:	aa 1b       	sub	r26, r26
    12c4:	bb 1b       	sub	r27, r27
    12c6:	51 e1       	ldi	r21, 0x11	; 17
    12c8:	07 c0       	rjmp	.+14     	; 0x12d8 <__udivmodhi4_ep>

000012ca <__udivmodhi4_loop>:
    12ca:	aa 1f       	adc	r26, r26
    12cc:	bb 1f       	adc	r27, r27
    12ce:	a6 17       	cp	r26, r22
    12d0:	b7 07       	cpc	r27, r23
    12d2:	10 f0       	brcs	.+4      	; 0x12d8 <__udivmodhi4_ep>
    12d4:	a6 1b       	sub	r26, r22
    12d6:	b7 0b       	sbc	r27, r23

000012d8 <__udivmodhi4_ep>:
    12d8:	88 1f       	adc	r24, r24
    12da:	99 1f       	adc	r25, r25
    12dc:	5a 95       	dec	r21
    12de:	a9 f7       	brne	.-22     	; 0x12ca <__udivmodhi4_loop>
    12e0:	80 95       	com	r24
    12e2:	90 95       	com	r25
    12e4:	bc 01       	movw	r22, r24
    12e6:	cd 01       	movw	r24, r26
    12e8:	08 95       	ret

000012ea <strcpy>:
    12ea:	fb 01       	movw	r30, r22
    12ec:	dc 01       	movw	r26, r24
    12ee:	01 90       	ld	r0, Z+
    12f0:	0d 92       	st	X+, r0
    12f2:	00 20       	and	r0, r0
    12f4:	e1 f7       	brne	.-8      	; 0x12ee <strcpy+0x4>
    12f6:	08 95       	ret

000012f8 <_exit>:
    12f8:	f8 94       	cli

000012fa <__stop_program>:
    12fa:	ff cf       	rjmp	.-2      	; 0x12fa <__stop_program>
